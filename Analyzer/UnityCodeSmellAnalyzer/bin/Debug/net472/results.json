[
  {
    "Name": "AnimationScript",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\AnimationScript.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "AnimationScript",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Start",
            "FullName": "AnimationScript.Start()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "startPosition",
                  "Type": "UnityEngine.Vector3",
                  "Assignment": "transform.position",
                  "Kind": "Assignment",
                  "AssignmentLine": 13,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "transform.position",
                  "Type": "UnityEngine.Vector3",
                  "Kind": "Use",
                  "UseLine": 13,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "startPosition",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 12
          },
          {
            "Name": "Update",
            "FullName": "AnimationScript.Update()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "AnimateConsumable",
                "FullName": "AnimationScript.AnimateConsumable()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\AnimationScript.cs",
                "DefinitionLine": 22,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 20
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 18
          },
          {
            "Name": "AnimateConsumable",
            "FullName": "AnimationScript.AnimateConsumable()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Sin",
                "FullName": "UnityEngine.Mathf.Sin(float)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "Time.time",
                    "IsInvocation": false
                  }
                ],
                "Line": 24
              },
              {
                "Name": "Rotate",
                "FullName": "UnityEngine.Transform.Rotate(UnityEngine.Vector3)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Vector3(0, rotation_speed, 0) * Time.deltaTime",
                    "IsInvocation": true
                  }
                ],
                "Line": 25
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "transform.position",
                  "Type": "UnityEngine.Vector3",
                  "Assignment": "startPosition + new Vector3(0, Mathf.Sin(Time.time) * animation_amp, 0)",
                  "Kind": "Assignment",
                  "AssignmentLine": 23,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "startPosition + new Vector3(0, Mathf.Sin(Time.time) * animation_amp, 0)",
                  "Type": "UnityEngine.Vector3",
                  "Kind": "Use",
                  "UseLine": 23,
                  "UseKind": "BinaryOperator",
                  "AssignedTo": "transform.position",
                  "Value": null,
                  "VariablesList": [
                    {
                      "Name": "startPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "FieldReference",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    },
                    {
                      "Name": "new Vector3(0, Mathf.Sin(Time.time) * animation_amp, 0)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  ]
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 22
          }
        ],
        "Fields": [
          {
            "Name": "animation_amp",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": null,
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 7
          },
          {
            "Name": "rotation_speed",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": null,
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 8
          },
          {
            "Name": "inn",
            "Type": "float[]",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "{0.0f, 0.0f, 0.0f}",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 9
          },
          {
            "Name": "startPosition",
            "Type": "Vector3",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 10
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "Collectible",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\Collectible.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Collectible",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "CooldownFinished",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 16
              }
            ],
            "Methods": [
              {
                "Name": "OnTriggerEnter",
                "FullName": "GameManager.Collectible.OnTriggerEnter(UnityEngine.Collider)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "other",
                    "Type": "Collider",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Deactive",
                    "FullName": "GameManager.Collectible.Deactive()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\Collectible.cs",
                    "DefinitionLine": 31,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 23
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "Active",
                "FullName": "GameManager.Collectible.Active()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 26
              },
              {
                "Name": "Deactive",
                "FullName": "GameManager.Collectible.Deactive()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "AddCollectible",
                    "FullName": "GameManager.ConsumableSpawnManager.AddCollectible(GameManager.Collectible)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ConsumableSpawn\\ConsumableSpawnManager.cs",
                    "DefinitionLine": 14,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "this",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 35
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 36
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "cooldownFinished",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "cooldownInSeconds",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "Literal",
                      "AssignedTo": "cooldownFinished",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cooldownInSeconds",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "FieldReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 31
              },
              {
                "Name": "DoCooldown",
                "FullName": "GameManager.Collectible.DoCooldown()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Active",
                    "FullName": "GameManager.Collectible.Active()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\Collectible.cs",
                    "DefinitionLine": 26,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 45
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "reduction",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cooldownFinished",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reduction",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "FieldReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "Literal",
                      "AssignedTo": "cooldownFinished",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 39
              }
            ],
            "Fields": [
              {
                "Name": "cooldownInSeconds",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "30",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "spawnManager",
                "Type": "ConsumableSpawnManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "reduction",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "timer",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "cooldownFinished",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 14
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "CollectibleCountdown",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\CollectibleCountdown.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CollectibleCountdown",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "MyCollectible",
                "Type": "Collectible",
                "Modifiers": [
                  "public"
                ],
                "Line": 21
              }
            ],
            "Methods": [
              {
                "Name": "SetCooldown",
                "FullName": "GameManager.CollectibleCountdown.SetCooldown()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Deactive",
                    "FullName": "GameManager.Collectible.Deactive()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\Collectible.cs",
                    "DefinitionLine": 31,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 18
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "countdownTimeInSeconds",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inCooldown",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 16,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "countdownTimeInSeconds",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "FieldReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 16,
                      "UseKind": "Literal",
                      "AssignedTo": "inCooldown",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "FixedUpdate",
                "FullName": "GameManager.CollectibleCountdown.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Active",
                    "FullName": "GameManager.Collectible.Active()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\Collectible.cs",
                    "DefinitionLine": 26,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 34
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 29,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inCooldown",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 29,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "Literal",
                      "AssignedTo": "inCooldown",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              }
            ],
            "Fields": [
              {
                "Name": "countdownTimeInSeconds",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "30",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "collectible",
                "Type": "Collectible",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "timer",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "inCooldown",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "CollectibleFeedback",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\CollectibleFeedback.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CollectibleFeedback",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Clip",
                "Type": "AudioClip",
                "Modifiers": [
                  "public"
                ],
                "Line": 12
              },
              {
                "Name": "FeedbackColor",
                "Type": "FeedbackColorOptions",
                "Modifiers": [
                  "public"
                ],
                "Line": 17
              }
            ],
            "Methods": [],
            "Fields": [
              {
                "Name": "onPickupSound",
                "Type": "AudioClip",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "feedbackColor",
                "Type": "FeedbackColorOptions",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "_feedbackColor",
                "Type": "Color",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "_isFeedback",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "WeaponConsumable",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\WeaponConsumable.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WeaponConsumable",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Id",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 13
              },
              {
                "Name": "Ammo",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 17
              }
            ],
            "Methods": [],
            "Fields": [
              {
                "Name": "id",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "ammo",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "HighscoreTable",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\HighscoreTable\\HighscoreTable.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "HighscoreTable",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Awake",
            "FullName": "HighscoreTable.Awake()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"highscoreEntryContainer\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 17
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"highscoreEntryTemplate\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 18
              },
              {
                "Name": "SetActive",
                "FullName": "UnityEngine.GameObject.SetActive(bool)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "false",
                    "IsInvocation": false
                  }
                ],
                "Line": 21
              },
              {
                "Name": "GetString",
                "FullName": "UnityEngine.PlayerPrefs.GetString(string)",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"highscoreTable\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 25
              },
              {
                "Name": "FromJson",
                "FullName": "UnityEngine.JsonUtility.FromJson<HighscoreTable.Highscores>(string)",
                "ReturnType": "Highscores",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.JSONSerializeModule.dll",
                "Arguments": [
                  {
                    "Argument": "jsonString",
                    "IsInvocation": false
                  }
                ],
                "Line": 26
              },
              {
                "Name": "AddHighscoreEntry",
                "FullName": "HighscoreTable.AddHighscoreEntry(int, int, string)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\HighscoreTable\\HighscoreTable.cs",
                "DefinitionLine": 118,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "10",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "1000000",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "\"CMK\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 30
              },
              {
                "Name": "AddHighscoreEntry",
                "FullName": "HighscoreTable.AddHighscoreEntry(int, int, string)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\HighscoreTable\\HighscoreTable.cs",
                "DefinitionLine": 118,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "7",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "897621",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "\"JOE\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 31
              },
              {
                "Name": "AddHighscoreEntry",
                "FullName": "HighscoreTable.AddHighscoreEntry(int, int, string)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\HighscoreTable\\HighscoreTable.cs",
                "DefinitionLine": 118,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "5",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "872931",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "\"DAV\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 32
              },
              {
                "Name": "AddHighscoreEntry",
                "FullName": "HighscoreTable.AddHighscoreEntry(int, int, string)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\HighscoreTable\\HighscoreTable.cs",
                "DefinitionLine": 118,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "12",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "785123",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "\"CAT\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 33
              },
              {
                "Name": "AddHighscoreEntry",
                "FullName": "HighscoreTable.AddHighscoreEntry(int, int, string)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\HighscoreTable\\HighscoreTable.cs",
                "DefinitionLine": 118,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "22",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "542024",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "\"MAX\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 34
              },
              {
                "Name": "AddHighscoreEntry",
                "FullName": "HighscoreTable.AddHighscoreEntry(int, int, string)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\HighscoreTable\\HighscoreTable.cs",
                "DefinitionLine": 118,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "4",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "68245",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "\"AAA\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 35
              },
              {
                "Name": "GetString",
                "FullName": "UnityEngine.PlayerPrefs.GetString(string)",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"highscoreTable\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 37
              },
              {
                "Name": "FromJson",
                "FullName": "UnityEngine.JsonUtility.FromJson<HighscoreTable.Highscores>(string)",
                "ReturnType": "Highscores",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.JSONSerializeModule.dll",
                "Arguments": [
                  {
                    "Argument": "jsonString",
                    "IsInvocation": false
                  }
                ],
                "Line": 38
              },
              {
                "Name": "CreateHighscoreEntryTransform",
                "FullName": "HighscoreTable.CreateHighscoreEntryTransform(HighscoreTable.HighscoreEntry, UnityEngine.Transform, System.Collections.Generic.List<UnityEngine.Transform>)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\HighscoreTable\\HighscoreTable.cs",
                "DefinitionLine": 61,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "highscoreEntry",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "entryContainer",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "highscoreEntryTransformList",
                    "IsInvocation": false
                  }
                ],
                "Line": 55
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "jsonString",
                  "Type": "string",
                  "Assignment": "PlayerPrefs.GetString(\"highscoreTable\")",
                  "Kind": "Definition",
                  "DefinitionLine": 24
                }
              },
              {
                "Variable": {
                  "Name": "highscores",
                  "Type": "Highscores",
                  "Assignment": "JsonUtility.FromJson<Highscores>(jsonString)",
                  "Kind": "Definition",
                  "DefinitionLine": 25
                }
              },
              {
                "Variable": {
                  "Name": "i",
                  "Type": "int",
                  "Assignment": "0",
                  "Kind": "Definition",
                  "DefinitionLine": 41
                }
              },
              {
                "Variable": {
                  "Name": "j",
                  "Type": "int",
                  "Assignment": "i + 1",
                  "Kind": "Definition",
                  "DefinitionLine": 42
                }
              },
              {
                "Variable": {
                  "Name": "tmp",
                  "Type": "HighscoreEntry",
                  "Assignment": "highscores.highscoreEntryList[i]",
                  "Kind": "Definition",
                  "DefinitionLine": 45
                }
              },
              {
                "Variable": {
                  "Name": "entryContainer",
                  "Type": "UnityEngine.Transform",
                  "Assignment": "transform.Find(\"highscoreEntryContainer\")",
                  "Kind": "Assignment",
                  "AssignmentLine": 16,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTemplate",
                  "Type": "UnityEngine.Transform",
                  "Assignment": "entryContainer.Find(\"highscoreEntryTemplate\")",
                  "Kind": "Assignment",
                  "AssignmentLine": 17,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "jsonString",
                  "Type": "string",
                  "Assignment": "PlayerPrefs.GetString(\"highscoreTable\")",
                  "Kind": "Assignment",
                  "AssignmentLine": 36,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "highscores",
                  "Type": "HighscoreTable.Highscores",
                  "Assignment": "JsonUtility.FromJson<Highscores>(jsonString)",
                  "Kind": "Assignment",
                  "AssignmentLine": 37,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "highscores.highscoreEntryList[i]",
                  "Type": "HighscoreTable.HighscoreEntry",
                  "Assignment": "highscores.highscoreEntryList[j]",
                  "Kind": "Assignment",
                  "AssignmentLine": 46,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "highscores.highscoreEntryList[j]",
                  "Type": "HighscoreTable.HighscoreEntry",
                  "Assignment": "tmp",
                  "Kind": "Assignment",
                  "AssignmentLine": 47,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "highscoreEntryTransformList",
                  "Type": "System.Collections.Generic.List<UnityEngine.Transform>",
                  "Assignment": "new List<Transform>()",
                  "Kind": "Assignment",
                  "AssignmentLine": 52,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "transform.Find(\"highscoreEntryContainer\")",
                  "Type": "UnityEngine.Transform",
                  "Kind": "Use",
                  "UseLine": 16,
                  "UseKind": "Invocation",
                  "AssignedTo": "entryContainer",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "entryContainer.Find(\"highscoreEntryTemplate\")",
                  "Type": "UnityEngine.Transform",
                  "Kind": "Use",
                  "UseLine": 17,
                  "UseKind": "Invocation",
                  "AssignedTo": "entryTemplate",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "PlayerPrefs.GetString(\"highscoreTable\")",
                  "Type": "string",
                  "Kind": "Use",
                  "UseLine": 36,
                  "UseKind": "Invocation",
                  "AssignedTo": "jsonString",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "JsonUtility.FromJson<Highscores>(jsonString)",
                  "Type": "HighscoreTable.Highscores",
                  "Kind": "Use",
                  "UseLine": 37,
                  "UseKind": "Invocation",
                  "AssignedTo": "highscores",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "highscores.highscoreEntryList[j]",
                  "Type": "HighscoreTable.HighscoreEntry",
                  "Kind": "Use",
                  "UseLine": 46,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "highscores.highscoreEntryList[i]",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "tmp",
                  "Type": "HighscoreTable.HighscoreEntry",
                  "Kind": "Use",
                  "UseLine": 47,
                  "UseKind": "LocalReference",
                  "AssignedTo": "highscores.highscoreEntryList[j]",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "new List<Transform>()",
                  "Type": "System.Collections.Generic.List<UnityEngine.Transform>",
                  "Kind": "Use",
                  "UseLine": 52,
                  "UseKind": "ObjectCreation",
                  "AssignedTo": "highscoreEntryTransformList",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 14
          },
          {
            "Name": "CreateHighscoreEntryTransform",
            "FullName": "HighscoreTable.CreateHighscoreEntryTransform(HighscoreTable.HighscoreEntry, UnityEngine.Transform, System.Collections.Generic.List<UnityEngine.Transform>)",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "highscoreEntry",
                "Type": "HighscoreEntry",
                "Assignment": null
              },
              {
                "Name": "container",
                "Type": "Transform",
                "Assignment": null
              },
              {
                "Name": "transformList",
                "Type": "List<Transform>",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "Instantiate",
                "FullName": "UnityEngine.Object.Instantiate<UnityEngine.Transform>(UnityEngine.Transform, UnityEngine.Transform)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "entryTemplate",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "container",
                    "IsInvocation": false
                  }
                ],
                "Line": 63
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.RectTransform>()",
                "ReturnType": "RectTransform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 64
              },
              {
                "Name": "SetActive",
                "FullName": "UnityEngine.GameObject.SetActive(bool)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "true",
                    "IsInvocation": false
                  }
                ],
                "Line": 66
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Text>()",
                "ReturnType": "Text",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 79
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"posText\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 79
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Text>()",
                "ReturnType": "Text",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 83
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"scoreText\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 83
              },
              {
                "Name": "ToString",
                "FullName": "int.ToString()",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [],
                "Line": 83
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Text>()",
                "ReturnType": "Text",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 86
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"nameText\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 86
              },
              {
                "Name": "SetActive",
                "FullName": "UnityEngine.GameObject.SetActive(bool)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "rank % 2 == 1",
                    "IsInvocation": true
                  }
                ],
                "Line": 89
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"background\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 89
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Text>()",
                "ReturnType": "Text",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 93
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"posText\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 93
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Text>()",
                "ReturnType": "Text",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 94
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"scoreText\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 94
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Text>()",
                "ReturnType": "Text",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 95
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"nameText\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 95
              },
              {
                "Name": "SetActive",
                "FullName": "UnityEngine.GameObject.SetActive(bool)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "false",
                    "IsInvocation": false
                  }
                ],
                "Line": 101
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"trophy\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 101
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Image>()",
                "ReturnType": "Image",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 104
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"trophy\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 104
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Image>()",
                "ReturnType": "Image",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 107
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"trophy\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 107
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Image>()",
                "ReturnType": "Image",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 110
              },
              {
                "Name": "Find",
                "FullName": "UnityEngine.Transform.Find(string)",
                "ReturnType": "Transform",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"trophy\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 110
              },
              {
                "Name": "Add",
                "FullName": "System.Collections.Generic.List<UnityEngine.Transform>.Add(UnityEngine.Transform)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "entryTransform",
                    "IsInvocation": false
                  }
                ],
                "Line": 115
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "templateHeight",
                  "Type": "float",
                  "Assignment": "31f",
                  "Kind": "Definition",
                  "DefinitionLine": 61
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform",
                  "Type": "Transform",
                  "Assignment": "Instantiate(entryTemplate, container)",
                  "Kind": "Definition",
                  "DefinitionLine": 62
                }
              },
              {
                "Variable": {
                  "Name": "entryRectTransform",
                  "Type": "RectTransform",
                  "Assignment": "entryTransform.GetComponent<RectTransform>()",
                  "Kind": "Definition",
                  "DefinitionLine": 63
                }
              },
              {
                "Variable": {
                  "Name": "rank",
                  "Type": "int",
                  "Assignment": "transformList.Count + 1",
                  "Kind": "Definition",
                  "DefinitionLine": 67
                }
              },
              {
                "Variable": {
                  "Name": "rankString",
                  "Type": "string",
                  "Assignment": null,
                  "Kind": "Definition",
                  "DefinitionLine": 68
                }
              },
              {
                "Variable": {
                  "Name": "score",
                  "Type": "int",
                  "Assignment": "highscoreEntry.kills",
                  "Kind": "Definition",
                  "DefinitionLine": 80
                }
              },
              {
                "Variable": {
                  "Name": "name",
                  "Type": "string",
                  "Assignment": "highscoreEntry.name",
                  "Kind": "Definition",
                  "DefinitionLine": 84
                }
              },
              {
                "Variable": {
                  "Name": "entryRectTransform.anchoredPosition",
                  "Type": "UnityEngine.Vector2",
                  "Assignment": "new Vector2(0, -templateHeight * transformList.Count)",
                  "Kind": "Assignment",
                  "AssignmentLine": 64,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rankString",
                  "Type": "string",
                  "Assignment": "rank + \"TH\"",
                  "Kind": "Assignment",
                  "AssignmentLine": 71,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rankString",
                  "Type": "string",
                  "Assignment": "\"1ST\"",
                  "Kind": "Assignment",
                  "AssignmentLine": 73,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rankString",
                  "Type": "string",
                  "Assignment": "\"2ND\"",
                  "Kind": "Assignment",
                  "AssignmentLine": 74,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rankString",
                  "Type": "string",
                  "Assignment": "\"3RD\"",
                  "Kind": "Assignment",
                  "AssignmentLine": 75,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform.Find(\"posText\").GetComponent<Text>().text",
                  "Type": "?",
                  "Assignment": "rankString",
                  "Kind": "Assignment",
                  "AssignmentLine": 78,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform.Find(\"scoreText\").GetComponent<Text>().text",
                  "Type": "?",
                  "Assignment": "score.ToString()",
                  "Kind": "Assignment",
                  "AssignmentLine": 82,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform.Find(\"nameText\").GetComponent<Text>().text",
                  "Type": "?",
                  "Assignment": "name",
                  "Kind": "Assignment",
                  "AssignmentLine": 85,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform.Find(\"posText\").GetComponent<Text>().color",
                  "Type": "?",
                  "Assignment": "Color.green",
                  "Kind": "Assignment",
                  "AssignmentLine": 92,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform.Find(\"scoreText\").GetComponent<Text>().color",
                  "Type": "?",
                  "Assignment": "Color.green",
                  "Kind": "Assignment",
                  "AssignmentLine": 93,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform.Find(\"nameText\").GetComponent<Text>().color",
                  "Type": "?",
                  "Assignment": "Color.green",
                  "Kind": "Assignment",
                  "AssignmentLine": 94,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform.Find(\"trophy\").GetComponent<Image>().color",
                  "Type": "?",
                  "Assignment": "new Color(237, 240, 45, 1)",
                  "Kind": "Assignment",
                  "AssignmentLine": 103,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform.Find(\"trophy\").GetComponent<Image>().color",
                  "Type": "?",
                  "Assignment": "new Color(150, 150, 134, 1)",
                  "Kind": "Assignment",
                  "AssignmentLine": 106,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "entryTransform.Find(\"trophy\").GetComponent<Image>().color",
                  "Type": "?",
                  "Assignment": "new Color(216, 176, 33, 1)",
                  "Kind": "Assignment",
                  "AssignmentLine": 109,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "new Vector2(0, -templateHeight * transformList.Count)",
                  "Type": "UnityEngine.Vector2",
                  "Kind": "Use",
                  "UseLine": 64,
                  "UseKind": "ObjectCreation",
                  "AssignedTo": "entryRectTransform.anchoredPosition",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "rank + \"TH\"",
                  "Type": "string",
                  "Kind": "Use",
                  "UseLine": 71,
                  "UseKind": "BinaryOperator",
                  "AssignedTo": "rankString",
                  "Value": null,
                  "VariablesList": [
                    {
                      "Name": "rank",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 71,
                      "UseKind": "LocalReference",
                      "AssignedTo": "rankString",
                      "Value": null,
                      "VariablesList": []
                    },
                    {
                      "Name": null,
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 71,
                      "UseKind": "Literal",
                      "AssignedTo": "rankString",
                      "Value": "\"TH\"",
                      "VariablesList": []
                    }
                  ]
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "string",
                  "Kind": "Use",
                  "UseLine": 73,
                  "UseKind": "Literal",
                  "AssignedTo": "rankString",
                  "Value": "\"1ST\"",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "string",
                  "Kind": "Use",
                  "UseLine": 74,
                  "UseKind": "Literal",
                  "AssignedTo": "rankString",
                  "Value": "\"2ND\"",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "string",
                  "Kind": "Use",
                  "UseLine": 75,
                  "UseKind": "Literal",
                  "AssignedTo": "rankString",
                  "Value": "\"3RD\"",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "rankString",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 78,
                  "UseKind": "LocalReference",
                  "AssignedTo": "entryTransform.Find(\"posText\").GetComponent<Text>().text",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "score.ToString()",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 82,
                  "UseKind": "Invocation",
                  "AssignedTo": "entryTransform.Find(\"scoreText\").GetComponent<Text>().text",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "name",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 85,
                  "UseKind": "LocalReference",
                  "AssignedTo": "entryTransform.Find(\"nameText\").GetComponent<Text>().text",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Color.green",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 92,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "entryTransform.Find(\"posText\").GetComponent<Text>().color",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Color.green",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 93,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "entryTransform.Find(\"scoreText\").GetComponent<Text>().color",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Color.green",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 94,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "entryTransform.Find(\"nameText\").GetComponent<Text>().color",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "new Color(237, 240, 45, 1)",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 103,
                  "UseKind": "ObjectCreation",
                  "AssignedTo": "entryTransform.Find(\"trophy\").GetComponent<Image>().color",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "new Color(150, 150, 134, 1)",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 106,
                  "UseKind": "ObjectCreation",
                  "AssignedTo": "entryTransform.Find(\"trophy\").GetComponent<Image>().color",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "new Color(216, 176, 33, 1)",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 109,
                  "UseKind": "ObjectCreation",
                  "AssignedTo": "entryTransform.Find(\"trophy\").GetComponent<Image>().color",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 61
          },
          {
            "Name": "AddHighscoreEntry",
            "FullName": "HighscoreTable.AddHighscoreEntry(int, int, string)",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "kills",
                "Type": "int",
                "Assignment": null
              },
              {
                "Name": "score",
                "Type": "int",
                "Assignment": null
              },
              {
                "Name": "name",
                "Type": "string",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "GetString",
                "FullName": "UnityEngine.PlayerPrefs.GetString(string)",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"highscoreTable\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 123
              },
              {
                "Name": "FromJson",
                "FullName": "UnityEngine.JsonUtility.FromJson<HighscoreTable.Highscores>(string)",
                "ReturnType": "Highscores",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.JSONSerializeModule.dll",
                "Arguments": [
                  {
                    "Argument": "jsonString",
                    "IsInvocation": false
                  }
                ],
                "Line": 124
              },
              {
                "Name": "Add",
                "FullName": "System.Collections.Generic.List<HighscoreTable.HighscoreEntry>.Add(HighscoreTable.HighscoreEntry)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "highscoreEntry",
                    "IsInvocation": false
                  }
                ],
                "Line": 133
              },
              {
                "Name": "ToJson",
                "FullName": "UnityEngine.JsonUtility.ToJson(object)",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.JSONSerializeModule.dll",
                "Arguments": [
                  {
                    "Argument": "highscores",
                    "IsInvocation": false
                  }
                ],
                "Line": 136
              },
              {
                "Name": "SetString",
                "FullName": "UnityEngine.PlayerPrefs.SetString(string, string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"highscoreTable\"",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "json",
                    "IsInvocation": false
                  }
                ],
                "Line": 137
              },
              {
                "Name": "Save",
                "FullName": "UnityEngine.PlayerPrefs.Save()",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 138
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "highscoreEntry",
                  "Type": "HighscoreEntry",
                  "Assignment": "new HighscoreEntry { kills = kills, score = score, name = name }",
                  "Kind": "Definition",
                  "DefinitionLine": 119
                }
              },
              {
                "Variable": {
                  "Name": "jsonString",
                  "Type": "string",
                  "Assignment": "PlayerPrefs.GetString(\"highscoreTable\")",
                  "Kind": "Definition",
                  "DefinitionLine": 122
                }
              },
              {
                "Variable": {
                  "Name": "highscores",
                  "Type": "Highscores",
                  "Assignment": "JsonUtility.FromJson<Highscores>(jsonString)",
                  "Kind": "Definition",
                  "DefinitionLine": 123
                }
              },
              {
                "Variable": {
                  "Name": "json",
                  "Type": "string",
                  "Assignment": "JsonUtility.ToJson(highscores)",
                  "Kind": "Definition",
                  "DefinitionLine": 135
                }
              },
              {
                "Variable": {
                  "Name": "kills",
                  "Type": "int",
                  "Assignment": "kills",
                  "Kind": "Assignment",
                  "AssignmentLine": 119,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "score",
                  "Type": "int",
                  "Assignment": "score",
                  "Kind": "Assignment",
                  "AssignmentLine": 119,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "name",
                  "Type": "string",
                  "Assignment": "name",
                  "Kind": "Assignment",
                  "AssignmentLine": 119,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "highscores",
                  "Type": "HighscoreTable.Highscores",
                  "Assignment": "new Highscores() {\r\n                highscoreEntryList = new List<HighscoreEntry>()\r\n            }",
                  "Kind": "Assignment",
                  "AssignmentLine": 126,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "highscoreEntryList",
                  "Type": "System.Collections.Generic.List<HighscoreTable.HighscoreEntry>",
                  "Assignment": "new List<HighscoreEntry>()",
                  "Kind": "Assignment",
                  "AssignmentLine": 127,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "kills",
                  "Type": "int",
                  "Kind": "Use",
                  "UseLine": 119,
                  "UseKind": "ParameterReference",
                  "AssignedTo": "kills",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "score",
                  "Type": "int",
                  "Kind": "Use",
                  "UseLine": 119,
                  "UseKind": "ParameterReference",
                  "AssignedTo": "score",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "name",
                  "Type": "string",
                  "Kind": "Use",
                  "UseLine": 119,
                  "UseKind": "ParameterReference",
                  "AssignedTo": "name",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "new Highscores() {\r\n                highscoreEntryList = new List<HighscoreEntry>()\r\n            }",
                  "Type": "HighscoreTable.Highscores",
                  "Kind": "Use",
                  "UseLine": 126,
                  "UseKind": "ObjectCreation",
                  "AssignedTo": "highscores",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "new List<HighscoreEntry>()",
                  "Type": "System.Collections.Generic.List<HighscoreTable.HighscoreEntry>",
                  "Kind": "Use",
                  "UseLine": 127,
                  "UseKind": "ObjectCreation",
                  "AssignedTo": "highscoreEntryList",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 118
          }
        ],
        "Fields": [
          {
            "Name": "entryContainer",
            "Type": "Transform",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 10
          },
          {
            "Name": "entryTemplate",
            "Type": "Transform",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 11
          },
          {
            "Name": "highscoreEntryTransformList",
            "Type": "List<Transform>",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 12
          },
          {
            "Name": "highscoreEntryList",
            "Type": "List<HighscoreEntry>",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 143
          },
          {
            "Name": "score",
            "Type": "int",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 149
          },
          {
            "Name": "kills",
            "Type": "int",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 150
          },
          {
            "Name": "name",
            "Type": "string",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 151
          }
        ],
        "Line": 8
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 3
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 4
      },
      {
        "Name": "UnityEngine",
        "Line": 5
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 6
      }
    ],
    "Line": 3
  },
  {
    "Name": "CharacterStatus",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\CharacterStatus.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CharacterStatus",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "IsPaused",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 31
              },
              {
                "Name": "ScoreTable",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 36
              },
              {
                "Name": "IsAlive",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 41
              },
              {
                "Name": "IsChangingWeaponsPre",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 47
              },
              {
                "Name": "IsChangingWeaponsNext",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 52
              },
              {
                "Name": "Activate",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 57
              },
              {
                "Name": "ActivatePre",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 62
              },
              {
                "Name": "ActivateNext",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 67
              },
              {
                "Name": "IsMoving",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 72
              },
              {
                "Name": "IsJumping",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 77
              },
              {
                "Name": "IsFiring",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 81
              },
              {
                "Name": "IsRunning",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 85
              },
              {
                "Name": "IsRotating",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 90
              },
              {
                "Name": "Movement",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Line": 94
              },
              {
                "Name": "Rotation",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Line": 98
              }
            ],
            "Methods": [
              {
                "Name": "Update",
                "FullName": "Character.CharacterStatus.Update()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isMoving",
                      "Type": "bool",
                      "Assignment": "(movement.z != 0 || movement.x != 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 103,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isRotating",
                      "Type": "bool",
                      "Assignment": "(rotation.y != 0 || rotation.x != 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 104,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(movement.z != 0 || movement.x != 0)",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 103,
                      "UseKind": null,
                      "AssignedTo": "isMoving",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(rotation.y != 0 || rotation.x != 0)",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 104,
                      "UseKind": null,
                      "AssignedTo": "isRotating",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 102
              },
              {
                "Name": "OnScoreTable",
                "FullName": "Character.CharacterStatus.OnScoreTable(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "scoreTable",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 109,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "scoreTable",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 110,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 109,
                      "UseKind": "Literal",
                      "AssignedTo": "scoreTable",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 110,
                      "UseKind": "Literal",
                      "AssignedTo": "scoreTable",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 108
              },
              {
                "Name": "OnActivate",
                "FullName": "Character.CharacterStatus.OnActivate(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "activate",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 115,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activate",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 116,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 115,
                      "UseKind": "Literal",
                      "AssignedTo": "activate",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 116,
                      "UseKind": "Literal",
                      "AssignedTo": "activate",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 114
              },
              {
                "Name": "OnActivatePre",
                "FullName": "Character.CharacterStatus.OnActivatePre(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "activatePre",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 121,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activatePre",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 122,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 121,
                      "UseKind": "Literal",
                      "AssignedTo": "activatePre",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 122,
                      "UseKind": "Literal",
                      "AssignedTo": "activatePre",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 120
              },
              {
                "Name": "OnActivateNext",
                "FullName": "Character.CharacterStatus.OnActivateNext(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "activateNext",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 127,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activateNext",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 128,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 127,
                      "UseKind": "Literal",
                      "AssignedTo": "activateNext",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 128,
                      "UseKind": "Literal",
                      "AssignedTo": "activateNext",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 126
              },
              {
                "Name": "OnMove",
                "FullName": "Character.CharacterStatus.OnMove(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 134
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "inputs",
                      "Type": "Vector2",
                      "Assignment": "value.ReadValue<Vector2>()",
                      "Kind": "Definition",
                      "DefinitionLine": 133
                    }
                  },
                  {
                    "Variable": {
                      "Name": "movement.z",
                      "Type": "float",
                      "Assignment": "inputs.y * walkSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 134,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "movement.x",
                      "Type": "float",
                      "Assignment": "inputs.x * walkSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 135,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputs.y * walkSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 134,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "movement.z",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "inputs.y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 134,
                          "UseKind": "FieldReference",
                          "AssignedTo": "movement.z",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "walkSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 134,
                          "UseKind": "FieldReference",
                          "AssignedTo": "movement.z",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputs.x * walkSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 135,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "movement.x",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "inputs.x",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 135,
                          "UseKind": "FieldReference",
                          "AssignedTo": "movement.x",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "walkSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 135,
                          "UseKind": "FieldReference",
                          "AssignedTo": "movement.x",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 132
              },
              {
                "Name": "OnRun",
                "FullName": "Character.CharacterStatus.OnRun(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isRunning",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 140,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isRunning",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 141,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 140,
                      "UseKind": "Literal",
                      "AssignedTo": "isRunning",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 141,
                      "UseKind": "Literal",
                      "AssignedTo": "isRunning",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 139
              },
              {
                "Name": "OnLook",
                "FullName": "Character.CharacterStatus.OnLook(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 147
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "rotation.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-cameraClamp",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "cameraClamp",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 150
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "inputs",
                      "Type": "Vector3",
                      "Assignment": "value.ReadValue<Vector2>()",
                      "Kind": "Definition",
                      "DefinitionLine": 146
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rotation.x",
                      "Type": "float",
                      "Assignment": "inputs.x * rotationSensitivity",
                      "Kind": "Assignment",
                      "AssignmentLine": 147,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rotation.y",
                      "Type": "float",
                      "Assignment": "inputs.y * rotationSensitivity",
                      "Kind": "Assignment",
                      "AssignmentLine": 148,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rotation.y",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(rotation.y, -cameraClamp, cameraClamp)",
                      "Kind": "Assignment",
                      "AssignmentLine": 149,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputs.x * rotationSensitivity",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 147,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "rotation.x",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "inputs.x",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 147,
                          "UseKind": "FieldReference",
                          "AssignedTo": "rotation.x",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "rotationSensitivity",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 147,
                          "UseKind": "FieldReference",
                          "AssignedTo": "rotation.x",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputs.y * rotationSensitivity",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 148,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "rotation.y",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "inputs.y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 148,
                          "UseKind": "FieldReference",
                          "AssignedTo": "rotation.y",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "rotationSensitivity",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 148,
                          "UseKind": "FieldReference",
                          "AssignedTo": "rotation.y",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(rotation.y, -cameraClamp, cameraClamp)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 149,
                      "UseKind": "Invocation",
                      "AssignedTo": "rotation.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 145
              },
              {
                "Name": "OnJump",
                "FullName": "Character.CharacterStatus.OnJump(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isJumping",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 154,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isJumping",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 155,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 154,
                      "UseKind": "Literal",
                      "AssignedTo": "isJumping",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 155,
                      "UseKind": "Literal",
                      "AssignedTo": "isJumping",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 153
              },
              {
                "Name": "OnFire",
                "FullName": "Character.CharacterStatus.OnFire(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isFiring",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 160,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isFiring",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 161,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 160,
                      "UseKind": "Literal",
                      "AssignedTo": "isFiring",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 161,
                      "UseKind": "Literal",
                      "AssignedTo": "isFiring",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 159
              },
              {
                "Name": "OnChangeWeaponPre",
                "FullName": "Character.CharacterStatus.OnChangeWeaponPre(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isChangingWeaponPre",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 165,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isChangingWeaponPre",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 166,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 165,
                      "UseKind": "Literal",
                      "AssignedTo": "isChangingWeaponPre",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 166,
                      "UseKind": "Literal",
                      "AssignedTo": "isChangingWeaponPre",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 164
              },
              {
                "Name": "OnChangeWeaponNext",
                "FullName": "Character.CharacterStatus.OnChangeWeaponNext(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isChangingWeaponNext",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 171,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isChangingWeaponNext",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 172,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 171,
                      "UseKind": "Literal",
                      "AssignedTo": "isChangingWeaponNext",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 172,
                      "UseKind": "Literal",
                      "AssignedTo": "isChangingWeaponNext",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 170
              },
              {
                "Name": "OnPause",
                "FullName": "Character.CharacterStatus.OnPause(InputAction.CallbackContext)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "InputAction.CallbackContext",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isPaused",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 177,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isPaused",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 178,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 177,
                      "UseKind": "Literal",
                      "AssignedTo": "isPaused",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 178,
                      "UseKind": "Literal",
                      "AssignedTo": "isPaused",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 176
              }
            ],
            "Fields": [
              {
                "Name": "walkSpeed",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "15.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "rotationSensitivity",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0.2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "cameraClamp",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "25.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "isMoving",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "isRotating",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "isRunning",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "isJumping",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "isFiring",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "isChangingWeaponPre",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "isChangingWeaponNext",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "isAlive",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "activate",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "activatePre",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "activateNext",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "scoreTable",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "isPaused",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "movement",
                "Type": "Vector3",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "rotation",
                "Type": "Vector3",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "lifeManager",
                "Type": "PlayerLifeManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 29
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 7
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.InputSystem",
        "Line": 4
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "MovePlayer",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "MovePlayer",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.MovePlayer.Awake()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DisableMouseInput",
                    "FullName": "Character.MovePlayer.DisableMouseInput()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 113,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 36
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 37
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 38
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 39
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "_charController",
                      "Type": "UnityEngine.CharacterController",
                      "Assignment": "GetComponent<CharacterController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "status",
                      "Type": "Character.CharacterStatus",
                      "Assignment": "GetComponent<CharacterStatus>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pms",
                      "Type": "Character.PlayerManagerScript",
                      "Assignment": "GetComponent<PlayerManagerScript>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CharacterController>()",
                      "Type": "UnityEngine.CharacterController",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "Invalid",
                      "AssignedTo": "_charController",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CharacterStatus>()",
                      "Type": "Character.CharacterStatus",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "Invalid",
                      "AssignedTo": "status",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<PlayerManagerScript>()",
                      "Type": "Character.PlayerManagerScript",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "Invalid",
                      "AssignedTo": "pms",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 34
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.MovePlayer.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DisableMouseInput",
                    "FullName": "Character.MovePlayer.DisableMouseInput()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 113,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 44
                  },
                  {
                    "Name": "VerticalVelocityCalc",
                    "FullName": "Character.MovePlayer.VerticalVelocityCalc()",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 150,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 49
                  },
                  {
                    "Name": "RotateChar",
                    "FullName": "Character.MovePlayer.RotateChar(float, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 159,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "status.Rotation.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "status.Rotation.y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "ComputateFeature",
                    "FullName": "Character.MovePlayer.ComputateFeature(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 84,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "SPEED",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "ComputateFeature",
                    "FullName": "Character.MovePlayer.ComputateFeature(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 84,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "JUMP",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 72
                  },
                  {
                    "Name": "Sqrt",
                    "FullName": "UnityEngine.Mathf.Sqrt(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "_jump * 2 * _gravity",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 73
                  },
                  {
                    "Name": "AnimatorSpeed",
                    "FullName": "Character.MovePlayer.AnimatorSpeed(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 89,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "movement",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 78
                  },
                  {
                    "Name": "MoveChar",
                    "FullName": "Character.MovePlayer.MoveChar(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 144,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "movement",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 79
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "movement",
                      "Type": "Vector3",
                      "Assignment": "new Vector3(0, 0, 0)",
                      "Kind": "Definition",
                      "DefinitionLine": 46
                    }
                  },
                  {
                    "Variable": {
                      "Name": "verticalVelocity",
                      "Type": "float",
                      "Assignment": "VerticalVelocityCalc()",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_currentSpeed",
                      "Type": "float",
                      "Assignment": "_baseSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_currentSpeed",
                      "Type": "float",
                      "Assignment": "_runSpeedBuff",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_speed",
                      "Type": "float",
                      "Assignment": "_currentSpeed * ComputateFeature(SPEED)",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "movement.z",
                      "Type": "float",
                      "Assignment": "status.Movement.z * _speed * Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "movement.x",
                      "Type": "float",
                      "Assignment": "status.Movement.x * _speed * Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "groundedTimer",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 70,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_jump",
                      "Type": "float",
                      "Assignment": "_baseJump * ComputateFeature(JUMP)",
                      "Kind": "Assignment",
                      "AssignmentLine": 71,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "verticalVelocity",
                      "Type": "float",
                      "Assignment": "Mathf.Sqrt(_jump * 2 * _gravity)",
                      "Kind": "Assignment",
                      "AssignmentLine": 72,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "movement.y",
                      "Type": "float",
                      "Assignment": "verticalVelocity",
                      "Kind": "Assignment",
                      "AssignmentLine": 76,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "VerticalVelocityCalc()",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Invocation",
                      "AssignedTo": "verticalVelocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_baseSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "FieldReference",
                      "AssignedTo": "_currentSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_runSpeedBuff",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "FieldReference",
                      "AssignedTo": "_currentSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_currentSpeed * ComputateFeature(SPEED)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "_speed",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "_currentSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 58,
                          "UseKind": "FieldReference",
                          "AssignedTo": "_speed",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "ComputateFeature(SPEED)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 58,
                          "UseKind": "Invocation",
                          "AssignedTo": "_speed",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "status.Movement.z * _speed * Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "movement.z",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "status.Movement.z * _speed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 62,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "movement.z",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "status.Movement.z",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 62,
                              "UseKind": "FieldReference",
                              "AssignedTo": "movement.z",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "_speed",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 62,
                              "UseKind": "FieldReference",
                              "AssignedTo": "movement.z",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "Time.deltaTime",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 62,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "movement.z",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "status.Movement.x * _speed * Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "movement.x",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "status.Movement.x * _speed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 63,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "movement.x",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "status.Movement.x",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 63,
                              "UseKind": "FieldReference",
                              "AssignedTo": "movement.x",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "_speed",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 63,
                              "UseKind": "FieldReference",
                              "AssignedTo": "movement.x",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "Time.deltaTime",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 63,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "movement.x",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 70,
                      "UseKind": "Literal",
                      "AssignedTo": "groundedTimer",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_baseJump * ComputateFeature(JUMP)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 71,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "_jump",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "_baseJump",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 71,
                          "UseKind": "FieldReference",
                          "AssignedTo": "_jump",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "ComputateFeature(JUMP)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 71,
                          "UseKind": "Invocation",
                          "AssignedTo": "_jump",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Sqrt(_jump * 2 * _gravity)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 72,
                      "UseKind": "Invocation",
                      "AssignedTo": "verticalVelocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "verticalVelocity",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 76,
                      "UseKind": "FieldReference",
                      "AssignedTo": "movement.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 42
              },
              {
                "Name": "ComputateFeature",
                "FullName": "Character.MovePlayer.ComputateFeature(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.PlayerManagerScript.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 272,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "feature",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 86
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 84
              },
              {
                "Name": "AnimatorSpeed",
                "FullName": "Character.MovePlayer.AnimatorSpeed(UnityEngine.Vector3)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "movement",
                    "Type": "Vector3",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 91
                  },
                  {
                    "Name": "CheckParameterExists",
                    "FullName": "Character.MovePlayer.CheckParameterExists(UnityEngine.Animator, string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 96,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "animator",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"speed\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 93
                  },
                  {
                    "Name": "SetFloat",
                    "FullName": "UnityEngine.Animator.SetFloat(string, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"speed\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "_animSpeed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 93
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "animator",
                      "Type": "UnityEngine.Animator",
                      "Assignment": "pms.GetComponent<Animator>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 90,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_animSpeed",
                      "Type": "float",
                      "Assignment": "movement.z",
                      "Kind": "Assignment",
                      "AssignmentLine": 91,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pms.GetComponent<Animator>()",
                      "Type": "UnityEngine.Animator",
                      "Kind": "Use",
                      "UseLine": 90,
                      "UseKind": "Invalid",
                      "AssignedTo": "animator",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "movement.z",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 91,
                      "UseKind": "FieldReference",
                      "AssignedTo": "_animSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 89
              },
              {
                "Name": "CheckParameterExists",
                "FullName": "Character.MovePlayer.CheckParameterExists(UnityEngine.Animator, string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "a",
                    "Type": "Animator",
                    "Assignment": null
                  },
                  {
                    "Name": "p",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 96
              },
              {
                "Name": "TeleportToRespawn",
                "FullName": "Character.MovePlayer.TeleportToRespawn(UnityEngine.Vector3)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "respawnPos",
                    "Type": "Vector3",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 110
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "_charController.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 106,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "?",
                      "Assignment": "respawnPos",
                      "Kind": "Assignment",
                      "AssignmentLine": 107,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_charController.enabled",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 108,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 106,
                      "UseKind": "Literal",
                      "AssignedTo": "_charController.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "respawnPos",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 107,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 108,
                      "UseKind": "Literal",
                      "AssignedTo": "_charController.enabled",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 105
              },
              {
                "Name": "DisableMouseInput",
                "FullName": "Character.MovePlayer.DisableMouseInput()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "lockMode",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "CursorLockMode.Locked",
                      "Kind": "Assignment",
                      "AssignmentLine": 116,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.lockState",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "lockMode",
                      "Kind": "Assignment",
                      "AssignmentLine": 117,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lockMode",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "CursorLockMode.None",
                      "Kind": "Assignment",
                      "AssignmentLine": 121,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.lockState",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "lockMode",
                      "Kind": "Assignment",
                      "AssignmentLine": 122,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CursorLockMode.Locked",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 116,
                      "UseKind": "FieldReference",
                      "AssignedTo": "lockMode",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lockMode",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 117,
                      "UseKind": "FieldReference",
                      "AssignedTo": "Cursor.lockState",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CursorLockMode.None",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 121,
                      "UseKind": "FieldReference",
                      "AssignedTo": "lockMode",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lockMode",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 122,
                      "UseKind": "FieldReference",
                      "AssignedTo": "Cursor.lockState",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 113
              },
              {
                "Name": "CmdRespawn",
                "FullName": "Character.MovePlayer.CmdRespawn(UnityEngine.Vector3)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "respawnPos",
                    "Type": "Vector3",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "RpcRespawn",
                    "FullName": "Character.MovePlayer.RpcRespawn(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\InputActions\\Scripts\\MovePlayer.cs",
                    "DefinitionLine": 134,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "respawnPos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 127
              },
              {
                "Name": "RpcRespawn",
                "FullName": "Character.MovePlayer.RpcRespawn(UnityEngine.Vector3)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "respawnPos",
                    "Type": "Vector3",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "_charController.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 137,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "?",
                      "Assignment": "respawnPos",
                      "Kind": "Assignment",
                      "AssignmentLine": 138,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_charController.enabled",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 139,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 137,
                      "UseKind": "Literal",
                      "AssignedTo": "_charController.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "respawnPos",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 138,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 139,
                      "UseKind": "Literal",
                      "AssignedTo": "_charController.enabled",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 133
              },
              {
                "Name": "MoveChar",
                "FullName": "Character.MovePlayer.MoveChar(UnityEngine.Vector3)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "movement",
                    "Type": "Vector3",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "movement",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 146
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityEngine.CharacterController.Move(UnityEngine.Vector3)",
                    "ReturnType": "CollisionFlags",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "movement * Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 147
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "movement",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.TransformDirection(movement)",
                      "Kind": "Assignment",
                      "AssignmentLine": 145,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.TransformDirection(movement)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 145,
                      "UseKind": "Invalid",
                      "AssignedTo": "movement",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 144
              },
              {
                "Name": "VerticalVelocityCalc",
                "FullName": "Character.MovePlayer.VerticalVelocityCalc()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "float",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "groundedTimer",
                      "Type": "float",
                      "Assignment": "_jumpCooldown",
                      "Kind": "Assignment",
                      "AssignmentLine": 151,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "groundedTimer",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 152,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "verticalVelocity",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 153,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "verticalVelocity",
                      "Type": "float",
                      "Assignment": "_gravity * _weight * Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 154,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_jumpCooldown",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 151,
                      "UseKind": "FieldReference",
                      "AssignedTo": "groundedTimer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 152,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "groundedTimer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 153,
                      "UseKind": "Literal",
                      "AssignedTo": "verticalVelocity",
                      "Value": "0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_gravity * _weight * Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 154,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "verticalVelocity",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "_gravity * _weight",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 154,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "verticalVelocity",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "_gravity",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 154,
                              "UseKind": "FieldReference",
                              "AssignedTo": "verticalVelocity",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "_weight",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 154,
                              "UseKind": "FieldReference",
                              "AssignedTo": "verticalVelocity",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "Time.deltaTime",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 154,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "verticalVelocity",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 150
              },
              {
                "Name": "RotateChar",
                "FullName": "Character.MovePlayer.RotateChar(float, float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "x",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "y",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 161
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "-y",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 162
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "?",
                      "Assignment": "Quaternion.Euler(0, x, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 160,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "_camera.transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Euler(-y, 0, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 161,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler(0, x, 0)",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 160,
                      "UseKind": "Invocation",
                      "AssignedTo": "transform.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler(-y, 0, 0)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 161,
                      "UseKind": "Invocation",
                      "AssignedTo": "_camera.transform.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 159
              }
            ],
            "Fields": [
              {
                "Name": "_baseSpeed",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "15.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "_baseJump",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "5.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "_maxJump",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "10.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "_gravity",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "9.81f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "_camera",
                "Type": "Camera",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "_weight",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "3.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "_runSpeedBuff",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "2.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "_jumpCooldown",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0.2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "SPEED",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"MOVEMENT_SPEED\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "JUMP",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"JUMP_HEIGHT\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 21
              },
              {
                "Name": "_currentSpeed",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "_charController",
                "Type": "CharacterController",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "animator",
                "Type": "Animator",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "status",
                "Type": "CharacterStatus",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "pms",
                "Type": "PlayerManagerScript",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "_speed",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "_jump",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "groundedTimer",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 29
              },
              {
                "Name": "verticalVelocity",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 30
              },
              {
                "Name": "lockMode",
                "Type": "CursorLockMode",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 31
              },
              {
                "Name": "_animSpeed",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 32
              }
            ],
            "Line": 10
          }
        ],
        "Usings": [],
        "Line": 8
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 3
      },
      {
        "Name": "UnityEngine",
        "Line": 4
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 5
      },
      {
        "Name": "System.Linq",
        "Line": 6
      }
    ],
    "Line": 1
  },
  {
    "Name": "MenuSceneLoader",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Menu\\Scripts\\MenuSceneLoader.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "MenuSceneLoader",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Awake",
            "FullName": "MenuSceneLoader.Awake()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Instantiate",
                "FullName": "UnityEngine.Object.Instantiate<UnityEngine.GameObject>(UnityEngine.GameObject)",
                "ReturnType": "GameObject",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "menuUI",
                    "IsInvocation": false
                  }
                ],
                "Line": 14
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "m_Go",
                  "Type": "UnityEngine.GameObject",
                  "Assignment": "Instantiate(menuUI)",
                  "Kind": "Assignment",
                  "AssignmentLine": 13,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "Instantiate(menuUI)",
                  "Type": "UnityEngine.GameObject",
                  "Kind": "Use",
                  "UseLine": 13,
                  "UseKind": "Invocation",
                  "AssignedTo": "m_Go",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 10
          }
        ],
        "Fields": [
          {
            "Name": "menuUI",
            "Type": "GameObject",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 6
          },
          {
            "Name": "m_Go",
            "Type": "GameObject",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 8
          }
        ],
        "Line": 4
      }
    ],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "PauseMenu",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Menu\\Scripts\\PauseMenu.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "PauseMenu",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Awake",
            "FullName": "PauseMenu.Awake()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Toggle>()",
                "ReturnType": "Toggle",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 15
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "m_MenuToggle",
                  "Type": "Toggle",
                  "Assignment": "GetComponent <Toggle> ()",
                  "Kind": "Assignment",
                  "AssignmentLine": 14,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "GetComponent <Toggle> ()",
                  "Type": "Toggle",
                  "Kind": "Use",
                  "UseLine": 14,
                  "UseKind": "Invocation",
                  "AssignedTo": "m_MenuToggle",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 13
          },
          {
            "Name": "MenuOn",
            "FullName": "PauseMenu.MenuOn()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "m_TimeScaleRef",
                  "Type": "float",
                  "Assignment": "Time.timeScale",
                  "Kind": "Assignment",
                  "AssignmentLine": 20,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "Time.timeScale",
                  "Type": "float",
                  "Assignment": "0f",
                  "Kind": "Assignment",
                  "AssignmentLine": 21,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "m_VolumeRef",
                  "Type": "float",
                  "Assignment": "AudioListener.volume",
                  "Kind": "Assignment",
                  "AssignmentLine": 23,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "AudioListener.volume",
                  "Type": "float",
                  "Assignment": "0f",
                  "Kind": "Assignment",
                  "AssignmentLine": 24,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "m_Paused",
                  "Type": "bool",
                  "Assignment": "true",
                  "Kind": "Assignment",
                  "AssignmentLine": 26,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "Time.timeScale",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 20,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "m_TimeScaleRef",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 21,
                  "UseKind": "Literal",
                  "AssignedTo": "Time.timeScale",
                  "Value": "0f",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "AudioListener.volume",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 23,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "m_VolumeRef",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 24,
                  "UseKind": "Literal",
                  "AssignedTo": "AudioListener.volume",
                  "Value": "0f",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 26,
                  "UseKind": "Literal",
                  "AssignedTo": "m_Paused",
                  "Value": "true",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 19
          },
          {
            "Name": "MenuOff",
            "FullName": "PauseMenu.MenuOff()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "Time.timeScale",
                  "Type": "float",
                  "Assignment": "m_TimeScaleRef",
                  "Kind": "Assignment",
                  "AssignmentLine": 32,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "AudioListener.volume",
                  "Type": "float",
                  "Assignment": "m_VolumeRef",
                  "Kind": "Assignment",
                  "AssignmentLine": 33,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "m_Paused",
                  "Type": "bool",
                  "Assignment": "false",
                  "Kind": "Assignment",
                  "AssignmentLine": 34,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "m_TimeScaleRef",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 32,
                  "UseKind": "FieldReference",
                  "AssignedTo": "Time.timeScale",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "m_VolumeRef",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 33,
                  "UseKind": "FieldReference",
                  "AssignedTo": "AudioListener.volume",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 34,
                  "UseKind": "Literal",
                  "AssignedTo": "m_Paused",
                  "Value": "false",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 31
          },
          {
            "Name": "OnMenuStatusChange",
            "FullName": "PauseMenu.OnMenuStatusChange()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "MenuOn",
                "FullName": "PauseMenu.MenuOn()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Menu\\Scripts\\PauseMenu.cs",
                "DefinitionLine": 19,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 43
              },
              {
                "Name": "MenuOff",
                "FullName": "PauseMenu.MenuOff()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Menu\\Scripts\\PauseMenu.cs",
                "DefinitionLine": 31,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 47
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 39
          },
          {
            "Name": "Update",
            "FullName": "PauseMenu.Update()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetKeyUp",
                "FullName": "UnityEngine.Input.GetKeyUp(UnityEngine.KeyCode)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "KeyCode.Escape",
                    "IsInvocation": false
                  }
                ],
                "Line": 55
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "m_MenuToggle.isOn",
                  "Type": "?",
                  "Assignment": "!m_MenuToggle.isOn",
                  "Kind": "Assignment",
                  "AssignmentLine": 56,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "Cursor.visible",
                  "Type": "bool",
                  "Assignment": "m_MenuToggle.isOn",
                  "Kind": "Assignment",
                  "AssignmentLine": 57,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "!m_MenuToggle.isOn",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 56,
                  "UseKind": "UnaryOperator",
                  "AssignedTo": "m_MenuToggle.isOn",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "m_MenuToggle.isOn",
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 57,
                  "UseKind": "Invalid",
                  "AssignedTo": "Cursor.visible",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 53
          }
        ],
        "Fields": [
          {
            "Name": "m_MenuToggle",
            "Type": "Toggle",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 7
          },
          {
            "Name": "m_TimeScaleRef",
            "Type": "float",
            "Modifiers": [
              "private"
            ],
            "Assignment": "1f",
            "Attributes": [],
            "Line": 8
          },
          {
            "Name": "m_VolumeRef",
            "Type": "float",
            "Modifiers": [
              "private"
            ],
            "Assignment": "1f",
            "Attributes": [],
            "Line": 9
          },
          {
            "Name": "m_Paused",
            "Type": "bool",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 10
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "SceneAndURLLoader",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Menu\\Scripts\\SceneAndURLLoader.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "SceneAndURLLoader",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Awake",
            "FullName": "SceneAndURLLoader.Awake()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetComponentInChildren",
                "FullName": "UnityEngine.Component.GetComponentInChildren<PauseMenu>()",
                "ReturnType": "PauseMenu",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 12
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "m_PauseMenu",
                  "Type": "PauseMenu",
                  "Assignment": "GetComponentInChildren <PauseMenu> ()",
                  "Kind": "Assignment",
                  "AssignmentLine": 11,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "GetComponentInChildren <PauseMenu> ()",
                  "Type": "PauseMenu",
                  "Kind": "Use",
                  "UseLine": 11,
                  "UseKind": "Invocation",
                  "AssignedTo": "m_PauseMenu",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 10
          },
          {
            "Name": "SceneLoad",
            "FullName": "SceneAndURLLoader.SceneLoad(string)",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "sceneName",
                "Type": "string",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "MenuOff",
                "FullName": "PauseMenu.MenuOff()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Menu\\Scripts\\PauseMenu.cs",
                "DefinitionLine": 31,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 19
              },
              {
                "Name": "LoadScene",
                "FullName": "UnityEngine.SceneManagement.SceneManager.LoadScene(string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "sceneName",
                    "IsInvocation": false
                  }
                ],
                "Line": 20
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 16
          },
          {
            "Name": "LoadURL",
            "FullName": "SceneAndURLLoader.LoadURL(string)",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "url",
                "Type": "string",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "OpenURL",
                "FullName": "UnityEngine.Application.OpenURL(string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "url",
                    "IsInvocation": false
                  }
                ],
                "Line": 26
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 24
          }
        ],
        "Fields": [
          {
            "Name": "m_PauseMenu",
            "Type": "PauseMenu",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 7
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.SceneManagement",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "CameraSwitch",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\CameraSwitch.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "CameraSwitch",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "OnEnable",
            "FullName": "CameraSwitch.OnEnable()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "text.text",
                  "Type": "?",
                  "Assignment": "objects[m_CurrentActiveObject].name",
                  "Kind": "Assignment",
                  "AssignmentLine": 14,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "objects[m_CurrentActiveObject].name",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 14,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "text.text",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 13
          },
          {
            "Name": "NextCamera",
            "FullName": "CameraSwitch.NextCamera()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "SetActive",
                "FullName": "UnityEngine.GameObject.SetActive(bool)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "i == nextactiveobject",
                    "IsInvocation": true
                  }
                ],
                "Line": 25
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "nextactiveobject",
                  "Type": "int",
                  "Assignment": "m_CurrentActiveObject + 1 >= objects.Length ? 0 : m_CurrentActiveObject + 1",
                  "Kind": "Definition",
                  "DefinitionLine": 20
                }
              },
              {
                "Variable": {
                  "Name": "i",
                  "Type": "int",
                  "Assignment": "0",
                  "Kind": "Definition",
                  "DefinitionLine": 22
                }
              },
              {
                "Variable": {
                  "Name": "m_CurrentActiveObject",
                  "Type": "int",
                  "Assignment": "nextactiveobject",
                  "Kind": "Assignment",
                  "AssignmentLine": 27,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "text.text",
                  "Type": "?",
                  "Assignment": "objects[m_CurrentActiveObject].name",
                  "Kind": "Assignment",
                  "AssignmentLine": 28,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "nextactiveobject",
                  "Type": "int",
                  "Kind": "Use",
                  "UseLine": 27,
                  "UseKind": "LocalReference",
                  "AssignedTo": "m_CurrentActiveObject",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "objects[m_CurrentActiveObject].name",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 28,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "text.text",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 19
          }
        ],
        "Fields": [
          {
            "Name": "objects",
            "Type": "GameObject[]",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 7
          },
          {
            "Name": "text",
            "Type": "Text",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 8
          },
          {
            "Name": "m_CurrentActiveObject",
            "Type": "int",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 10
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "LevelReset",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\LevelReset.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "LevelReset",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [
          "IPointerClickHandler"
        ],
        "Properties": [],
        "Methods": [
          {
            "Name": "OnPointerClick",
            "FullName": "LevelReset.OnPointerClick(PointerEventData)",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "data",
                "Type": "PointerEventData",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "LoadScene",
                "FullName": "UnityEngine.SceneManagement.SceneManager.LoadScene(string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "SceneManager.GetSceneAt(0).name",
                    "IsInvocation": false
                  }
                ],
                "Line": 11
              },
              {
                "Name": "GetSceneAt",
                "FullName": "UnityEngine.SceneManagement.SceneManager.GetSceneAt(int)",
                "ReturnType": "Scene",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  }
                ],
                "Line": 11
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 8
          }
        ],
        "Fields": [],
        "Line": 6
      }
    ],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.EventSystems",
        "Line": 3
      },
      {
        "Name": "UnityEngine.SceneManagement",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "ParticleSceneControls",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\ParticleSceneControls.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.SceneUtils",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ParticleSceneControls",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Select",
                    "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Select(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\ParticleSceneControls.cs",
                    "DefinitionLine": 191,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "s_SelectedIndex",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 51
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Previous",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Next",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 49
              },
              {
                "Name": "OnDisable",
                "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.OnDisable()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Previous",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 60
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Next",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 61
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 58
              },
              {
                "Name": "Previous",
                "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Previous()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Select",
                    "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Select(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\ParticleSceneControls.cs",
                    "DefinitionLine": 191,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "s_SelectedIndex",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 72
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "s_SelectedIndex",
                      "Type": "int",
                      "Assignment": "demoParticles.items.Length - 1",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "demoParticles.items.Length - 1",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "s_SelectedIndex",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "demoParticles.items.Length",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 69,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "s_SelectedIndex",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 69,
                          "UseKind": "Literal",
                          "AssignedTo": "s_SelectedIndex",
                          "Value": "1",
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 65
              },
              {
                "Name": "Next",
                "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Next()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Select",
                    "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Select(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\ParticleSceneControls.cs",
                    "DefinitionLine": 191,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "s_SelectedIndex",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 83
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "s_SelectedIndex",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 80,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 80,
                      "UseKind": "Literal",
                      "AssignedTo": "s_SelectedIndex",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 76
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "KeyboardInput",
                    "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.KeyboardInput()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\ParticleSceneControls.cs",
                    "DefinitionLine": 169,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 91
                  },
                  {
                    "Name": "SmoothDamp",
                    "FullName": "UnityEngine.Vector3.SmoothDamp(UnityEngine.Vector3, UnityEngine.Vector3, ref UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "sceneCamera.localPosition",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Vector3.forward*-s_Selected.camOffset",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_CamOffsetVelocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 96
                  },
                  {
                    "Name": "CheckForGuiCollision",
                    "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.CheckForGuiCollision()",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\ParticleSceneControls.cs",
                    "DefinitionLine": 180,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 105
                  },
                  {
                    "Name": "GetMouseButtonDown",
                    "FullName": "UnityEngine.Input.GetMouseButtonDown(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 107
                  },
                  {
                    "Name": "GetMouseButton",
                    "FullName": "UnityEngine.Input.GetMouseButton(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 108
                  },
                  {
                    "Name": "ScreenPointToRay",
                    "FullName": "UnityEngine.Camera.ScreenPointToRay(UnityEngine.Vector3)",
                    "ReturnType": "Ray",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Input.mousePosition",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 112
                  },
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Ray, out UnityEngine.RaycastHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "ray",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 114
                  },
                  {
                    "Name": "LookRotation",
                    "FullName": "UnityEngine.Quaternion.LookRotation(UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "hit.normal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 116
                  },
                  {
                    "Name": "Instantiate",
                    "FullName": "UnityEngine.Object.Instantiate<UnityEngine.Transform>(UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Quaternion)",
                    "ReturnType": "Transform",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "s_Selected.transform",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rot",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 129
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Effects.ParticleSystemMultiplier>()",
                    "ReturnType": "ParticleSystemMultiplier",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 133
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<UnityEngine.Transform>.Add(UnityEngine.Transform)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "m_Instance",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 136
                  },
                  {
                    "Name": "Destroy",
                    "FullName": "UnityEngine.Object.Destroy(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CurrentParticleList[0].gameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 142
                  },
                  {
                    "Name": "RemoveAt",
                    "FullName": "System.Collections.Generic.List<UnityEngine.Transform>.RemoveAt(int)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 144
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.ParticleSystem>()",
                    "ReturnType": "ParticleSystem",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 155
                  },
                  {
                    "Name": "Emit",
                    "FullName": "UnityEngine.ParticleSystem.Emit(int)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.ParticleSystemModule.dll",
                    "Arguments": [
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 157
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.ParticleSystem>()",
                    "ReturnType": "ParticleSystem",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 157
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "oneShotClick",
                      "Type": "bool",
                      "Assignment": "(Input.GetMouseButtonDown(0) && s_Selected.mode == Mode.Instantiate)",
                      "Kind": "Definition",
                      "DefinitionLine": 106
                    }
                  },
                  {
                    "Variable": {
                      "Name": "repeat",
                      "Type": "bool",
                      "Assignment": "(Input.GetMouseButton(0) && s_Selected.mode == Mode.Trail)",
                      "Kind": "Definition",
                      "DefinitionLine": 107
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ray",
                      "Type": "Ray",
                      "Assignment": "Camera.main.ScreenPointToRay(Input.mousePosition)",
                      "Kind": "Definition",
                      "DefinitionLine": 111
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 112
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rot",
                      "Type": "var",
                      "Assignment": "Quaternion.LookRotation(hit.normal)",
                      "Kind": "Definition",
                      "DefinitionLine": 115
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pos",
                      "Type": "var",
                      "Assignment": "hit.point + hit.normal*spawnOffset",
                      "Kind": "Definition",
                      "DefinitionLine": 122
                    }
                  },
                  {
                    "Variable": {
                      "Name": "emission",
                      "Type": "var",
                      "Assignment": "m_Instance.transform.GetComponent<ParticleSystem>().emission",
                      "Kind": "Definition",
                      "DefinitionLine": 154
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sceneCamera.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.SmoothDamp(sceneCamera.localPosition, Vector3.forward*-s_Selected.camOffset,\r\n                                                       ref m_CamOffsetVelocity, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 95,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.identity",
                      "Kind": "Assignment",
                      "AssignmentLine": 119,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Instance",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "(Transform) Instantiate(s_Selected.transform, pos, rot)",
                      "Kind": "Assignment",
                      "AssignmentLine": 128,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Instance.GetComponent<ParticleSystemMultiplier>().multiplier",
                      "Type": "float",
                      "Assignment": "multiply",
                      "Kind": "Assignment",
                      "AssignmentLine": 132,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Instance.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "pos",
                      "Kind": "Assignment",
                      "AssignmentLine": 148,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Instance.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "rot",
                      "Kind": "Assignment",
                      "AssignmentLine": 149,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "emission.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 155,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Instance.parent",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "hit.transform",
                      "Kind": "Assignment",
                      "AssignmentLine": 159,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LastPos",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "pos",
                      "Kind": "Assignment",
                      "AssignmentLine": 160,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.SmoothDamp(sceneCamera.localPosition, Vector3.forward*-s_Selected.camOffset,\r\n                                                       ref m_CamOffsetVelocity, 1)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 95,
                      "UseKind": "Invocation",
                      "AssignedTo": "sceneCamera.localPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.identity",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 119,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "rot",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(Transform) Instantiate(s_Selected.transform, pos, rot)",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 128,
                      "UseKind": "Conversion",
                      "AssignedTo": "m_Instance",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "multiply",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 132,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_Instance.GetComponent<ParticleSystemMultiplier>().multiplier",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pos",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 148,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_Instance.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rot",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 149,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_Instance.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 155,
                      "UseKind": "Literal",
                      "AssignedTo": "emission.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit.transform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 159,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Instance.parent",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pos",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 160,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_LastPos",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 87
              },
              {
                "Name": "KeyboardInput",
                "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.KeyboardInput()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetKeyDown",
                    "FullName": "UnityEngine.Input.GetKeyDown(UnityEngine.KeyCode)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "KeyCode.LeftArrow",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 171
                  },
                  {
                    "Name": "Previous",
                    "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Previous()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\ParticleSceneControls.cs",
                    "DefinitionLine": 65,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 172
                  },
                  {
                    "Name": "GetKeyDown",
                    "FullName": "UnityEngine.Input.GetKeyDown(UnityEngine.KeyCode)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "KeyCode.RightArrow",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 174
                  },
                  {
                    "Name": "Next",
                    "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Next()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\ParticleSceneControls.cs",
                    "DefinitionLine": 76,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 175
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 169
              },
              {
                "Name": "CheckForGuiCollision",
                "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.CheckForGuiCollision()",
                "Modifiers": [],
                "ReturnType": "bool",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "eventData",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "list",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 187
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "eventData",
                      "Type": "PointerEventData",
                      "Assignment": "new PointerEventData(eventSystem)",
                      "Kind": "Definition",
                      "DefinitionLine": 181
                    }
                  },
                  {
                    "Variable": {
                      "Name": "list",
                      "Type": "List<RaycastResult>",
                      "Assignment": "new List<RaycastResult>()",
                      "Kind": "Definition",
                      "DefinitionLine": 185
                    }
                  },
                  {
                    "Variable": {
                      "Name": "eventData.pressPosition",
                      "Type": "?",
                      "Assignment": "Input.mousePosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 182,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "eventData.position",
                      "Type": "?",
                      "Assignment": "Input.mousePosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 183,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Input.mousePosition",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 182,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "eventData.pressPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Input.mousePosition",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 183,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "eventData.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 180
              },
              {
                "Name": "Select",
                "FullName": "UnityStandardAssets.SceneUtils.ParticleSceneControls.Select(int)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "i",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 199
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 204
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Effects.ParticleSystemMultiplier>()",
                    "ReturnType": "ParticleSystemMultiplier",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 206
                  },
                  {
                    "Name": "Destroy",
                    "FullName": "UnityEngine.Object.Destroy(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CurrentParticleList[0].gameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 212
                  },
                  {
                    "Name": "RemoveAt",
                    "FullName": "System.Collections.Generic.List<UnityEngine.Transform>.RemoveAt(int)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 213
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "s_Selected",
                      "Type": "UnityStandardAssets.SceneUtils.ParticleSceneControls.DemoParticleSystem",
                      "Assignment": "demoParticles.items[i]",
                      "Kind": "Assignment",
                      "AssignmentLine": 192,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Instance",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 193,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ParticleMultiplier",
                      "Type": "UnityStandardAssets.Effects.ParticleSystemMultiplier",
                      "Assignment": "s_Selected.transform.GetComponent<ParticleSystemMultiplier>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 205,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "multiply",
                      "Type": "float",
                      "Assignment": "1",
                      "Kind": "Assignment",
                      "AssignmentLine": 206,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "instructionText.text",
                      "Type": "?",
                      "Assignment": "s_Selected.instructionText",
                      "Kind": "Assignment",
                      "AssignmentLine": 216,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "titleText.text",
                      "Type": "?",
                      "Assignment": "s_Selected.transform.name",
                      "Kind": "Assignment",
                      "AssignmentLine": 217,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "demoParticles.items[i]",
                      "Type": "UnityStandardAssets.SceneUtils.ParticleSceneControls.DemoParticleSystem",
                      "Kind": "Use",
                      "UseLine": 192,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "s_Selected",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 193,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Instance",
                      "Value": "null",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s_Selected.transform.GetComponent<ParticleSystemMultiplier>()",
                      "Type": "UnityStandardAssets.Effects.ParticleSystemMultiplier",
                      "Kind": "Use",
                      "UseLine": 205,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_ParticleMultiplier",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 206,
                      "UseKind": "Literal",
                      "AssignedTo": "multiply",
                      "Value": "1",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s_Selected.instructionText",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 216,
                      "UseKind": "FieldReference",
                      "AssignedTo": "instructionText.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s_Selected.transform.name",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 217,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "titleText.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 191
              }
            ],
            "Fields": [
              {
                "Name": "demoParticles",
                "Type": "DemoParticleSystemList",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "spawnOffset",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.5f",
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "multiply",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 29
              },
              {
                "Name": "clearOnChange",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 30
              },
              {
                "Name": "titleText",
                "Type": "Text",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 31
              },
              {
                "Name": "sceneCamera",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 32
              },
              {
                "Name": "instructionText",
                "Type": "Text",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 33
              },
              {
                "Name": "previousButton",
                "Type": "Button",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 34
              },
              {
                "Name": "nextButton",
                "Type": "Button",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 35
              },
              {
                "Name": "graphicRaycaster",
                "Type": "GraphicRaycaster",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 36
              },
              {
                "Name": "eventSystem",
                "Type": "EventSystem",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "m_ParticleMultiplier",
                "Type": "ParticleSystemMultiplier",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 40
              },
              {
                "Name": "m_CurrentParticleList",
                "Type": "List<Transform>",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new List<Transform>()",
                "Attributes": [],
                "Line": 41
              },
              {
                "Name": "m_Instance",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 42
              },
              {
                "Name": "s_SelectedIndex",
                "Type": "int",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 43
              },
              {
                "Name": "m_CamOffsetVelocity",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "Vector3.zero",
                "Attributes": [],
                "Line": 44
              },
              {
                "Name": "m_LastPos",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 45
              },
              {
                "Name": "s_Selected",
                "Type": "DemoParticleSystem",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 46
              },
              {
                "Name": "transform",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 225
              },
              {
                "Name": "mode",
                "Type": "Mode",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 226
              },
              {
                "Name": "align",
                "Type": "AlignMode",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 227
              },
              {
                "Name": "maxCount",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 228
              },
              {
                "Name": "minDist",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 229
              },
              {
                "Name": "camOffset",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "15",
                "Attributes": [],
                "Line": 230
              },
              {
                "Name": "instructionText",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 231
              },
              {
                "Name": "items",
                "Type": "DemoParticleSystem[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 237
              }
            ],
            "Line": 11
          }
        ],
        "Usings": [],
        "Line": 9
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.EventSystems",
        "Line": 4
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 5
      },
      {
        "Name": "UnityStandardAssets.Effects",
        "Line": 6
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlaceTargetWithMouse",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\PlaceTargetWithMouse.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.SceneUtils",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PlaceTargetWithMouse",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.SceneUtils.PlaceTargetWithMouse.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetMouseButtonDown",
                    "FullName": "UnityEngine.Input.GetMouseButtonDown(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 15
                  },
                  {
                    "Name": "ScreenPointToRay",
                    "FullName": "UnityEngine.Camera.ScreenPointToRay(UnityEngine.Vector3)",
                    "ReturnType": "Ray",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Input.mousePosition",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 19
                  },
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Ray, out UnityEngine.RaycastHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "ray",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 21
                  },
                  {
                    "Name": "SendMessage",
                    "FullName": "UnityEngine.GameObject.SendMessage(string, object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"SetTarget\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "transform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "ray",
                      "Type": "Ray",
                      "Assignment": "Camera.main.ScreenPointToRay(Input.mousePosition)",
                      "Kind": "Definition",
                      "DefinitionLine": 18
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 19
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "hit.point + hit.normal*surfaceOffset",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit.point + hit.normal*surfaceOffset",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "hit.point",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 24,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "transform.position",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "hit.normal*surfaceOffset",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 24,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "transform.position",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "hit.normal",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 24,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "transform.position",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "surfaceOffset",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 24,
                              "UseKind": "FieldReference",
                              "AssignedTo": "transform.position",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              }
            ],
            "Fields": [
              {
                "Name": "surfaceOffset",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1.5f",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "setTargetOn",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "SlowMoButton",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SampleScenes\\Scripts\\SlowMoButton.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.SceneUtils",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SlowMoButton",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.SceneUtils.SlowMoButton.Start()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_SlowMo",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "Literal",
                      "AssignedTo": "m_SlowMo",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "OnDestroy",
                "FullName": "UnityStandardAssets.SceneUtils.SlowMoButton.OnDestroy()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "Time.timeScale",
                      "Type": "float",
                      "Assignment": "1",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "Literal",
                      "AssignedTo": "Time.timeScale",
                      "Value": "1",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "ChangeSpeed",
                "FullName": "UnityStandardAssets.SceneUtils.SlowMoButton.ChangeSpeed()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "image",
                      "Type": "var",
                      "Assignment": "button.targetGraphic as Image",
                      "Kind": "Definition",
                      "DefinitionLine": 34
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SlowMo",
                      "Type": "bool",
                      "Assignment": "!m_SlowMo",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "image.sprite",
                      "Type": "?",
                      "Assignment": "m_SlowMo ? SlowSpeedTex : FullSpeedTex",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "button.targetGraphic",
                      "Type": "?",
                      "Assignment": "image",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.timeScale",
                      "Type": "float",
                      "Assignment": "m_SlowMo ? slowSpeed : fullSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 42,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "!m_SlowMo",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "m_SlowMo",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SlowMo ? SlowSpeedTex : FullSpeedTex",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "Conditional",
                      "AssignedTo": "image.sprite",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "image",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "LocalReference",
                      "AssignedTo": "button.targetGraphic",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SlowMo ? slowSpeed : fullSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 42,
                      "UseKind": "Conditional",
                      "AssignedTo": "Time.timeScale",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 29
              }
            ],
            "Fields": [
              {
                "Name": "FullSpeedTex",
                "Type": "Sprite",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "SlowSpeedTex",
                "Type": "Sprite",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "fullSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "slowSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.3f",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "button",
                "Type": "Button",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "m_SlowMo",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "GUI_Demo",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Sci-Fi UI\\Demo_Assets\\scripts\\GUI_Demo.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "GUI_Demo",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Start",
            "FullName": "GUI_Demo.Start()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "windowRect.x",
                  "Type": "float",
                  "Assignment": "(Screen.width - windowRect.width)/2",
                  "Kind": "Assignment",
                  "AssignmentLine": 22,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "windowRect.y",
                  "Type": "float",
                  "Assignment": "(Screen.height - windowRect.height)/2",
                  "Kind": "Assignment",
                  "AssignmentLine": 23,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "(Screen.width - windowRect.width)/2",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 22,
                  "UseKind": "BinaryOperator",
                  "AssignedTo": "windowRect.x",
                  "Value": null,
                  "VariablesList": [
                    {
                      "Name": "Screen.width - windowRect.width",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "windowRect.x",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Screen.width",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 22,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "windowRect.x",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "windowRect.width",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 22,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "windowRect.x",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    },
                    {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "Literal",
                      "AssignedTo": "windowRect.x",
                      "Value": "2",
                      "VariablesList": []
                    }
                  ]
                }
              },
              {
                "Variable": {
                  "Name": "(Screen.height - windowRect.height)/2",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 23,
                  "UseKind": "BinaryOperator",
                  "AssignedTo": "windowRect.y",
                  "Value": null,
                  "VariablesList": [
                    {
                      "Name": "Screen.height - windowRect.height",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "windowRect.y",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Screen.height",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 23,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "windowRect.y",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "windowRect.height",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 23,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "windowRect.y",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    },
                    {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "Literal",
                      "AssignedTo": "windowRect.y",
                      "Value": "2",
                      "VariablesList": []
                    }
                  ]
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 21
          },
          {
            "Name": "OnGUI",
            "FullName": "GUI_Demo.OnGUI()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Window",
                "FullName": "UnityEngine.GUI.Window(int, UnityEngine.Rect, UnityEngine.GUI.WindowFunction, string)",
                "ReturnType": "Rect",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "windowRect",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "DoMyWindow",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "\"My Window\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 31
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "GUI.skin",
                  "Type": "UnityEngine.GUISkin",
                  "Assignment": "guiSkin",
                  "Kind": "Assignment",
                  "AssignmentLine": 29,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "windowRect",
                  "Type": "UnityEngine.Rect",
                  "Assignment": "GUI.Window (0, windowRect, DoMyWindow, \"My Window\")",
                  "Kind": "Assignment",
                  "AssignmentLine": 30,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "guiSkin",
                  "Type": "UnityEngine.GUISkin",
                  "Kind": "Use",
                  "UseLine": 29,
                  "UseKind": "FieldReference",
                  "AssignedTo": "GUI.skin",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "GUI.Window (0, windowRect, DoMyWindow, \"My Window\")",
                  "Type": "UnityEngine.Rect",
                  "Kind": "Use",
                  "UseLine": 30,
                  "UseKind": "Invocation",
                  "AssignedTo": "windowRect",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 28
          },
          {
            "Name": "DoMyWindow",
            "FullName": "GUI_Demo.DoMyWindow(int)",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "windowID",
                "Type": "int",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "Box",
                "FullName": "UnityEngine.GUI.Box(UnityEngine.Rect, string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect(10,50,120,250)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "\"Box title\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 39
              },
              {
                "Name": "Button",
                "FullName": "UnityEngine.GUI.Button(UnityEngine.Rect, string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (20,80,100,20)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "\"BUTTON\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 40
              },
              {
                "Name": "Label",
                "FullName": "UnityEngine.GUI.Label(UnityEngine.Rect, string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (20, 115, 100, 20)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "\"LABEL: Hello!\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 41
              },
              {
                "Name": "TextField",
                "FullName": "UnityEngine.GUI.TextField(UnityEngine.Rect, string, int)",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (15, 140, 110, 20)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "stringToEdit",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "25",
                    "IsInvocation": false
                  }
                ],
                "Line": 42
              },
              {
                "Name": "HorizontalSlider",
                "FullName": "UnityEngine.GUI.HorizontalSlider(UnityEngine.Rect, float, float, float)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (15, 175, 110, 30)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "hSliderValue",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0.0f",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "10.0f",
                    "IsInvocation": false
                  }
                ],
                "Line": 43
              },
              {
                "Name": "VerticalSlider",
                "FullName": "UnityEngine.GUI.VerticalSlider(UnityEngine.Rect, float, float, float)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (140, 50, 20, 200)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "vSliderValue",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "100.0f",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0.0f",
                    "IsInvocation": false
                  }
                ],
                "Line": 45
              },
              {
                "Name": "Toggle",
                "FullName": "UnityEngine.GUI.Toggle(UnityEngine.Rect, bool, string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect(165, 50, 100, 30)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "toggleTxt",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "\"A Toggle text\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 48
              },
              {
                "Name": "TextArea",
                "FullName": "UnityEngine.GUI.TextArea(UnityEngine.Rect, string, int)",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (165, 90, 185, 100)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "textToEdit",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "200",
                    "IsInvocation": false
                  }
                ],
                "Line": 49
              },
              {
                "Name": "Label",
                "FullName": "UnityEngine.GUI.Label(UnityEngine.Rect, string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (180, 215, 100, 20)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "\"ScrollView\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 51
              },
              {
                "Name": "BeginScrollView",
                "FullName": "UnityEngine.GUI.BeginScrollView(UnityEngine.Rect, UnityEngine.Vector2, UnityEngine.Rect)",
                "ReturnType": "Vector2",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (180,235,160,100)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "scrollPosition",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "new Rect (0, 0, 220, 200)",
                    "IsInvocation": true
                  }
                ],
                "Line": 52
              },
              {
                "Name": "Button",
                "FullName": "UnityEngine.GUI.Button(UnityEngine.Rect, string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (0,10,100,20)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "\"Top-left\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 53
              },
              {
                "Name": "Button",
                "FullName": "UnityEngine.GUI.Button(UnityEngine.Rect, string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (120,10,100,20)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "\"Top-right\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 54
              },
              {
                "Name": "Button",
                "FullName": "UnityEngine.GUI.Button(UnityEngine.Rect, string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (0,170,100,20)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "\"Bottom-left\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 55
              },
              {
                "Name": "Button",
                "FullName": "UnityEngine.GUI.Button(UnityEngine.Rect, string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (120,170,100,20)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "\"Bottom-right\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 56
              },
              {
                "Name": "EndScrollView",
                "FullName": "UnityEngine.GUI.EndScrollView()",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [],
                "Line": 57
              },
              {
                "Name": "HorizontalScrollbar",
                "FullName": "UnityEngine.GUI.HorizontalScrollbar(UnityEngine.Rect, float, float, float, float)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (10, 360, 360, 30)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "hSbarValue",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "5.0f",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0.0f",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "10.0f",
                    "IsInvocation": false
                  }
                ],
                "Line": 60
              },
              {
                "Name": "VerticalScrollbar",
                "FullName": "UnityEngine.GUI.VerticalScrollbar(UnityEngine.Rect, float, float, float, float)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (380, 25, 30, 300)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "vSbarValue",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "1.0f",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "30.0f",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0.0f",
                    "IsInvocation": false
                  }
                ],
                "Line": 61
              },
              {
                "Name": "DragWindow",
                "FullName": "UnityEngine.GUI.DragWindow(UnityEngine.Rect)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.IMGUIModule.dll",
                "Arguments": [
                  {
                    "Argument": "new Rect (0,0,10000,10000)",
                    "IsInvocation": true
                  }
                ],
                "Line": 64
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "stringToEdit",
                  "Type": "string",
                  "Assignment": "GUI.TextField (new Rect (15, 140, 110, 20), stringToEdit, 25)",
                  "Kind": "Assignment",
                  "AssignmentLine": 41,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "hSliderValue",
                  "Type": "float",
                  "Assignment": "GUI.HorizontalSlider (new Rect (15, 175, 110, 30), hSliderValue, 0.0f, 10.0f)",
                  "Kind": "Assignment",
                  "AssignmentLine": 42,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "vSliderValue",
                  "Type": "float",
                  "Assignment": "GUI.VerticalSlider (new Rect (140, 50, 20, 200), vSliderValue, 100.0f, 0.0f)",
                  "Kind": "Assignment",
                  "AssignmentLine": 44,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "toggleTxt",
                  "Type": "bool",
                  "Assignment": "GUI.Toggle(new Rect(165, 50, 100, 30), toggleTxt, \"A Toggle text\")",
                  "Kind": "Assignment",
                  "AssignmentLine": 47,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "textToEdit",
                  "Type": "string",
                  "Assignment": "GUI.TextArea (new Rect (165, 90, 185, 100), textToEdit, 200)",
                  "Kind": "Assignment",
                  "AssignmentLine": 48,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "scrollPosition",
                  "Type": "UnityEngine.Vector2",
                  "Assignment": "GUI.BeginScrollView (new Rect (180,235,160,100), scrollPosition, new Rect (0, 0, 220, 200))",
                  "Kind": "Assignment",
                  "AssignmentLine": 51,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "hSbarValue",
                  "Type": "float",
                  "Assignment": "GUI.HorizontalScrollbar (new Rect (10, 360, 360, 30), hSbarValue, 5.0f, 0.0f, 10.0f)",
                  "Kind": "Assignment",
                  "AssignmentLine": 59,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "vSbarValue",
                  "Type": "float",
                  "Assignment": "GUI.VerticalScrollbar(new Rect (380, 25, 30, 300), vSbarValue, 1.0f, 30.0f, 0.0f)",
                  "Kind": "Assignment",
                  "AssignmentLine": 60,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "GUI.TextField (new Rect (15, 140, 110, 20), stringToEdit, 25)",
                  "Type": "string",
                  "Kind": "Use",
                  "UseLine": 41,
                  "UseKind": "Invocation",
                  "AssignedTo": "stringToEdit",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "GUI.HorizontalSlider (new Rect (15, 175, 110, 30), hSliderValue, 0.0f, 10.0f)",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 42,
                  "UseKind": "Invocation",
                  "AssignedTo": "hSliderValue",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "GUI.VerticalSlider (new Rect (140, 50, 20, 200), vSliderValue, 100.0f, 0.0f)",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 44,
                  "UseKind": "Invocation",
                  "AssignedTo": "vSliderValue",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "GUI.Toggle(new Rect(165, 50, 100, 30), toggleTxt, \"A Toggle text\")",
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 47,
                  "UseKind": "Invocation",
                  "AssignedTo": "toggleTxt",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "GUI.TextArea (new Rect (165, 90, 185, 100), textToEdit, 200)",
                  "Type": "string",
                  "Kind": "Use",
                  "UseLine": 48,
                  "UseKind": "Invocation",
                  "AssignedTo": "textToEdit",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "GUI.BeginScrollView (new Rect (180,235,160,100), scrollPosition, new Rect (0, 0, 220, 200))",
                  "Type": "UnityEngine.Vector2",
                  "Kind": "Use",
                  "UseLine": 51,
                  "UseKind": "Invocation",
                  "AssignedTo": "scrollPosition",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "GUI.HorizontalScrollbar (new Rect (10, 360, 360, 30), hSbarValue, 5.0f, 0.0f, 10.0f)",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 59,
                  "UseKind": "Invocation",
                  "AssignedTo": "hSbarValue",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "GUI.VerticalScrollbar(new Rect (380, 25, 30, 300), vSbarValue, 1.0f, 30.0f, 0.0f)",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 60,
                  "UseKind": "Invocation",
                  "AssignedTo": "vSbarValue",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 36
          }
        ],
        "Fields": [
          {
            "Name": "guiSkin",
            "Type": "GUISkin",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 7
          },
          {
            "Name": "windowRect",
            "Type": "Rect",
            "Modifiers": [],
            "Assignment": "new Rect (0, 0, 400, 380)",
            "Attributes": [],
            "Line": 10
          },
          {
            "Name": "toggleTxt",
            "Type": "bool",
            "Modifiers": [],
            "Assignment": "false",
            "Attributes": [],
            "Line": 11
          },
          {
            "Name": "stringToEdit",
            "Type": "string",
            "Modifiers": [],
            "Assignment": "\"Text Label\"",
            "Attributes": [],
            "Line": 12
          },
          {
            "Name": "textToEdit",
            "Type": "string",
            "Modifiers": [],
            "Assignment": "\"TextBox:\\nHello World\\nI've got few lines...\"",
            "Attributes": [],
            "Line": 13
          },
          {
            "Name": "hSliderValue",
            "Type": "float",
            "Modifiers": [],
            "Assignment": "0.0f",
            "Attributes": [],
            "Line": 14
          },
          {
            "Name": "vSliderValue",
            "Type": "float",
            "Modifiers": [],
            "Assignment": "0.0f",
            "Attributes": [],
            "Line": 15
          },
          {
            "Name": "hSbarValue",
            "Type": "float",
            "Modifiers": [],
            "Assignment": null,
            "Attributes": [],
            "Line": 16
          },
          {
            "Name": "vSbarValue",
            "Type": "float",
            "Modifiers": [],
            "Assignment": null,
            "Attributes": [],
            "Line": 17
          },
          {
            "Name": "scrollPosition",
            "Type": "Vector2",
            "Modifiers": [],
            "Assignment": "Vector2.zero",
            "Attributes": [],
            "Line": 18
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "LightFlicker",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SciFi Warehouse Kit\\Demo\\Scripts\\LightFlicker.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "LightFlicker",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Reset",
            "FullName": "LightFlicker.Reset()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "maximumDim",
                  "Type": "float",
                  "Assignment": "0.2f",
                  "Kind": "Assignment",
                  "AssignmentLine": 16,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "maximumBoost",
                  "Type": "float",
                  "Assignment": "0.2f",
                  "Kind": "Assignment",
                  "AssignmentLine": 17,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "speed",
                  "Type": "float",
                  "Assignment": "0.1f",
                  "Kind": "Assignment",
                  "AssignmentLine": 18,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "strength",
                  "Type": "float",
                  "Assignment": "250",
                  "Kind": "Assignment",
                  "AssignmentLine": 19,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 16,
                  "UseKind": "Literal",
                  "AssignedTo": "maximumDim",
                  "Value": "0.2f",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 17,
                  "UseKind": "Literal",
                  "AssignedTo": "maximumBoost",
                  "Value": "0.2f",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 18,
                  "UseKind": "Literal",
                  "AssignedTo": "speed",
                  "Value": "0.1f",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 19,
                  "UseKind": "Literal",
                  "AssignedTo": "strength",
                  "Value": "250",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 15
          },
          {
            "Name": "Start",
            "FullName": "LightFlicker.Start()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Light>()",
                "ReturnType": "Light",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 25
              },
              {
                "Name": "StartCoroutine",
                "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                "ReturnType": "Coroutine",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "Flicker()",
                    "IsInvocation": true
                  }
                ],
                "Line": 27
              },
              {
                "Name": "Flicker",
                "FullName": "LightFlicker.Flicker()",
                "ReturnType": "IEnumerator",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SciFi Warehouse Kit\\Demo\\Scripts\\LightFlicker.cs",
                "DefinitionLine": 31,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 27
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "source",
                  "Type": "UnityEngine.Light",
                  "Assignment": "GetComponent<Light>()",
                  "Kind": "Assignment",
                  "AssignmentLine": 24,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "initialIntensity",
                  "Type": "float",
                  "Assignment": "source.intensity",
                  "Kind": "Assignment",
                  "AssignmentLine": 25,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "GetComponent<Light>()",
                  "Type": "UnityEngine.Light",
                  "Kind": "Use",
                  "UseLine": 24,
                  "UseKind": "Invocation",
                  "AssignedTo": "source",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "source.intensity",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 25,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "initialIntensity",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 23
          },
          {
            "Name": "Flicker",
            "FullName": "LightFlicker.Flicker()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "IEnumerator",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Lerp",
                "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "source.intensity",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "Random.Range(initialIntensity - maximumDim, initialIntensity + maximumBoost)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "strength * Time.deltaTime",
                    "IsInvocation": true
                  }
                ],
                "Line": 35
              },
              {
                "Name": "Range",
                "FullName": "UnityEngine.Random.Range(float, float)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "initialIntensity - maximumDim",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "initialIntensity + maximumBoost",
                    "IsInvocation": true
                  }
                ],
                "Line": 35
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "source.intensity",
                  "Type": "float",
                  "Assignment": "Mathf.Lerp(source.intensity, Random.Range(initialIntensity - maximumDim, initialIntensity + maximumBoost), strength * Time.deltaTime)",
                  "Kind": "Assignment",
                  "AssignmentLine": 34,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "Mathf.Lerp(source.intensity, Random.Range(initialIntensity - maximumDim, initialIntensity + maximumBoost), strength * Time.deltaTime)",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 34,
                  "UseKind": "Invocation",
                  "AssignedTo": "source.intensity",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 31
          }
        ],
        "Fields": [
          {
            "Name": "maximumDim",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 6
          },
          {
            "Name": "maximumBoost",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 7
          },
          {
            "Name": "speed",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 8
          },
          {
            "Name": "strength",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 9
          },
          {
            "Name": "noFlicker",
            "Type": "bool",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 11
          },
          {
            "Name": "source",
            "Type": "Light",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 12
          },
          {
            "Name": "initialIntensity",
            "Type": "float",
            "Modifiers": [
              "private"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 13
          }
        ],
        "Line": 4
      }
    ],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "MouseComponent",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SciFi Warehouse Kit\\Demo\\Scripts\\MouseComponent.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "MouseComponent",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Start",
            "FullName": "MouseComponent.Start()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "Cursor.lockState",
                  "Type": "UnityEngine.CursorLockMode",
                  "Assignment": "CursorLockMode.Locked",
                  "Kind": "Assignment",
                  "AssignmentLine": 12,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "CursorLockMode.Locked",
                  "Type": "UnityEngine.CursorLockMode",
                  "Kind": "Use",
                  "UseLine": 12,
                  "UseKind": "FieldReference",
                  "AssignedTo": "Cursor.lockState",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 11
          },
          {
            "Name": "Update",
            "FullName": "MouseComponent.Update()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetAxis",
                "FullName": "UnityEngine.Input.GetAxis(string)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"Mouse X\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 19
              },
              {
                "Name": "GetAxis",
                "FullName": "UnityEngine.Input.GetAxis(string)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"Mouse Y\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 20
              },
              {
                "Name": "Clamp",
                "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "xRotation",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "-90",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "90f",
                    "IsInvocation": false
                  }
                ],
                "Line": 22
              },
              {
                "Name": "Euler",
                "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                "ReturnType": "Quaternion",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "xRotation",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0f",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0f",
                    "IsInvocation": false
                  }
                ],
                "Line": 23
              },
              {
                "Name": "Rotate",
                "FullName": "UnityEngine.Transform.Rotate(UnityEngine.Vector3)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "Vector3.up * mouseX",
                    "IsInvocation": true
                  }
                ],
                "Line": 24
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "mouseX",
                  "Type": "float",
                  "Assignment": "Input.GetAxis(\"Mouse X\") * mouseSensitivity * Time.deltaTime",
                  "Kind": "Definition",
                  "DefinitionLine": 18
                }
              },
              {
                "Variable": {
                  "Name": "mouseY",
                  "Type": "float",
                  "Assignment": "Input.GetAxis(\"Mouse Y\") * mouseSensitivity * Time.deltaTime",
                  "Kind": "Definition",
                  "DefinitionLine": 19
                }
              },
              {
                "Variable": {
                  "Name": "xRotation",
                  "Type": "float",
                  "Assignment": "mouseY",
                  "Kind": "Assignment",
                  "AssignmentLine": 20,
                  "AssignmentKind": "SubtractAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "xRotation",
                  "Type": "float",
                  "Assignment": "Mathf.Clamp(xRotation, -90, 90f)",
                  "Kind": "Assignment",
                  "AssignmentLine": 21,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "transform.localRotation",
                  "Type": "UnityEngine.Quaternion",
                  "Assignment": "Quaternion.Euler(xRotation, 0f, 0f)",
                  "Kind": "Assignment",
                  "AssignmentLine": 22,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "mouseY",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 20,
                  "UseKind": "LocalReference",
                  "AssignedTo": "xRotation",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Mathf.Clamp(xRotation, -90, 90f)",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 21,
                  "UseKind": "Invocation",
                  "AssignedTo": "xRotation",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Quaternion.Euler(xRotation, 0f, 0f)",
                  "Type": "UnityEngine.Quaternion",
                  "Kind": "Use",
                  "UseLine": 22,
                  "UseKind": "Invocation",
                  "AssignedTo": "transform.localRotation",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 17
          }
        ],
        "Fields": [
          {
            "Name": "mouseSensitivity",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": "100f",
            "Attributes": [],
            "Line": 7
          },
          {
            "Name": "playerBody",
            "Type": "Transform",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 8
          },
          {
            "Name": "xRotation",
            "Type": "float",
            "Modifiers": [],
            "Assignment": "0f",
            "Attributes": [],
            "Line": 9
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlayerMovement",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SciFi Warehouse Kit\\Demo\\Scripts\\PlayerMovement.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "PlayerMovement",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Update",
            "FullName": "PlayerMovement.Update()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "CheckSphere",
                "FullName": "UnityEngine.Physics.CheckSphere(UnityEngine.Vector3, float, int)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.PhysicsModule.dll",
                "Arguments": [
                  {
                    "Argument": "groundCheck.position",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "groundDistance",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "groundMask",
                    "IsInvocation": false
                  }
                ],
                "Line": 27
              },
              {
                "Name": "GetAxis",
                "FullName": "UnityEngine.Input.GetAxis(string)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"Horizontal\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 34
              },
              {
                "Name": "GetAxis",
                "FullName": "UnityEngine.Input.GetAxis(string)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"Vertical\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 35
              },
              {
                "Name": "Move",
                "FullName": "UnityEngine.CharacterController.Move(UnityEngine.Vector3)",
                "ReturnType": "CollisionFlags",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.PhysicsModule.dll",
                "Arguments": [
                  {
                    "Argument": "motion * speed * Time.deltaTime",
                    "IsInvocation": true
                  }
                ],
                "Line": 38
              },
              {
                "Name": "GetButtonDown",
                "FullName": "UnityEngine.Input.GetButtonDown(string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"Jump\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 40
              },
              {
                "Name": "Sqrt",
                "FullName": "UnityEngine.Mathf.Sqrt(float)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "jumpHeight * -2f * gravity",
                    "IsInvocation": true
                  }
                ],
                "Line": 42
              },
              {
                "Name": "Move",
                "FullName": "UnityEngine.CharacterController.Move(UnityEngine.Vector3)",
                "ReturnType": "CollisionFlags",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.PhysicsModule.dll",
                "Arguments": [
                  {
                    "Argument": "velocity * Time.deltaTime",
                    "IsInvocation": true
                  }
                ],
                "Line": 46
              },
              {
                "Name": "GetKey",
                "FullName": "UnityEngine.Input.GetKey(UnityEngine.KeyCode)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "KeyCode.A",
                    "IsInvocation": false
                  }
                ],
                "Line": 48
              },
              {
                "Name": "GetKey",
                "FullName": "UnityEngine.Input.GetKey(UnityEngine.KeyCode)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "KeyCode.S",
                    "IsInvocation": false
                  }
                ],
                "Line": 48
              },
              {
                "Name": "GetKey",
                "FullName": "UnityEngine.Input.GetKey(UnityEngine.KeyCode)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "KeyCode.D",
                    "IsInvocation": false
                  }
                ],
                "Line": 48
              },
              {
                "Name": "GetKey",
                "FullName": "UnityEngine.Input.GetKey(UnityEngine.KeyCode)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.InputLegacyModule.dll",
                "Arguments": [
                  {
                    "Argument": "KeyCode.W",
                    "IsInvocation": false
                  }
                ],
                "Line": 48
              },
              {
                "Name": "PlayOneShot",
                "FullName": "UnityEngine.AudioSource.PlayOneShot(UnityEngine.AudioClip, float)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.AudioModule.dll",
                "Arguments": [
                  {
                    "Argument": "footStepSound",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0.7f",
                    "IsInvocation": false
                  }
                ],
                "Line": 53
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.AudioSource>()",
                "ReturnType": "AudioSource",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 53
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "x",
                  "Type": "float",
                  "Assignment": "Input.GetAxis(\"Horizontal\")",
                  "Kind": "Definition",
                  "DefinitionLine": 33
                }
              },
              {
                "Variable": {
                  "Name": "z",
                  "Type": "float",
                  "Assignment": "Input.GetAxis(\"Vertical\")",
                  "Kind": "Definition",
                  "DefinitionLine": 34
                }
              },
              {
                "Variable": {
                  "Name": "motion",
                  "Type": "Vector3",
                  "Assignment": "transform.right * x + transform.forward * z",
                  "Kind": "Definition",
                  "DefinitionLine": 36
                }
              },
              {
                "Variable": {
                  "Name": "isGrounded",
                  "Type": "bool",
                  "Assignment": "Physics.CheckSphere(groundCheck.position, groundDistance, groundMask)",
                  "Kind": "Assignment",
                  "AssignmentLine": 26,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "velocity.y",
                  "Type": "float",
                  "Assignment": "-2f",
                  "Kind": "Assignment",
                  "AssignmentLine": 30,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "velocity.y",
                  "Type": "float",
                  "Assignment": "Mathf.Sqrt(jumpHeight * -2f * gravity)",
                  "Kind": "Assignment",
                  "AssignmentLine": 41,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "velocity.y",
                  "Type": "float",
                  "Assignment": "gravity * Time.deltaTime",
                  "Kind": "Assignment",
                  "AssignmentLine": 44,
                  "AssignmentKind": "AddAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "nextFootstep",
                  "Type": "float",
                  "Assignment": "Time.deltaTime",
                  "Kind": "Assignment",
                  "AssignmentLine": 49,
                  "AssignmentKind": "SubtractAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "nextFootstep",
                  "Type": "float",
                  "Assignment": "footStepDelay",
                  "Kind": "Assignment",
                  "AssignmentLine": 53,
                  "AssignmentKind": "AddAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "Physics.CheckSphere(groundCheck.position, groundDistance, groundMask)",
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 26,
                  "UseKind": "Invocation",
                  "AssignedTo": "isGrounded",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "-2f",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 30,
                  "UseKind": "UnaryOperator",
                  "AssignedTo": "velocity.y",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Mathf.Sqrt(jumpHeight * -2f * gravity)",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 41,
                  "UseKind": "Invocation",
                  "AssignedTo": "velocity.y",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "gravity * Time.deltaTime",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 44,
                  "UseKind": "BinaryOperator",
                  "AssignedTo": "velocity.y",
                  "Value": null,
                  "VariablesList": [
                    {
                      "Name": "gravity",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "FieldReference",
                      "AssignedTo": "velocity.y",
                      "Value": null,
                      "VariablesList": []
                    },
                    {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "velocity.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  ]
                }
              },
              {
                "Variable": {
                  "Name": "Time.deltaTime",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 49,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "nextFootstep",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "footStepDelay",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 53,
                  "UseKind": "FieldReference",
                  "AssignedTo": "nextFootstep",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 25
          }
        ],
        "Fields": [
          {
            "Name": "controller",
            "Type": "CharacterController",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 8
          },
          {
            "Name": "speed",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": "8f",
            "Attributes": [],
            "Line": 9
          },
          {
            "Name": "gravity",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": "-9.81f",
            "Attributes": [],
            "Line": 10
          },
          {
            "Name": "jumpHeight",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": "3f",
            "Attributes": [],
            "Line": 11
          },
          {
            "Name": "groundCheck",
            "Type": "Transform",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 12
          },
          {
            "Name": "groundDistance",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": "0.4f",
            "Attributes": [],
            "Line": 13
          },
          {
            "Name": "groundMask",
            "Type": "LayerMask",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 14
          },
          {
            "Name": "velocity",
            "Type": "Vector3",
            "Modifiers": [],
            "Assignment": null,
            "Attributes": [],
            "Line": 15
          },
          {
            "Name": "isGrounded",
            "Type": "bool",
            "Modifiers": [],
            "Assignment": null,
            "Attributes": [],
            "Line": 16
          },
          {
            "Name": "footStepSound",
            "Type": "AudioClip",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 19
          },
          {
            "Name": "footStepDelay",
            "Type": "float",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 20
          },
          {
            "Name": "nextFootstep",
            "Type": "float",
            "Modifiers": [
              "private"
            ],
            "Assignment": "0",
            "Attributes": [],
            "Line": 22
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlayRandomSound",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SciFi Warehouse Kit\\Demo\\Scripts\\PlayRandomSound.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "PlayRandomSound",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Start",
            "FullName": "PlayRandomSound.Start()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "StartAudio",
                "FullName": "PlayRandomSound.StartAudio()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SciFi Warehouse Kit\\Demo\\Scripts\\PlayRandomSound.cs",
                "DefinitionLine": 18,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 14
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 12
          },
          {
            "Name": "StartAudio",
            "FullName": "PlayRandomSound.StartAudio()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Invoke",
                "FullName": "UnityEngine.MonoBehaviour.Invoke(string, float)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"RandomSoundness\"",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "clipDelay",
                    "IsInvocation": false
                  }
                ],
                "Line": 20
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 18
          },
          {
            "Name": "RandomSoundness",
            "FullName": "PlayRandomSound.RandomSoundness()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Range",
                "FullName": "UnityEngine.Random.Range(int, int)",
                "ReturnType": "Int32",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "audioSources.Length",
                    "IsInvocation": false
                  }
                ],
                "Line": 25
              },
              {
                "Name": "Play",
                "FullName": "UnityEngine.AudioSource.Play()",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.AudioModule.dll",
                "Arguments": [],
                "Line": 26
              },
              {
                "Name": "StartAudio",
                "FullName": "PlayRandomSound.StartAudio()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SciFi Warehouse Kit\\Demo\\Scripts\\PlayRandomSound.cs",
                "DefinitionLine": 18,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 27
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "randomSound.clip",
                  "Type": "UnityEngine.AudioClip",
                  "Assignment": "audioSources[Random.Range(0, audioSources.Length)]",
                  "Kind": "Assignment",
                  "AssignmentLine": 24,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "audioSources[Random.Range(0, audioSources.Length)]",
                  "Type": "UnityEngine.AudioClip",
                  "Kind": "Use",
                  "UseLine": 24,
                  "UseKind": "ArrayElementReference",
                  "AssignedTo": "randomSound.clip",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 23
          }
        ],
        "Fields": [
          {
            "Name": "randomSound",
            "Type": "AudioSource",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 6
          },
          {
            "Name": "audioSources",
            "Type": "AudioClip[]",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 7
          },
          {
            "Name": "clipDelay",
            "Type": "int",
            "Modifiers": [
              "public"
            ],
            "Assignment": "5",
            "Attributes": [],
            "Line": 9
          }
        ],
        "Line": 4
      }
    ],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "PushPhysics",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SciFi Warehouse Kit\\Demo\\Scripts\\PushPhysics.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "PushPhysics",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "OnControllerColliderHit",
            "FullName": "PushPhysics.OnControllerColliderHit(UnityEngine.ControllerColliderHit)",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "hit",
                "Type": "ControllerColliderHit",
                "Assignment": null
              }
            ],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "body",
                  "Type": "Rigidbody",
                  "Assignment": "hit.collider.attachedRigidbody",
                  "Kind": "Definition",
                  "DefinitionLine": 10
                }
              },
              {
                "Variable": {
                  "Name": "pushDir",
                  "Type": "Vector3",
                  "Assignment": "new Vector3(hit.moveDirection.x, 0, hit.moveDirection.z)",
                  "Kind": "Definition",
                  "DefinitionLine": 26
                }
              },
              {
                "Variable": {
                  "Name": "body.velocity",
                  "Type": "UnityEngine.Vector3",
                  "Assignment": "pushDir * pushPower",
                  "Kind": "Assignment",
                  "AssignmentLine": 32,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "pushDir * pushPower",
                  "Type": "UnityEngine.Vector3",
                  "Kind": "Use",
                  "UseLine": 32,
                  "UseKind": "BinaryOperator",
                  "AssignedTo": "body.velocity",
                  "Value": null,
                  "VariablesList": [
                    {
                      "Name": "pushDir",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "LocalReference",
                      "AssignedTo": "body.velocity",
                      "Value": null,
                      "VariablesList": []
                    },
                    {
                      "Name": "pushPower",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "FieldReference",
                      "AssignedTo": "body.velocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  ]
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 9
          }
        ],
        "Fields": [
          {
            "Name": "pushPower",
            "Type": "float",
            "Modifiers": [],
            "Assignment": "2.0f",
            "Attributes": [],
            "Line": 8
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "OrbitAroundTarget",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\SciFiHandGun\\Scripts\\OrbitAroundTarget.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "OrbitAroundTarget",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Start",
            "FullName": "OrbitAroundTarget.Start()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 11
          },
          {
            "Name": "Update",
            "FullName": "OrbitAroundTarget.Update()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "RotateAround",
                "FullName": "UnityEngine.Transform.RotateAround(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "target.transform.position",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "Vector3.up",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "speed * Time.deltaTime",
                    "IsInvocation": true
                  }
                ],
                "Line": 16
              },
              {
                "Name": "LookAt",
                "FullName": "UnityEngine.Transform.LookAt(UnityEngine.Vector3)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "target.transform.position",
                    "IsInvocation": false
                  }
                ],
                "Line": 17
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 15
          }
        ],
        "Fields": [
          {
            "Name": "target",
            "Type": "GameObject",
            "Modifiers": [
              "public"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 7
          },
          {
            "Name": "speed",
            "Type": "float",
            "Modifiers": [],
            "Assignment": "20.0f",
            "Attributes": [],
            "Line": 9
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "Activable",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Activable.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Activable",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "UAComponent",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "LoadMe",
                "FullName": "Character.Activable.LoadMe(string)",
                "Modifiers": [
                  "protected",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "Activate",
                "FullName": "Character.Activable.Activate()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "AddComponent",
                    "FullName": "Character.ComponentManager.AddComponent(Character.UAComponent)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 163,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "p",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 30
                  },
                  {
                    "Name": "RemoveComponent",
                    "FullName": "Character.ComponentManager.RemoveComponent(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 174,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "componentId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 31
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "p",
                      "Type": "Powerup",
                      "Assignment": "new Powerup(powerupName, componentPath, cm)",
                      "Kind": "Definition",
                      "DefinitionLine": 28
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              }
            ],
            "Fields": [
              {
                "Name": "cdmanager",
                "Type": "CountDownManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "tm",
                "Type": "TickManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "powerupName",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "activableSuffix",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"activable\"",
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "ActivableManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ActivableManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.ActivableManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Character.ComponentManager>()",
                    "ReturnType": "ComponentManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 21
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Character.CharacterStatus>()",
                    "ReturnType": "CharacterStatus",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 22
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "cm",
                      "Type": "Character.ComponentManager",
                      "Assignment": "GetComponent<ComponentManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cs",
                      "Type": "Character.CharacterStatus",
                      "Assignment": "GetComponent<CharacterStatus>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<ComponentManager>()",
                      "Type": "Character.ComponentManager",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "Invocation",
                      "AssignedTo": "cm",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CharacterStatus>()",
                      "Type": "Character.CharacterStatus",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "Invocation",
                      "AssignedTo": "cs",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.ActivableManager.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FilterByType",
                    "FullName": "Character.ComponentManager.FilterByType<Character.Activable>()",
                    "ReturnType": "Dictionary",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 268,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 27
                  },
                  {
                    "Name": "CheckTimer",
                    "FullName": "Character.ActivableManager.CheckTimer()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableManager.cs",
                    "DefinitionLine": 36,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 29
                  },
                  {
                    "Name": "CheckActivablesBound",
                    "FullName": "Character.ActivableManager.CheckActivablesBound()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableManager.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 30
                  },
                  {
                    "Name": "Activate",
                    "FullName": "Character.ActivableManager.Activate()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableManager.cs",
                    "DefinitionLine": 68,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 31
                  },
                  {
                    "Name": "NextActivable",
                    "FullName": "Character.ActivableManager.NextActivable()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableManager.cs",
                    "DefinitionLine": 47,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 32
                  },
                  {
                    "Name": "PreviousActivable",
                    "FullName": "Character.ActivableManager.PreviousActivable()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableManager.cs",
                    "DefinitionLine": 58,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 33
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "activables",
                      "Type": "System.Collections.Generic.Dictionary<string, Character.Activable>",
                      "Assignment": "cm.FilterByType<Activable>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cm.FilterByType<Activable>()",
                      "Type": "System.Collections.Generic.Dictionary<string, Character.Activable>",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "Invocation",
                      "AssignedTo": "activables",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 25
              },
              {
                "Name": "CheckTimer",
                "FullName": "Character.ActivableManager.CheckTimer()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "action",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "action",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "Literal",
                      "AssignedTo": "timer",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Literal",
                      "AssignedTo": "action",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "Literal",
                      "AssignedTo": "action",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 36
              },
              {
                "Name": "NextActivable",
                "FullName": "Character.ActivableManager.NextActivable()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "current",
                      "Type": "int",
                      "Assignment": "1",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "current",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "interval",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "Literal",
                      "AssignedTo": "current",
                      "Value": "1",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "Literal",
                      "AssignedTo": "current",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "interval",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "FieldReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 47
              },
              {
                "Name": "PreviousActivable",
                "FullName": "Character.ActivableManager.PreviousActivable()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "current",
                      "Type": "int",
                      "Assignment": "1",
                      "Kind": "Assignment",
                      "AssignmentLine": 61,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "current",
                      "Type": "int",
                      "Assignment": "activables.Count - 1",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "interval",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 61,
                      "UseKind": "Literal",
                      "AssignedTo": "current",
                      "Value": "1",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activables.Count - 1",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "current",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "activables.Count",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 62,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "current",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 62,
                          "UseKind": "Literal",
                          "AssignedTo": "current",
                          "Value": "1",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "interval",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "FieldReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 58
              },
              {
                "Name": "Activate",
                "FullName": "Character.ActivableManager.Activate()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 72
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "current",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 72
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "interval",
                      "Kind": "Assignment",
                      "AssignmentLine": 72,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "interval",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 72,
                      "UseKind": "FieldReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 68
              },
              {
                "Name": "CheckActivablesBound",
                "FullName": "Character.ActivableManager.CheckActivablesBound()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "current",
                      "Type": "int",
                      "Assignment": "activables.Count - 1",
                      "Kind": "Assignment",
                      "AssignmentLine": 78,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activables.Count - 1",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 78,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "current",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "activables.Count",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 78,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "current",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 78,
                          "UseKind": "Literal",
                          "AssignedTo": "current",
                          "Value": "1",
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 77
              },
              {
                "Name": "GetCurrent",
                "FullName": "Character.ActivableManager.GetCurrent()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "string",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "current",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 86
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 82
              },
              {
                "Name": "GetActivablesNames",
                "FullName": "Character.ActivableManager.GetActivablesNames()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "List<string>",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "current",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 97
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<string>.Add(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 98
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<string>.Add(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "\"\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 102
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "activables.Keys.ElementAt(current + 1)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 106
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "current + 1",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 106
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<string>.Add(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "\"\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 110
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "activables.Keys.ElementAt(current - 1)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 114
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "current - 1",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 114
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "names",
                      "Type": "List<string>",
                      "Assignment": "new List<string>()",
                      "Kind": "Definition",
                      "DefinitionLine": 92
                    }
                  },
                  {
                    "Variable": {
                      "Name": "count",
                      "Type": "int",
                      "Assignment": "activables.Count",
                      "Kind": "Definition",
                      "DefinitionLine": 93
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c",
                      "Type": "string",
                      "Assignment": "activables.Keys.ElementAt(current)",
                      "Kind": "Definition",
                      "DefinitionLine": 96
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 91
              }
            ],
            "Fields": [
              {
                "Name": "activables",
                "Type": "Dictionary<string, Activable>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, Activable>()",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "current",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "cm",
                "Type": "ComponentManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "cs",
                "Type": "CharacterStatus",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "timer",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "action",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "interval",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 7
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "System.Linq",
        "Line": 4
      },
      {
        "Name": "System",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "ActivableUiManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableUiManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ActivableUiManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "Character.ActivableUiManager.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LoadActivables",
                    "FullName": "Character.ActivableUiManager.LoadActivables()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableUiManager.cs",
                    "DefinitionLine": 36,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 26
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.ActivableUiManager.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetCurrentModelsName",
                    "FullName": "Character.ActivableUiManager.SetCurrentModelsName()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableUiManager.cs",
                    "DefinitionLine": 51,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 32
                  },
                  {
                    "Name": "ShowInGui",
                    "FullName": "Character.ActivableUiManager.ShowInGui()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableUiManager.cs",
                    "DefinitionLine": 70,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 33
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              },
              {
                "Name": "LoadActivables",
                "FullName": "Character.ActivableUiManager.LoadActivables()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Combine",
                    "FullName": "System.IO.Path.Combine(string, string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "Application.streamingAssetsPath",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "activableImagesPath",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "CheckDirectory",
                    "FullName": "Character.ActivableUiManager.CheckDirectory(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableUiManager.cs",
                    "DefinitionLine": 94,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "folderPath",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 39
                  },
                  {
                    "Name": "GetFiles",
                    "FullName": "System.IO.Directory.GetFiles(string, string)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "folderPath",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"*.png\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "LoadImage",
                    "FullName": "UnityEngine.ImageConversion.LoadImage(UnityEngine.Texture2D, byte[])",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.ImageConversionModule.dll",
                    "Arguments": [
                      {
                        "Argument": "t",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "File.ReadAllBytes(filePaths[i])",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 44
                  },
                  {
                    "Name": "ReadAllBytes",
                    "FullName": "System.IO.File.ReadAllBytes(string)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "filePaths[i]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 44
                  },
                  {
                    "Name": "Replace",
                    "FullName": "string.Replace(string, string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "\".png\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 45
                  },
                  {
                    "Name": "GetFileName",
                    "FullName": "System.IO.Path.GetFileName(string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "filePaths[i]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 45
                  },
                  {
                    "Name": "Create",
                    "FullName": "UnityEngine.Sprite.Create(UnityEngine.Texture2D, UnityEngine.Rect, UnityEngine.Vector2, float)",
                    "ReturnType": "Sprite",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "t",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new Rect(0, 0, t.width, t.height)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Vector2.zero",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "100f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "folderPath",
                      "Type": "string",
                      "Assignment": "Path.Combine(Application.streamingAssetsPath, activableImagesPath)",
                      "Kind": "Definition",
                      "DefinitionLine": 37
                    }
                  },
                  {
                    "Variable": {
                      "Name": "filePaths",
                      "Type": "string[]",
                      "Assignment": "Directory.GetFiles(folderPath, \"*.png\")",
                      "Kind": "Definition",
                      "DefinitionLine": 39
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 40
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "Texture2D",
                      "Assignment": "new Texture2D(2,2)",
                      "Kind": "Definition",
                      "DefinitionLine": 42
                    }
                  },
                  {
                    "Variable": {
                      "Name": "name",
                      "Type": "string",
                      "Assignment": "Path.GetFileName(filePaths[i]).Replace(\".png\", \"\")",
                      "Kind": "Definition",
                      "DefinitionLine": 44
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sprite",
                      "Type": "Sprite",
                      "Assignment": "Sprite.Create(t, new Rect(0, 0, t.width, t.height), Vector2.zero, 100f)",
                      "Kind": "Definition",
                      "DefinitionLine": 45
                    }
                  },
                  {
                    "Variable": {
                      "Name": "images[name]",
                      "Type": "UnityEngine.Sprite",
                      "Assignment": "sprite",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sprite",
                      "Type": "UnityEngine.Sprite",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "LocalReference",
                      "AssignedTo": "images[name]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 36
              },
              {
                "Name": "SetCurrentModelsName",
                "FullName": "Character.ActivableUiManager.SetCurrentModelsName()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetActivablesNames",
                    "FullName": "Character.ActivableManager.GetActivablesNames()",
                    "ReturnType": "List",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableManager.cs",
                    "DefinitionLine": 91,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 53
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "names",
                      "Type": "List<string>",
                      "Assignment": "manager.GetActivablesNames()",
                      "Kind": "Definition",
                      "DefinitionLine": 52
                    }
                  },
                  {
                    "Variable": {
                      "Name": "curr",
                      "Type": "string",
                      "Assignment": "\"\"",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pre",
                      "Type": "string",
                      "Assignment": "\"\"",
                      "Kind": "Assignment",
                      "AssignmentLine": 57,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "next",
                      "Type": "string",
                      "Assignment": "\"\"",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "curr",
                      "Type": "string",
                      "Assignment": "names[0]",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "next",
                      "Type": "string",
                      "Assignment": "names[1]",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pre",
                      "Type": "string",
                      "Assignment": "names[2]",
                      "Kind": "Assignment",
                      "AssignmentLine": 64,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "Literal",
                      "AssignedTo": "curr",
                      "Value": "\"\"",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 57,
                      "UseKind": "Literal",
                      "AssignedTo": "pre",
                      "Value": "\"\"",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Literal",
                      "AssignedTo": "next",
                      "Value": "\"\"",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "names[0]",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "curr",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "names[1]",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "next",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "names[2]",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 64,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "pre",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 51
              },
              {
                "Name": "ShowInGui",
                "FullName": "Character.ActivableUiManager.ShowInGui()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "ShowImage",
                    "FullName": "Character.ActivableUiManager.ShowImage(string, UnityEngine.GameObject)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableUiManager.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "curr",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "currContainer",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 72
                  },
                  {
                    "Name": "ShowImage",
                    "FullName": "Character.ActivableUiManager.ShowImage(string, UnityEngine.GameObject)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableUiManager.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "pre",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "preContainer",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 73
                  },
                  {
                    "Name": "ShowImage",
                    "FullName": "Character.ActivableUiManager.ShowImage(string, UnityEngine.GameObject)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ActivableUiManager.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "next",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "nextContainer",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 74
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 70
              },
              {
                "Name": "ShowImage",
                "FullName": "Character.ActivableUiManager.ShowImage(string, UnityEngine.GameObject)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "newImg",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "container",
                    "Type": "GameObject",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityEngine.Sprite>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "newImg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 81
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 84
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Image>()",
                    "ReturnType": "Image",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 85
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 90
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "container.GetComponent<Image>().sprite",
                      "Type": "?",
                      "Assignment": "images[newImg]",
                      "Kind": "Assignment",
                      "AssignmentLine": 84,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "images[newImg]",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 84,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "container.GetComponent<Image>().sprite",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 77
              },
              {
                "Name": "CheckDirectory",
                "FullName": "Character.ActivableUiManager.CheckDirectory(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Exists",
                    "FullName": "System.IO.Directory.Exists(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 96
                  },
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Directory Not Found\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 98
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 94
              }
            ],
            "Fields": [
              {
                "Name": "currContainer",
                "Type": "GameObject",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "preContainer",
                "Type": "GameObject",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "nextContainer",
                "Type": "GameObject",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "activableImagesPath",
                "Type": "string",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "manager",
                "Type": "ActivableManager",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "images",
                "Type": "Dictionary<string, Sprite>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, Sprite>()",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "imageState",
                "Type": "Dictionary<string, bool>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, bool>()",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "curr",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "pre",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "next",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "act",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 21
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 7
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "System.IO",
        "Line": 4
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "AmmoBox",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\AmmoBox.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Weapon",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AmmoBox",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Id",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 10
              },
              {
                "Name": "Ammo",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 14
              }
            ],
            "Methods": [],
            "Fields": [
              {
                "Name": "id",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 8
              },
              {
                "Name": "ammo",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AnimatorManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\AnimatorManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AnimatorManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.AnimatorManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LoadDeathAnimations",
                    "FullName": "Character.AnimatorManager.LoadDeathAnimations()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\AnimatorManager.cs",
                    "DefinitionLine": 22,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 18
                  },
                  {
                    "Name": "LoadCombatAnimators",
                    "FullName": "Character.AnimatorManager.LoadCombatAnimators()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\AnimatorManager.cs",
                    "DefinitionLine": 31,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 19
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "playerCombatAnimators",
                      "Type": "System.Collections.SortedList",
                      "Assignment": "new SortedList<string, RuntimeAnimatorController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerDeathAnimators",
                      "Type": "System.Collections.SortedList",
                      "Assignment": "new SortedList<string, RuntimeAnimatorController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 16,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new SortedList<string, RuntimeAnimatorController>()",
                      "Type": "System.Collections.SortedList",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "playerCombatAnimators",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new SortedList<string, RuntimeAnimatorController>()",
                      "Type": "System.Collections.SortedList",
                      "Kind": "Use",
                      "UseLine": 16,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "playerDeathAnimators",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "LoadDeathAnimations",
                "FullName": "Character.AnimatorManager.LoadDeathAnimations()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "ToString",
                    "FullName": "string.ToString()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 26
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "name",
                      "Type": "string",
                      "Assignment": "a.name.ToString()",
                      "Kind": "Definition",
                      "DefinitionLine": 25
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerDeathAnimators[name]",
                      "Type": "?",
                      "Assignment": "a",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "a",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "LocalReference",
                      "AssignedTo": "playerDeathAnimators[name]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "LoadCombatAnimators",
                "FullName": "Character.AnimatorManager.LoadCombatAnimators()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "ToString",
                    "FullName": "string.ToString()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 35
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "name",
                      "Type": "string",
                      "Assignment": "a.name.ToString()",
                      "Kind": "Definition",
                      "DefinitionLine": 34
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerCombatAnimators[name]",
                      "Type": "?",
                      "Assignment": "a",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "a",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "LocalReference",
                      "AssignedTo": "playerCombatAnimators[name]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 31
              },
              {
                "Name": "RandomDeathAnimator",
                "FullName": "Character.AnimatorManager.RandomDeathAnimator()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "RuntimeAnimatorController",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "playerDeathAnimators.Count",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 42
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "rng",
                      "Type": "int",
                      "Assignment": "Random.Range(0, playerDeathAnimators.Count)",
                      "Kind": "Definition",
                      "DefinitionLine": 41
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 40
              },
              {
                "Name": "GetDeathAnimator",
                "FullName": "Character.AnimatorManager.GetDeathAnimator(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "RuntimeAnimatorController",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "a",
                      "Type": "RuntimeAnimatorController",
                      "Assignment": "null",
                      "Kind": "Definition",
                      "DefinitionLine": 47
                    }
                  },
                  {
                    "Variable": {
                      "Name": "a",
                      "Type": "UnityEngine.RuntimeAnimatorController",
                      "Assignment": "playerDeathAnimators[name]",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerDeathAnimators[name]",
                      "Type": "UnityEngine.RuntimeAnimatorController",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Invalid",
                      "AssignedTo": "a",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              },
              {
                "Name": "GetCombatAnimator",
                "FullName": "Character.AnimatorManager.GetCombatAnimator(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "RuntimeAnimatorController",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "a",
                      "Type": "RuntimeAnimatorController",
                      "Assignment": "null",
                      "Kind": "Definition",
                      "DefinitionLine": 55
                    }
                  },
                  {
                    "Variable": {
                      "Name": "a",
                      "Type": "UnityEngine.RuntimeAnimatorController",
                      "Assignment": "playerCombatAnimators[name]",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerCombatAnimators[name]",
                      "Type": "UnityEngine.RuntimeAnimatorController",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "Invalid",
                      "AssignedTo": "a",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 54
              }
            ],
            "Fields": [
              {
                "Name": "combatAnimations",
                "Type": "List<RuntimeAnimatorController>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "deathAnimations",
                "Type": "List<RuntimeAnimatorController>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "playerCombatAnimators",
                "Type": "SortedList<string, RuntimeAnimatorController>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "playerDeathAnimators",
                "Type": "SortedList<string, RuntimeAnimatorController>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AudioManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\AudioManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "AudioManagerPkg",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AudioManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "AudioManagerPkg.AudioManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.AudioSource>()",
                    "ReturnType": "AudioSource",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 14
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "_audioSource",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "GetComponent<AudioSource>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 13,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AudioSource>()",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 13,
                      "UseKind": "Invocation",
                      "AssignedTo": "_audioSource",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 12
              },
              {
                "Name": "PlaySound",
                "FullName": "AudioManagerPkg.AudioManager.PlaySound(UnityEngine.AudioClip)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "clip",
                    "Type": "AudioClip",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.AudioSource.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 21
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "_audioSource.clip",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "clip",
                      "Kind": "Assignment",
                      "AssignmentLine": 19,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "clip",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 19,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "_audioSource.clip",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              }
            ],
            "Fields": [
              {
                "Name": "_audioSource",
                "Type": "AudioSource",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "ComponentManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ComponentManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Components",
                "Type": "Dictionary<string, UAComponent>",
                "Modifiers": [
                  "public"
                ],
                "Line": 25
              },
              {
                "Name": "ObjectFeatures",
                "Type": "Dictionary<string, Feature>",
                "Modifiers": [
                  "public"
                ],
                "Line": 30
              },
              {
                "Name": "TheTickManager",
                "Type": "TickManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 36
              },
              {
                "Name": "TheCountDownManager",
                "Type": "CountDownManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 41
              }
            ],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.ComponentManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Combine",
                    "FullName": "System.IO.Path.Combine(string, string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "Application.streamingAssetsPath",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "componentDirectory",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 48
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Character.CountDownManager>()",
                    "ReturnType": "CountDownManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 49
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Character.TickManager>()",
                    "ReturnType": "TickManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 50
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Character.FeatureManager>()",
                    "ReturnType": "FeatureManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 51
                  },
                  {
                    "Name": "LoadComponentGroup",
                    "FullName": "Character.ComponentManager.LoadComponentGroup(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 141,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "componentDirectory",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "componentDirectory",
                      "Type": "string",
                      "Assignment": "Path.Combine(Application.streamingAssetsPath, componentDirectory)",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "countDownManager",
                      "Type": "Character.CountDownManager",
                      "Assignment": "GetComponent<CountDownManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "tickManager",
                      "Type": "Character.TickManager",
                      "Assignment": "GetComponent<TickManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "featureManager",
                      "Type": "Character.FeatureManager",
                      "Assignment": "GetComponent<FeatureManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Path.Combine(Application.streamingAssetsPath, componentDirectory)",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "Invocation",
                      "AssignedTo": "componentDirectory",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CountDownManager>()",
                      "Type": "Character.CountDownManager",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Invocation",
                      "AssignedTo": "countDownManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<TickManager>()",
                      "Type": "Character.TickManager",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "Invocation",
                      "AssignedTo": "tickManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<FeatureManager>()",
                      "Type": "Character.FeatureManager",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "Invocation",
                      "AssignedTo": "featureManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              },
              {
                "Name": "ResetModifiers",
                "FullName": "Character.ComponentManager.ResetModifiers()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "featureMulMod[f.Type]",
                      "Type": "float",
                      "Assignment": "1.0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "featureAddMod[f.Type]",
                      "Type": "float",
                      "Assignment": "0.0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 59,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Literal",
                      "AssignedTo": "featureMulMod[f.Type]",
                      "Value": "1.0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 59,
                      "UseKind": "Literal",
                      "AssignedTo": "featureAddMod[f.Type]",
                      "Value": "0.0f",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 55
              },
              {
                "Name": "ComputeModifiers",
                "FullName": "Character.ComponentManager.ComputeModifiers()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "mod",
                      "Type": "Dictionary<string, Modifier>",
                      "Assignment": "components[keyValue.Key].MyModifiers",
                      "Kind": "Definition",
                      "DefinitionLine": 67
                    }
                  },
                  {
                    "Variable": {
                      "Name": "featureMulMod[m.Type]",
                      "Type": "float",
                      "Assignment": "m.MultFactor",
                      "Kind": "Assignment",
                      "AssignmentLine": 72,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "featureAddMod[m.Type]",
                      "Type": "float",
                      "Assignment": "m.AddFactor",
                      "Kind": "Assignment",
                      "AssignmentLine": 73,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m.MultFactor",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 72,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "featureMulMod[m.Type]",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m.AddFactor",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 73,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "featureAddMod[m.Type]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 64
              },
              {
                "Name": "ComputeFeatures",
                "FullName": "Character.ComponentManager.ComputeFeatures()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Contains",
                    "FullName": "System.Collections.Generic.List<string>.Contains(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "f.Type",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 85
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "midVal",
                      "Type": "float",
                      "Assignment": "f.BaseValue * featureMulMod[f.Type]",
                      "Kind": "Definition",
                      "DefinitionLine": 86
                    }
                  },
                  {
                    "Variable": {
                      "Name": "f.CurrValue",
                      "Type": "float",
                      "Assignment": "midVal + featureAddMod[f.Type]",
                      "Kind": "Assignment",
                      "AssignmentLine": 87,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "midVal + featureAddMod[f.Type]",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 87,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "f.CurrValue",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "midVal",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 87,
                          "UseKind": "LocalReference",
                          "AssignedTo": "f.CurrValue",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "featureAddMod[f.Type]",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 87,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "f.CurrValue",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 81
              },
              {
                "Name": "CheckIsActive",
                "FullName": "Character.ComponentManager.CheckIsActive()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 99
                  },
                  {
                    "Name": "CheckIsActive",
                    "FullName": "Character.UAComponent.CheckIsActive()",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 59,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 100
                  },
                  {
                    "Name": "RemoveComponent",
                    "FullName": "Character.ComponentManager.RemoveComponent(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 174,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "s",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 100
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 94
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s",
                      "Type": "string",
                      "Assignment": "components.ElementAt(i).Key",
                      "Kind": "Definition",
                      "DefinitionLine": 98
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 93
              },
              {
                "Name": "ComputeAllTicks",
                "FullName": "Character.ComponentManager.ComputeAllTicks()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckTick",
                    "FullName": "Character.UAComponent.CheckTick()",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 48,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 110
                  },
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Modifier>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "m.Name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 114
                  },
                  {
                    "Name": "Remove",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Modifier>.Remove(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "m.Name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 114
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Modifier>.Add(string, Character.Modifier)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "m.Name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 115
                  },
                  {
                    "Name": "ResetTick",
                    "FullName": "Character.UAComponent.ResetTick()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 43,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 117
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 106
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.ComponentManager.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckIsActive",
                    "FullName": "Character.ComponentManager.CheckIsActive()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 125
                  },
                  {
                    "Name": "ResetModifiers",
                    "FullName": "Character.ComponentManager.ResetModifiers()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 55,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 126
                  },
                  {
                    "Name": "ComputeModifiers",
                    "FullName": "Character.ComponentManager.ComputeModifiers()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 64,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 127
                  },
                  {
                    "Name": "ComputeFeatures",
                    "FullName": "Character.ComponentManager.ComputeFeatures()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 81,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 128
                  },
                  {
                    "Name": "ComputeAllTicks",
                    "FullName": "Character.ComponentManager.ComputeAllTicks()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 106,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 129
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 122
              },
              {
                "Name": "LoadSingleComponent",
                "FullName": "Character.ComponentManager.LoadSingleComponent(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "CheckFile",
                    "FullName": "Character.ComponentManager.CheckFile(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 193,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 134
                  },
                  {
                    "Name": "Split",
                    "FullName": "string.Split(params char[])",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "'.'",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 135
                  },
                  {
                    "Name": "GetFileName",
                    "FullName": "System.IO.Path.GetFileName(string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "n[0].Trim()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 136
                  },
                  {
                    "Name": "Trim",
                    "FullName": "string.Trim()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 136
                  },
                  {
                    "Name": "AddBaseComponent",
                    "FullName": "Character.ComponentManager.AddBaseComponent(Character.UAComponent)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 157,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 137
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "Character.ComponentManager.AddComponent(Character.UAComponent)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 163,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 138
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "n",
                      "Type": "string[]",
                      "Assignment": "path.Split('.')",
                      "Kind": "Definition",
                      "DefinitionLine": 134
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c",
                      "Type": "Gear",
                      "Assignment": "new Gear(Path.GetFileName(n[0].Trim()), path, this)",
                      "Kind": "Definition",
                      "DefinitionLine": 135
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 132
              },
              {
                "Name": "LoadComponentGroup",
                "FullName": "Character.ComponentManager.LoadComponentGroup(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "CheckDirectory",
                    "FullName": "Character.ComponentManager.CheckDirectory(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 183,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 143
                  },
                  {
                    "Name": "GetFiles",
                    "FullName": "System.IO.Directory.GetFiles(string, string)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"*.csv\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 144
                  },
                  {
                    "Name": "LoadSingleComponent",
                    "FullName": "Character.ComponentManager.LoadSingleComponent(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 132,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "fileName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 147
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "fileEntries",
                      "Type": "string[]",
                      "Assignment": "Directory.GetFiles(path, \"*.csv\")",
                      "Kind": "Definition",
                      "DefinitionLine": 143
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 141
              },
              {
                "Name": "SingleComponent",
                "FullName": "Character.ComponentManager.SingleComponent(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "UAComponent",
                "Parameters": [
                  {
                    "Name": "component",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ToUpper",
                    "FullName": "string.ToUpper()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 153
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "component",
                      "Type": "string",
                      "Assignment": "component.ToUpper()",
                      "Kind": "Assignment",
                      "AssignmentLine": 152,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "component.ToUpper()",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 152,
                      "UseKind": "Invocation",
                      "AssignedTo": "component",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 151
              },
              {
                "Name": "AddBaseComponent",
                "FullName": "Character.ComponentManager.AddBaseComponent(Character.UAComponent)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "c",
                    "Type": "UAComponent",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.UAComponent>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c.ComponentId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 159
                  },
                  {
                    "Name": "RemoveComponent",
                    "FullName": "Character.ComponentManager.RemoveComponent(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 174,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "c.ComponentId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 159
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.UAComponent>.Add(string, Character.UAComponent)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c.ComponentId",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 160
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 157
              },
              {
                "Name": "AddComponent",
                "FullName": "Character.ComponentManager.AddComponent(Character.UAComponent)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "c",
                    "Type": "UAComponent",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.UAComponent>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c.ComponentId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 165
                  },
                  {
                    "Name": "RemoveComponent",
                    "FullName": "Character.ComponentManager.RemoveComponent(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 174,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "c.ComponentId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 165
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.UAComponent>.Add(string, Character.UAComponent)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c.ComponentId",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 166
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 163
              },
              {
                "Name": "RemoveComponent",
                "FullName": "Character.ComponentManager.RemoveComponent(Character.UAComponent)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "c",
                    "Type": "UAComponent",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "RemoveComponent",
                    "FullName": "Character.ComponentManager.RemoveComponent(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 174,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "c.ComponentId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 171
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 169
              },
              {
                "Name": "RemoveComponent",
                "FullName": "Character.ComponentManager.RemoveComponent(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "c",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Remove",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.UAComponent>.Remove(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 178
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 174
              },
              {
                "Name": "CheckDirectory",
                "FullName": "Character.ComponentManager.CheckDirectory(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Exists",
                    "FullName": "System.IO.Directory.Exists(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 185
                  },
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Directory Not Found\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 187
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 183
              },
              {
                "Name": "CheckFile",
                "FullName": "Character.ComponentManager.CheckFile(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Exists",
                    "FullName": "System.IO.File.Exists(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 195
                  },
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"File Not Found\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 197
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 193
              },
              {
                "Name": "Print",
                "FullName": "Character.ComponentManager.Print()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "c.ComponentId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 209
                  },
                  {
                    "Name": "Log",
                    "FullName": "UnityEngine.Debug.Log(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Features: \" + features",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 214
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "c",
                      "Type": "UAComponent",
                      "Assignment": "components[keyValuePair.Key]",
                      "Kind": "Definition",
                      "DefinitionLine": 207
                    }
                  },
                  {
                    "Variable": {
                      "Name": "features",
                      "Type": "string",
                      "Assignment": "\"\"",
                      "Kind": "Definition",
                      "DefinitionLine": 209
                    }
                  },
                  {
                    "Variable": {
                      "Name": "features",
                      "Type": "string",
                      "Assignment": "c.MyFeatures[f.Key].Type + \" BV: \" + c.MyFeatures[f.Key].BaseValue + \" CV: \" + c.MyFeatures[f.Key].CurrValue",
                      "Kind": "Assignment",
                      "AssignmentLine": 210,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c.MyFeatures[f.Key].Type + \" BV: \" + c.MyFeatures[f.Key].BaseValue + \" CV: \" + c.MyFeatures[f.Key].CurrValue",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 210,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "features",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "c.MyFeatures[f.Key].Type + \" BV: \" + c.MyFeatures[f.Key].BaseValue + \" CV: \"",
                          "Type": "string",
                          "Kind": "Use",
                          "UseLine": 210,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "features",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "c.MyFeatures[f.Key].Type + \" BV: \" + c.MyFeatures[f.Key].BaseValue",
                              "Type": "string",
                              "Kind": "Use",
                              "UseLine": 210,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "features",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": "c.MyFeatures[f.Key].Type + \" BV: \"",
                                  "Type": "string",
                                  "Kind": "Use",
                                  "UseLine": 210,
                                  "UseKind": "BinaryOperator",
                                  "AssignedTo": "features",
                                  "Value": null,
                                  "VariablesList": [
                                    {
                                      "Name": "c.MyFeatures[f.Key].Type",
                                      "Type": "string",
                                      "Kind": "Use",
                                      "UseLine": 210,
                                      "UseKind": "PropertyReference",
                                      "AssignedTo": "features",
                                      "Value": null,
                                      "VariablesList": []
                                    },
                                    {
                                      "Name": null,
                                      "Type": "string",
                                      "Kind": "Use",
                                      "UseLine": 210,
                                      "UseKind": "Literal",
                                      "AssignedTo": "features",
                                      "Value": "\" BV: \"",
                                      "VariablesList": []
                                    }
                                  ]
                                },
                                {
                                  "Name": "c.MyFeatures[f.Key].BaseValue",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 210,
                                  "UseKind": "PropertyReference",
                                  "AssignedTo": "features",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            },
                            {
                              "Name": null,
                              "Type": "string",
                              "Kind": "Use",
                              "UseLine": 210,
                              "UseKind": "Literal",
                              "AssignedTo": "features",
                              "Value": "\" CV: \"",
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "c.MyFeatures[f.Key].CurrValue",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 210,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "features",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 204
              },
              {
                "Name": "PrintFeatures",
                "FullName": "Character.ComponentManager.PrintFeatures()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Log",
                    "FullName": "UnityEngine.Debug.Log(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "f.Type + \" \" + f.CurrValue",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 221
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 219
              },
              {
                "Name": "ComponentsByFeature",
                "FullName": "Character.ComponentManager.ComponentsByFeature(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Dictionary<string, UAComponent>",
                "Parameters": [
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "x => x.Key",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "x=> x.Value",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 226
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "x => x.Value.HasFeature(feature)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 226
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "feature",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 226
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 224
              },
              {
                "Name": "AddTickable",
                "FullName": "Character.ComponentManager.AddTickable(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<string>.Add(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "feature",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 233
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 229
              },
              {
                "Name": "ComponentPickup",
                "FullName": "Character.ComponentManager.ComponentPickup(string, string, string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "type",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Combine",
                    "FullName": "System.IO.Path.Combine(string, string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "Application.streamingAssetsPath",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 240
                  },
                  {
                    "Name": "ToLower",
                    "FullName": "string.ToLower()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 241
                  },
                  {
                    "Name": "ToUpper",
                    "FullName": "char.ToUpper(char)",
                    "ReturnType": "Char",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "type[0]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 242
                  },
                  {
                    "Name": "Substring",
                    "FullName": "string.Substring(int)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 242
                  },
                  {
                    "Name": "GetType",
                    "FullName": "System.Type.GetType(string)",
                    "ReturnType": "Type",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "\"Character.\" + type",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 243
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "Character.ComponentManager.AddComponent(Character.UAComponent)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 163,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "(UAComponent)Activator.CreateInstance(t, name, path, this)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 244
                  },
                  {
                    "Name": "CreateInstance",
                    "FullName": "System.Activator.CreateInstance(System.Type, params object[])",
                    "ReturnType": "Object",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "t",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "this",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 244
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "Type",
                      "Assignment": "Type.GetType(\"Character.\" + type)",
                      "Kind": "Definition",
                      "DefinitionLine": 242
                    }
                  },
                  {
                    "Variable": {
                      "Name": "path",
                      "Type": "string",
                      "Assignment": "Path.Combine(Application.streamingAssetsPath, path)",
                      "Kind": "Assignment",
                      "AssignmentLine": 239,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "type",
                      "Type": "string",
                      "Assignment": "type.ToLower()",
                      "Kind": "Assignment",
                      "AssignmentLine": 240,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "type",
                      "Type": "string",
                      "Assignment": "char.ToUpper(type[0]) + type.Substring(1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 241,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Path.Combine(Application.streamingAssetsPath, path)",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 239,
                      "UseKind": "Invocation",
                      "AssignedTo": "path",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "type.ToLower()",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 240,
                      "UseKind": "Invocation",
                      "AssignedTo": "type",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "char.ToUpper(type[0]) + type.Substring(1)",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 241,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "type",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "char.ToUpper(type[0])",
                          "Type": "char",
                          "Kind": "Use",
                          "UseLine": 241,
                          "UseKind": "Invocation",
                          "AssignedTo": "type",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "type.Substring(1)",
                          "Type": "string",
                          "Kind": "Use",
                          "UseLine": 241,
                          "UseKind": "Invocation",
                          "AssignedTo": "type",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 238
              },
              {
                "Name": "GetAllTicks",
                "FullName": "Character.ComponentManager.GetAllTicks(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Dictionary<string, float>",
                "Parameters": [
                  {
                    "Name": "type",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "x => x.Key",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "x => x.Value.AddFactor",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 249
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "x => x.Value.Type == type",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 249
                  },
                  {
                    "Name": "Remove",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Modifier>.Remove(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "k",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 252
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "filtered",
                      "Type": "Dictionary<string, float>",
                      "Assignment": "allTicks.Where(x => x.Value.Type == type).ToDictionary(x => x.Key, x => x.Value.AddFactor)",
                      "Kind": "Definition",
                      "DefinitionLine": 248
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 247
              },
              {
                "Name": "FeatureValue",
                "FullName": "Character.ComponentManager.FeatureValue(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "res",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 258
                    }
                  },
                  {
                    "Variable": {
                      "Name": "res",
                      "Type": "float",
                      "Assignment": "objectFeatures[feature].CurrValue",
                      "Kind": "Assignment",
                      "AssignmentLine": 261,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "objectFeatures[feature].CurrValue",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 261,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "res",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 257
              },
              {
                "Name": "FilterByType",
                "FullName": "Character.ComponentManager.FilterByType<T>()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Dictionary<string, T>",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, T>.Add(string, T)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c.Key",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "t",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 273
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "filtered",
                      "Type": "Dictionary<string, T>",
                      "Assignment": "new Dictionary<string, T>()",
                      "Kind": "Definition",
                      "DefinitionLine": 269
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 268
              },
              {
                "Name": "IsFeaturePresent",
                "FullName": "Character.ComponentManager.IsFeaturePresent(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Feature>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "feature",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 280
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 278
              },
              {
                "Name": "AddComponents",
                "FullName": "Character.ComponentManager.AddComponents(System.Collections.Generic.Dictionary<string, Character.UAComponent>)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "com",
                    "Type": "Dictionary<string, UAComponent>",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "AddComponent",
                    "FullName": "Character.ComponentManager.AddComponent(Character.UAComponent)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 163,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 285
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 283
              },
              {
                "Name": "UpdateComponents",
                "FullName": "Character.ComponentManager.UpdateComponents(System.Collections.Generic.Dictionary<string, Character.UAComponent>)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "com",
                    "Type": "Dictionary<string, UAComponent>",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Clear",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.UAComponent>.Clear()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 290
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "Character.ComponentManager.AddComponent(Character.UAComponent)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 163,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 291
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "Character.ComponentManager.AddComponent(Character.UAComponent)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 163,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 292
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 288
              }
            ],
            "Fields": [
              {
                "Name": "componentDirectory",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "components",
                "Type": "Dictionary<string, UAComponent>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, UAComponent>()",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "baseComponents",
                "Type": "Dictionary<string, UAComponent>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, UAComponent>()",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "objectFeatures",
                "Type": "Dictionary<string, Feature>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "null",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "featureMulMod",
                "Type": "Dictionary<string, float>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, float>()",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "featureAddMod",
                "Type": "Dictionary<string, float>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, float>()",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "allTicks",
                "Type": "Dictionary<string, Modifier>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, Modifier>()",
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "tickable",
                "Type": "List<string>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new List<string>()",
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "countDownManager",
                "Type": "CountDownManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "tickManager",
                "Type": "TickManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "featureManager",
                "Type": "FeatureManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              }
            ],
            "Line": 11
          }
        ],
        "Usings": [],
        "Line": 9
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System",
        "Line": 2
      },
      {
        "Name": "Unity.IO",
        "Line": 3
      },
      {
        "Name": "System.IO",
        "Line": 4
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 5
      },
      {
        "Name": "System.Linq",
        "Line": 6
      },
      {
        "Name": "UnityEngine",
        "Line": 7
      }
    ],
    "Line": 1
  },
  {
    "Name": "CountDown",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\CountDown.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CountDown",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "OverTime",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Activate",
                "FullName": "Character.CountDown.Activate()",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "ReduceComponent",
                    "FullName": "Character.UAComponent.ReduceComponent(string, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 27,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "parameter",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "valuePerSecond",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 17
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 15
              },
              {
                "Name": "DoCountdown",
                "FullName": "Character.CountDown.DoCountdown()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Activate",
                    "FullName": "Character.CountDown.Activate()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\CountDown.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 22
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 20
              }
            ],
            "Fields": [],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "CountDownManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\CountDownManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CountDownManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.CountDownManager.Awake()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "countDownTimeInSecond",
                      "Kind": "Assignment",
                      "AssignmentLine": 14,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "countDownTimeInSecond",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 14,
                      "UseKind": "FieldReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              },
              {
                "Name": "AddCountDown",
                "FullName": "Character.CountDownManager.AddCountDown(Character.CountDown)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "c",
                    "Type": "CountDown",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<Character.CountDown>.Add(Character.CountDown)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 20
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              },
              {
                "Name": "CheckIsActive",
                "FullName": "Character.CountDownManager.CheckIsActive()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RemoveAll",
                    "FullName": "System.Collections.Generic.List<Character.CountDown>.RemoveAll(System.Predicate<Character.CountDown>)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "item => item.MyComponent.CheckIsActive() == false",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "CheckIsActive",
                    "FullName": "Character.UAComponent.CheckIsActive()",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 59,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 25
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 23
              },
              {
                "Name": "DoCountDown",
                "FullName": "Character.CountDownManager.DoCountDown()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DoCountdown",
                    "FullName": "Character.CountDown.DoCountdown()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\CountDown.cs",
                    "DefinitionLine": 20,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 30
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.CountDownManager.FixedUpdate()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckIsActive",
                    "FullName": "Character.CountDownManager.CheckIsActive()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\CountDownManager.cs",
                    "DefinitionLine": 23,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 36
                  },
                  {
                    "Name": "DoCountDown",
                    "FullName": "Character.CountDownManager.DoCountDown()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\CountDownManager.cs",
                    "DefinitionLine": 28,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 41
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "countDownTimeInSecond",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "countDownTimeInSecond",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "FieldReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 33
              }
            ],
            "Fields": [
              {
                "Name": "countDownTimeInSecond",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "countDowns",
                "Type": "List<CountDown>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new List<CountDown>()",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "timer",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 11
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "EffectManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\EffectManager.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "EffectManager",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Awake",
            "FullName": "EffectManager.Awake()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Combine",
                "FullName": "System.IO.Path.Combine(string, string)",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "Application.streamingAssetsPath",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "effectsWrapperPath",
                    "IsInvocation": false
                  }
                ],
                "Line": 14
              },
              {
                "Name": "LoadEffectWrapper",
                "FullName": "EffectManager.LoadEffectWrapper()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\EffectManager.cs",
                "DefinitionLine": 41,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 15
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "effectsWrapperPath",
                  "Type": "string",
                  "Assignment": "Path.Combine(Application.streamingAssetsPath, effectsWrapperPath)",
                  "Kind": "Assignment",
                  "AssignmentLine": 13,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "Path.Combine(Application.streamingAssetsPath, effectsWrapperPath)",
                  "Type": "string",
                  "Kind": "Use",
                  "UseLine": 13,
                  "UseKind": "Invocation",
                  "AssignedTo": "effectsWrapperPath",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 12
          },
          {
            "Name": "Effects",
            "FullName": "EffectManager.Effects(System.Collections.Generic.List<string>)",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "List<string>",
            "Parameters": [
              {
                "Name": "components",
                "Type": "List<string>",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "Contains",
                "FullName": "System.Collections.Generic.List<string>.Contains(string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "e",
                    "IsInvocation": false
                  }
                ],
                "Line": 27
              },
              {
                "Name": "Add",
                "FullName": "System.Collections.Generic.List<string>.Add(string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "e",
                    "IsInvocation": false
                  }
                ],
                "Line": 27
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "effects",
                  "Type": "List<string>",
                  "Assignment": "new List<string>()",
                  "Kind": "Definition",
                  "DefinitionLine": 19
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 18
          },
          {
            "Name": "AddEffect",
            "FullName": "EffectManager.AddEffect(string, string)",
            "Modifiers": [
              "protected"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "component",
                "Type": "string",
                "Assignment": null
              },
              {
                "Name": "effect",
                "Type": "string",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "ContainsKey",
                "FullName": "System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>>.ContainsKey(string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "component",
                    "IsInvocation": false
                  }
                ],
                "Line": 37
              },
              {
                "Name": "Add",
                "FullName": "System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>>.Add(string, System.Collections.Generic.List<string>)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "component",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "new List<string>()",
                    "IsInvocation": true
                  }
                ],
                "Line": 37
              },
              {
                "Name": "Add",
                "FullName": "System.Collections.Generic.List<string>.Add(string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "effect",
                    "IsInvocation": false
                  }
                ],
                "Line": 38
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 35
          },
          {
            "Name": "LoadEffectWrapper",
            "FullName": "EffectManager.LoadEffectWrapper()",
            "Modifiers": [
              "protected"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "CheckDirectory",
                "FullName": "EffectManager.CheckDirectory(string)",
                "ReturnType": "Boolean",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\EffectManager.cs",
                "DefinitionLine": 64,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "effectsWrapperPath",
                    "IsInvocation": false
                  }
                ],
                "Line": 43
              },
              {
                "Name": "GetFiles",
                "FullName": "System.IO.Directory.GetFiles(string, string)",
                "ReturnType": "",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "effectsWrapperPath",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "\"*.csv\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 44
              },
              {
                "Name": "LoadSingleFile",
                "FullName": "EffectManager.LoadSingleFile(string)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\EffectManager.cs",
                "DefinitionLine": 51,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "fileName",
                    "IsInvocation": false
                  }
                ],
                "Line": 47
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "fileEntries",
                  "Type": "string[]",
                  "Assignment": "Directory.GetFiles(effectsWrapperPath, \"*.csv\")",
                  "Kind": "Definition",
                  "DefinitionLine": 43
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 41
          },
          {
            "Name": "LoadSingleFile",
            "FullName": "EffectManager.LoadSingleFile(string)",
            "Modifiers": [
              "protected"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "fileName",
                "Type": "string",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "CheckFile",
                "FullName": "EffectManager.CheckFile(string)",
                "ReturnType": "Boolean",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\EffectManager.cs",
                "DefinitionLine": 74,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "fileName",
                    "IsInvocation": false
                  }
                ],
                "Line": 53
              },
              {
                "Name": "ReadAllLines",
                "FullName": "System.IO.File.ReadAllLines(string)",
                "ReturnType": "",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "fileName",
                    "IsInvocation": false
                  }
                ],
                "Line": 54
              },
              {
                "Name": "Split",
                "FullName": "string.Split(params char[])",
                "ReturnType": "",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "','",
                    "IsInvocation": false
                  }
                ],
                "Line": 57
              },
              {
                "Name": "Trim",
                "FullName": "string.Trim()",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [],
                "Line": 58
              },
              {
                "Name": "Trim",
                "FullName": "string.Trim()",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [],
                "Line": 59
              },
              {
                "Name": "AddEffect",
                "FullName": "EffectManager.AddEffect(string, string)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\EffectManager.cs",
                "DefinitionLine": 35,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "component",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "effect",
                    "IsInvocation": false
                  }
                ],
                "Line": 60
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "lines",
                  "Type": "string[]",
                  "Assignment": "File.ReadAllLines(fileName)",
                  "Kind": "Definition",
                  "DefinitionLine": 53
                }
              },
              {
                "Variable": {
                  "Name": "items",
                  "Type": "string[]",
                  "Assignment": "l.Split(',')",
                  "Kind": "Definition",
                  "DefinitionLine": 56
                }
              },
              {
                "Variable": {
                  "Name": "component",
                  "Type": "string",
                  "Assignment": "items[0].Trim()",
                  "Kind": "Definition",
                  "DefinitionLine": 57
                }
              },
              {
                "Variable": {
                  "Name": "effect",
                  "Type": "string",
                  "Assignment": "items[1].Trim()",
                  "Kind": "Definition",
                  "DefinitionLine": 58
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 51
          },
          {
            "Name": "CheckDirectory",
            "FullName": "EffectManager.CheckDirectory(string)",
            "Modifiers": [
              "protected"
            ],
            "ReturnType": "bool",
            "Parameters": [
              {
                "Name": "path",
                "Type": "string",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "Exists",
                "FullName": "System.IO.Directory.Exists(string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "path",
                    "IsInvocation": false
                  }
                ],
                "Line": 66
              },
              {
                "Name": "LogError",
                "FullName": "UnityEngine.Debug.LogError(object)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"Directory Not Found\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 68
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 64
          },
          {
            "Name": "CheckFile",
            "FullName": "EffectManager.CheckFile(string)",
            "Modifiers": [
              "protected"
            ],
            "ReturnType": "bool",
            "Parameters": [
              {
                "Name": "path",
                "Type": "string",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "Exists",
                "FullName": "System.IO.File.Exists(string)",
                "ReturnType": "Boolean",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [
                  {
                    "Argument": "path",
                    "IsInvocation": false
                  }
                ],
                "Line": 76
              },
              {
                "Name": "LogError",
                "FullName": "UnityEngine.Debug.LogError(object)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"File Not Found\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 78
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 74
          }
        ],
        "Fields": [
          {
            "Name": "effectsWrapperPath",
            "Type": "string",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "\"EffectWrapper\"",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 9
          },
          {
            "Name": "effectsWrapper",
            "Type": "Dictionary<string, List<string>>",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "new Dictionary<string, List<string>>()",
            "Attributes": [],
            "Line": 10
          }
        ],
        "Line": 7
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "System.IO",
        "Line": 4
      },
      {
        "Name": "System",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "EventManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\EventManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "EventManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "GameManager.EventManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "currPvp",
                      "Type": "bool",
                      "Assignment": "pvp",
                      "Kind": "Assignment",
                      "AssignmentLine": 13,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pvp",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 13,
                      "UseKind": "FieldReference",
                      "AssignedTo": "currPvp",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 12
              },
              {
                "Name": "Update",
                "FullName": "GameManager.EventManager.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetPvP",
                    "FullName": "GameManager.NetManager.SetPvP(bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 132,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "currPvp",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 22
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<GameManager.NetManager>()",
                    "ReturnType": "NetManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 22
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "currPvp",
                      "Type": "bool",
                      "Assignment": "pvp",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pvp",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "FieldReference",
                      "AssignedTo": "currPvp",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 17
              }
            ],
            "Fields": [
              {
                "Name": "pvp",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "true",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "currPvp",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "Feature",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Feature.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Feature",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "BaseValue",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 13
              },
              {
                "Name": "CurrValue",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 17
              },
              {
                "Name": "Type",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 22
              }
            ],
            "Methods": [],
            "Fields": [
              {
                "Name": "base_value",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "curr_value",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "type",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "FeatureManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "FeatureManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Loaded",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 19
              },
              {
                "Name": "FeaturesDirectory",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 24
              },
              {
                "Name": "Features",
                "Type": "Dictionary<string, Feature>",
                "Modifiers": [
                  "public"
                ],
                "Line": 30
              },
              {
                "Name": "BaseFeatures",
                "Type": "Dictionary<string, Feature>",
                "Modifiers": [
                  "public"
                ],
                "Line": 36
              }
            ],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.FeatureManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Combine",
                    "FullName": "System.IO.Path.Combine(string, string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "Application.streamingAssetsPath",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "featuresDirectory",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 43
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Character.ComponentManager>()",
                    "ReturnType": "ComponentManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 44
                  },
                  {
                    "Name": "LoadFeatures",
                    "FullName": "Character.FeatureManager.LoadFeatures()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 49,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 45
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "featuresDirectory",
                      "Type": "string",
                      "Assignment": "Path.Combine(Application.streamingAssetsPath, featuresDirectory)",
                      "Kind": "Assignment",
                      "AssignmentLine": 42,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "componentManager",
                      "Type": "Character.ComponentManager",
                      "Assignment": "GetComponent<ComponentManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "componentManager.ObjectFeatures",
                      "Type": "System.Collections.Generic.Dictionary<string, Character.Feature>",
                      "Assignment": "features",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Path.Combine(Application.streamingAssetsPath, featuresDirectory)",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 42,
                      "UseKind": "Invocation",
                      "AssignedTo": "featuresDirectory",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<ComponentManager>()",
                      "Type": "Character.ComponentManager",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "Invocation",
                      "AssignedTo": "componentManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "features",
                      "Type": "System.Collections.Generic.Dictionary<string, Character.Feature>",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "FieldReference",
                      "AssignedTo": "componentManager.ObjectFeatures",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 41
              },
              {
                "Name": "LoadFeatures",
                "FullName": "Character.FeatureManager.LoadFeatures()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Exists",
                    "FullName": "System.IO.Directory.Exists(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "featuresDirectory",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 51
                  },
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Features Directory Not Found\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  },
                  {
                    "Name": "GetFiles",
                    "FullName": "System.IO.Directory.GetFiles(string, string)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "featuresDirectory",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"*.csv\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "ReadAllLines",
                    "FullName": "System.IO.File.ReadAllLines(string)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "fileName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "Split",
                    "FullName": "string.Split(params char[])",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "','",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 62
                  },
                  {
                    "Name": "Trim",
                    "FullName": "string.Trim()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 63
                  },
                  {
                    "Name": "ParseFloatValue",
                    "FullName": "Character.FeatureManager.ParseFloatValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 73,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "items[1]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "AddFeature",
                    "FullName": "Character.FeatureManager.AddFeature(Character.Feature)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 108,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 66
                  },
                  {
                    "Name": "AddBaseFeature",
                    "FullName": "Character.FeatureManager.AddBaseFeature(Character.Feature)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 113,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 67
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "fileEntries",
                      "Type": "string[]",
                      "Assignment": "Directory.GetFiles(featuresDirectory, \"*.csv\")",
                      "Kind": "Definition",
                      "DefinitionLine": 55
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lines",
                      "Type": "string[]",
                      "Assignment": "File.ReadAllLines(fileName)",
                      "Kind": "Definition",
                      "DefinitionLine": 58
                    }
                  },
                  {
                    "Variable": {
                      "Name": "items",
                      "Type": "string[]",
                      "Assignment": "l.Split(',')",
                      "Kind": "Definition",
                      "DefinitionLine": 61
                    }
                  },
                  {
                    "Variable": {
                      "Name": "type",
                      "Type": "string",
                      "Assignment": "items[0].Trim()",
                      "Kind": "Definition",
                      "DefinitionLine": 62
                    }
                  },
                  {
                    "Variable": {
                      "Name": "b_value",
                      "Type": "float",
                      "Assignment": "ParseFloatValue(items[1])",
                      "Kind": "Definition",
                      "DefinitionLine": 63
                    }
                  },
                  {
                    "Variable": {
                      "Name": "f",
                      "Type": "Feature",
                      "Assignment": "new Feature(b_value, type)",
                      "Kind": "Definition",
                      "DefinitionLine": 64
                    }
                  },
                  {
                    "Variable": {
                      "Name": "loaded",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": "Literal",
                      "AssignedTo": "loaded",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 49
              },
              {
                "Name": "ParseFloatValue",
                "FullName": "Character.FeatureManager.ParseFloatValue(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "val",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Parse",
                    "FullName": "float.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "val",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "System.Globalization.NumberStyles.Any",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "System.Globalization.CultureInfo.InvariantCulture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 75
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 73
              },
              {
                "Name": "FeatureValue",
                "FullName": "Character.FeatureManager.FeatureValue(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ToUpper",
                    "FullName": "string.ToUpper()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 80
                  },
                  {
                    "Name": "AddFeature",
                    "FullName": "Character.FeatureManager.AddFeature(Character.Feature)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 108,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 84
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "f",
                      "Type": "Feature",
                      "Assignment": "new Feature(feature)",
                      "Kind": "Definition",
                      "DefinitionLine": 83
                    }
                  },
                  {
                    "Variable": {
                      "Name": "feature",
                      "Type": "string",
                      "Assignment": "feature.ToUpper()",
                      "Kind": "Assignment",
                      "AssignmentLine": 79,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "feature.ToUpper()",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 79,
                      "UseKind": "Invocation",
                      "AssignedTo": "feature",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 78
              },
              {
                "Name": "TickValue",
                "FullName": "Character.FeatureManager.TickValue(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "AddTickable",
                    "FullName": "Character.ComponentManager.AddTickable(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 229,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "feature",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 90
                  },
                  {
                    "Name": "ToUpper",
                    "FullName": "string.ToUpper()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 91
                  },
                  {
                    "Name": "AddFeature",
                    "FullName": "Character.FeatureManager.AddFeature(Character.Feature)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 108,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 98
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "currValue",
                      "Type": "float",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 91
                    }
                  },
                  {
                    "Variable": {
                      "Name": "f",
                      "Type": "Feature",
                      "Assignment": "new Feature(feature)",
                      "Kind": "Definition",
                      "DefinitionLine": 97
                    }
                  },
                  {
                    "Variable": {
                      "Name": "feature",
                      "Type": "string",
                      "Assignment": "feature.ToUpper()",
                      "Kind": "Assignment",
                      "AssignmentLine": 90,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currValue",
                      "Type": "float",
                      "Assignment": "features[feature].CurrValue",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "features[feature].CurrValue",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 94,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currValue",
                      "Type": "float",
                      "Assignment": "f.CurrValue",
                      "Kind": "Assignment",
                      "AssignmentLine": 97,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "feature.ToUpper()",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 90,
                      "UseKind": "Invocation",
                      "AssignedTo": "feature",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "features[feature].CurrValue",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "currValue",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 94,
                      "UseKind": "Literal",
                      "AssignedTo": "features[feature].CurrValue",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "f.CurrValue",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 97,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "currValue",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 88
              },
              {
                "Name": "GetSingleFeature",
                "FullName": "Character.FeatureManager.GetSingleFeature(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Feature",
                "Parameters": [
                  {
                    "Name": "type",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 103
              },
              {
                "Name": "AddFeature",
                "FullName": "Character.FeatureManager.AddFeature(Character.Feature)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "Feature",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Feature>.Add(string, Character.Feature)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "f.Type",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 110
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 108
              },
              {
                "Name": "AddBaseFeature",
                "FullName": "Character.FeatureManager.AddBaseFeature(Character.Feature)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "Feature",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Feature>.Add(string, Character.Feature)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "f.Type",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 115
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 113
              },
              {
                "Name": "AddFeature",
                "FullName": "Character.FeatureManager.AddFeature(string, float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "type",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "val",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "AddFeature",
                    "FullName": "Character.FeatureManager.AddFeature(Character.Feature)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 108,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "new Feature(val, type)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 120
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 118
              },
              {
                "Name": "RemoveFeature",
                "FullName": "Character.FeatureManager.RemoveFeature(Character.Feature)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "Feature",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Remove",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Feature>.Remove(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "f.Type",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 125
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 123
              },
              {
                "Name": "RemoveFeature",
                "FullName": "Character.FeatureManager.RemoveFeature(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Remove",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Feature>.Remove(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 128
              }
            ],
            "Fields": [
              {
                "Name": "featuresDirectory",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "loaded",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "features",
                "Type": "Dictionary<string, Feature>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, Feature>()",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "baseFeatures",
                "Type": "Dictionary<string, Feature>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, Feature>()",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "componentManager",
                "Type": "ComponentManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              }
            ],
            "Line": 11
          }
        ],
        "Usings": [],
        "Line": 9
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "System.Linq",
        "Line": 3
      },
      {
        "Name": "System",
        "Line": 4
      },
      {
        "Name": "System.IO",
        "Line": 5
      },
      {
        "Name": "UnityEngine",
        "Line": 6
      },
      {
        "Name": "Unity.IO",
        "Line": 7
      }
    ],
    "Line": 1
  },
  {
    "Name": "Gear",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Gear.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Gear",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "UAComponent",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "AddToTick",
                "FullName": "Character.Gear.AddToTick()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckFeature",
                    "FullName": "Character.UAComponent.CheckFeature(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 157,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "TICK",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "DoTick",
                    "FullName": "Character.Tick.DoTick()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Tick.cs",
                    "DefinitionLine": 40,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 27
                  },
                  {
                    "Name": "AddTick",
                    "FullName": "Character.TickManager.AddTick(Character.Tick)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\TickManager.cs",
                    "DefinitionLine": 19,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "t",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "Tick",
                      "Assignment": "new Tick(this, TICK, (int)m_features[TICK].CurrValue)",
                      "Kind": "Definition",
                      "DefinitionLine": 25
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 23
              },
              {
                "Name": "AddToCountdown",
                "FullName": "Character.Gear.AddToCountdown()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckFeature",
                    "FullName": "Character.UAComponent.CheckFeature(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 157,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "TIME",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "AddCountDown",
                    "FullName": "Character.CountDownManager.AddCountDown(Character.CountDown)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\CountDownManager.cs",
                    "DefinitionLine": 18,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "new CountDown(this, TIME, valuePerSecond)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 34
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 31
              }
            ],
            "Fields": [
              {
                "Name": "cdmanager",
                "Type": "CountDownManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "tm",
                "Type": "TickManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "TIME",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"TIME\"",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "TICK",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"TICK\"",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "valuePerSecond",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 13
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "InGameUIManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\InGameUIManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "InGameUIManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.InGameUIManager.Awake()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.PlayerLifeManager>()",
                    "ReturnType": "PlayerLifeManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 34
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Weapon.WeaponManager>()",
                    "ReturnType": "WeaponManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 35
                  },
                  {
                    "Name": "ToString",
                    "FullName": "int.ToString()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 36
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "placeHolder.rectTransform.sizeDelta.x",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 40
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 41
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<AudioManagerPkg.AudioManager>()",
                    "ReturnType": "AudioManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 42
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "lifeManager",
                      "Type": "Character.PlayerLifeManager",
                      "Assignment": "playerManager.GetComponent<PlayerLifeManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weaponManager",
                      "Type": "Weapon.WeaponManager",
                      "Assignment": "playerManager.GetComponent<WeaponManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "maxHealth.text",
                      "Type": "?",
                      "Assignment": "lifeManager.MaxHealth.ToString()",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "placeholderVal",
                      "Type": "float",
                      "Assignment": "Mathf.CeilToInt(placeHolder.rectTransform.sizeDelta.x)",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "maxVal",
                      "Type": "float",
                      "Assignment": "1 / (float)lifeManager.MaxHealth",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "healthFeedback.color",
                      "Type": "?",
                      "Assignment": "new Color(0, 0, 0, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "feedbackTime",
                      "Type": "float",
                      "Assignment": "healthFeedback.GetComponent<UiFeedback>().FeedbackTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "maxTransparency",
                      "Type": "float",
                      "Assignment": "healthFeedback.GetComponent<UiFeedback>().MaxTransparency",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "audioManager",
                      "Type": "AudioManagerPkg.AudioManager",
                      "Assignment": "audioManagerObj.GetComponent<AudioManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager.GetComponent<PlayerLifeManager>()",
                      "Type": "Character.PlayerLifeManager",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "Invocation",
                      "AssignedTo": "lifeManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager.GetComponent<WeaponManager>()",
                      "Type": "Weapon.WeaponManager",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "Invocation",
                      "AssignedTo": "weaponManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lifeManager.MaxHealth.ToString()",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "Invocation",
                      "AssignedTo": "maxHealth.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.CeilToInt(placeHolder.rectTransform.sizeDelta.x)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "Invalid",
                      "AssignedTo": "placeholderVal",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "1 / (float)lifeManager.MaxHealth",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "maxVal",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 37,
                          "UseKind": "Literal",
                          "AssignedTo": "maxVal",
                          "Value": "1",
                          "VariablesList": []
                        },
                        {
                          "Name": "(float)lifeManager.MaxHealth",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 37,
                          "UseKind": "Conversion",
                          "AssignedTo": "maxVal",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Color(0, 0, 0, 0)",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "healthFeedback.color",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "healthFeedback.GetComponent<UiFeedback>().FeedbackTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Invalid",
                      "AssignedTo": "feedbackTime",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "healthFeedback.GetComponent<UiFeedback>().MaxTransparency",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "Invalid",
                      "AssignedTo": "maxTransparency",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "audioManagerObj.GetComponent<AudioManager>()",
                      "Type": "AudioManagerPkg.AudioManager",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Invocation",
                      "AssignedTo": "audioManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 32
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.InGameUIManager.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "ToString",
                    "FullName": "int.ToString()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 47
                  },
                  {
                    "Name": "ToString",
                    "FullName": "int.ToString()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 48
                  },
                  {
                    "Name": "LifeBarCalc",
                    "FullName": "Character.InGameUIManager.LifeBarCalc(int)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\InGameUIManager.cs",
                    "DefinitionLine": 67,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "lifeManager.Health",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "c",
                      "Type": "Color",
                      "Assignment": "healthFeedback.color",
                      "Kind": "Definition",
                      "DefinitionLine": 55
                    }
                  },
                  {
                    "Variable": {
                      "Name": "health.text",
                      "Type": "?",
                      "Assignment": "lifeManager.Health.ToString()",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "armor.text",
                      "Type": "?",
                      "Assignment": "lifeManager.Armor.ToString()",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weapon.text",
                      "Type": "?",
                      "Assignment": "\"\"",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ammo.text",
                      "Type": "?",
                      "Assignment": "\"\\u221E\"",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lifeBar.rectTransform.sizeDelta",
                      "Type": "?",
                      "Assignment": "new Vector2(LifeBarCalc(lifeManager.Health), lifeBar.rectTransform.sizeDelta.y)",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c.a",
                      "Type": "float",
                      "Assignment": "feedbackTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 57,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "colorUp",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c.a",
                      "Type": "float",
                      "Assignment": "feedbackTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 60,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "healthFeedback.color",
                      "Type": "?",
                      "Assignment": "c",
                      "Kind": "Assignment",
                      "AssignmentLine": 61,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isFeedback",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lifeManager.Health.ToString()",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "Invocation",
                      "AssignedTo": "health.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lifeManager.Armor.ToString()",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "Invocation",
                      "AssignedTo": "armor.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Literal",
                      "AssignedTo": "weapon.text",
                      "Value": "\"\"",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "Literal",
                      "AssignedTo": "ammo.text",
                      "Value": "\"\\u221E\"",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector2(LifeBarCalc(lifeManager.Health), lifeBar.rectTransform.sizeDelta.y)",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "Invalid",
                      "AssignedTo": "lifeBar.rectTransform.sizeDelta",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "feedbackTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 57,
                      "UseKind": "FieldReference",
                      "AssignedTo": "c.a",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Literal",
                      "AssignedTo": "colorUp",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "feedbackTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 60,
                      "UseKind": "FieldReference",
                      "AssignedTo": "c.a",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 61,
                      "UseKind": "LocalReference",
                      "AssignedTo": "healthFeedback.color",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "Literal",
                      "AssignedTo": "isFeedback",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 45
              },
              {
                "Name": "LifeBarCalc",
                "FullName": "Character.InGameUIManager.LifeBarCalc(int)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "val",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 67
              },
              {
                "Name": "DoFeedback",
                "FullName": "Character.InGameUIManager.DoFeedback(UnityEngine.Color)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "color",
                    "Type": "Color",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "color.a",
                      "Type": "float",
                      "Assignment": "0.0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 73,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "healthFeedback.color",
                      "Type": "?",
                      "Assignment": "color",
                      "Kind": "Assignment",
                      "AssignmentLine": 74,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "colorUp",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 75,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isFeedback",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 76,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 73,
                      "UseKind": "Literal",
                      "AssignedTo": "color.a",
                      "Value": "0.0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "color",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 74,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "healthFeedback.color",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 75,
                      "UseKind": "Literal",
                      "AssignedTo": "colorUp",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 76,
                      "UseKind": "Literal",
                      "AssignedTo": "isFeedback",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 72
              },
              {
                "Name": "CollectibleFeedback",
                "FullName": "Character.InGameUIManager.CollectibleFeedback(UnityEngine.GameObject)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "o",
                    "Type": "GameObject",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.CollectibleFeedback>()",
                    "ReturnType": "CollectibleFeedback",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 82
                  },
                  {
                    "Name": "DoFeedback",
                    "FullName": "Character.InGameUIManager.DoFeedback(UnityEngine.Color)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\InGameUIManager.cs",
                    "DefinitionLine": 72,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "o.GetComponent<CollectibleFeedback>().FeedbackColor._feedbackColor",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 84
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.CollectibleFeedback>()",
                    "ReturnType": "CollectibleFeedback",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 84
                  },
                  {
                    "Name": "PlaySound",
                    "FullName": "AudioManagerPkg.AudioManager.PlaySound(UnityEngine.AudioClip)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\AudioManager.cs",
                    "DefinitionLine": 18,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "o.GetComponent<CollectibleFeedback>().Clip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 85
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.CollectibleFeedback>()",
                    "ReturnType": "CollectibleFeedback",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 85
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 80
              }
            ],
            "Fields": [
              {
                "Name": "playerManager",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "audioManagerObj",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "maxHealth",
                "Type": "Text",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "health",
                "Type": "Text",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "armor",
                "Type": "Text",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "lifeBar",
                "Type": "Image",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "weapon",
                "Type": "Text",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "ammo",
                "Type": "Text",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "placeHolder",
                "Type": "Image",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "healthFeedback",
                "Type": "Image",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 21
              },
              {
                "Name": "lifeManager",
                "Type": "PlayerLifeManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "weaponManager",
                "Type": "WeaponManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "audioManager",
                "Type": "AudioManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "placeholderVal",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "maxVal",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "isFeedback",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "feedbackTime",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0.0f",
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "maxTransparency",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0.0f",
                "Attributes": [],
                "Line": 29
              },
              {
                "Name": "colorUp",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 30
              }
            ],
            "Line": 10
          }
        ],
        "Usings": [],
        "Line": 8
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 4
      },
      {
        "Name": "Weapon",
        "Line": 5
      },
      {
        "Name": "AudioManagerPkg",
        "Line": 6
      }
    ],
    "Line": 1
  },
  {
    "Name": "LoadingHandler",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\LoadingHandler.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "LoadingHandler",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Rotate",
            "FullName": "LoadingHandler.Rotate()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Euler",
                "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                "ReturnType": "Quaternion",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "rotation",
                    "IsInvocation": false
                  }
                ],
                "Line": 27
              },
              {
                "Name": "Euler",
                "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                "ReturnType": "Quaternion",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "-rotation",
                    "IsInvocation": true
                  }
                ],
                "Line": 28
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "rotation",
                  "Type": "float",
                  "Assignment": "rotationSpeed",
                  "Kind": "Assignment",
                  "AssignmentLine": 25,
                  "AssignmentKind": "AddAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "transform.localRotation",
                  "Type": "UnityEngine.Quaternion",
                  "Assignment": "Quaternion.Euler(0, 0, rotation)",
                  "Kind": "Assignment",
                  "AssignmentLine": 26,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "transform.localRotation",
                  "Type": "UnityEngine.Quaternion",
                  "Assignment": "Quaternion.Euler(0, 0, -rotation)",
                  "Kind": "Assignment",
                  "AssignmentLine": 27,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rotationSpeed",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 25,
                  "UseKind": "FieldReference",
                  "AssignedTo": "rotation",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Quaternion.Euler(0, 0, rotation)",
                  "Type": "UnityEngine.Quaternion",
                  "Kind": "Use",
                  "UseLine": 26,
                  "UseKind": "Invocation",
                  "AssignedTo": "transform.localRotation",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Quaternion.Euler(0, 0, -rotation)",
                  "Type": "UnityEngine.Quaternion",
                  "Kind": "Use",
                  "UseLine": 27,
                  "UseKind": "Invocation",
                  "AssignedTo": "transform.localRotation",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 22
          },
          {
            "Name": "Resize",
            "FullName": "LoadingHandler.Resize()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "transform.localScale",
                  "Type": "UnityEngine.Vector3",
                  "Assignment": "size",
                  "Kind": "Assignment",
                  "AssignmentLine": 35,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "size",
                  "Type": "UnityEngine.Vector3",
                  "Kind": "Use",
                  "UseLine": 35,
                  "UseKind": "FieldReference",
                  "AssignedTo": "transform.localScale",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 32
          },
          {
            "Name": "CalcSize",
            "FullName": "LoadingHandler.CalcSize()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "size.x",
                  "Type": "float",
                  "Assignment": "resizeSpeed",
                  "Kind": "Assignment",
                  "AssignmentLine": 43,
                  "AssignmentKind": "AddAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "size.y",
                  "Type": "float",
                  "Assignment": "resizeSpeed",
                  "Kind": "Assignment",
                  "AssignmentLine": 44,
                  "AssignmentKind": "AddAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "enbiggen",
                  "Type": "bool",
                  "Assignment": "false",
                  "Kind": "Assignment",
                  "AssignmentLine": 45,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "size.x",
                  "Type": "float",
                  "Assignment": "resizeSpeed",
                  "Kind": "Assignment",
                  "AssignmentLine": 49,
                  "AssignmentKind": "SubtractAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "size.y",
                  "Type": "float",
                  "Assignment": "resizeSpeed",
                  "Kind": "Assignment",
                  "AssignmentLine": 50,
                  "AssignmentKind": "SubtractAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "enbiggen",
                  "Type": "bool",
                  "Assignment": "true",
                  "Kind": "Assignment",
                  "AssignmentLine": 51,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "resizeSpeed",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 43,
                  "UseKind": "FieldReference",
                  "AssignedTo": "size.x",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "resizeSpeed",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 44,
                  "UseKind": "FieldReference",
                  "AssignedTo": "size.y",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 45,
                  "UseKind": "Literal",
                  "AssignedTo": "enbiggen",
                  "Value": "false",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "resizeSpeed",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 49,
                  "UseKind": "FieldReference",
                  "AssignedTo": "size.x",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "resizeSpeed",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 50,
                  "UseKind": "FieldReference",
                  "AssignedTo": "size.y",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 51,
                  "UseKind": "Literal",
                  "AssignedTo": "enbiggen",
                  "Value": "true",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 40
          },
          {
            "Name": "CalcProgress",
            "FullName": "LoadingHandler.CalcProgress()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "size.y",
                  "Type": "float",
                  "Assignment": "transform.localScale.y",
                  "Kind": "Assignment",
                  "AssignmentLine": 57,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "size.x",
                  "Type": "float",
                  "Assignment": "progressBarSpeed",
                  "Kind": "Assignment",
                  "AssignmentLine": 60,
                  "AssignmentKind": "AddAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "enbiggen",
                  "Type": "bool",
                  "Assignment": "false",
                  "Kind": "Assignment",
                  "AssignmentLine": 61,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "size.x",
                  "Type": "float",
                  "Assignment": "progressBarSpeed",
                  "Kind": "Assignment",
                  "AssignmentLine": 65,
                  "AssignmentKind": "SubtractAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "enbiggen",
                  "Type": "bool",
                  "Assignment": "true",
                  "Kind": "Assignment",
                  "AssignmentLine": 66,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "transform.localScale.y",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 57,
                  "UseKind": "FieldReference",
                  "AssignedTo": "size.y",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "progressBarSpeed",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 60,
                  "UseKind": "FieldReference",
                  "AssignedTo": "size.x",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 61,
                  "UseKind": "Literal",
                  "AssignedTo": "enbiggen",
                  "Value": "false",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "progressBarSpeed",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 65,
                  "UseKind": "FieldReference",
                  "AssignedTo": "size.x",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 66,
                  "UseKind": "Literal",
                  "AssignedTo": "enbiggen",
                  "Value": "true",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 56
          },
          {
            "Name": "FixedUpdate",
            "FullName": "LoadingHandler.FixedUpdate()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "CalcSize",
                "FullName": "LoadingHandler.CalcSize()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\LoadingHandler.cs",
                "DefinitionLine": 40,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 73
              },
              {
                "Name": "CalcProgress",
                "FullName": "LoadingHandler.CalcProgress()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\LoadingHandler.cs",
                "DefinitionLine": 56,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 74
              },
              {
                "Name": "Rotate",
                "FullName": "LoadingHandler.Rotate()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\LoadingHandler.cs",
                "DefinitionLine": 22,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 75
              },
              {
                "Name": "Resize",
                "FullName": "LoadingHandler.Resize()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\LoadingHandler.cs",
                "DefinitionLine": 32,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 76
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 71
          }
        ],
        "Fields": [
          {
            "Name": "rotation",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "0.0f",
            "Attributes": [],
            "Line": 8
          },
          {
            "Name": "size",
            "Type": "Vector2",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "new Vector2(1f, 1f)",
            "Attributes": [],
            "Line": 9
          },
          {
            "Name": "enbiggen",
            "Type": "bool",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "false",
            "Attributes": [],
            "Line": 10
          },
          {
            "Name": "rotationSpeed",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "3.0f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 11
          },
          {
            "Name": "isRight",
            "Type": "bool",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "false",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 12
          },
          {
            "Name": "isRotate",
            "Type": "bool",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "false",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 13
          },
          {
            "Name": "resizeSpeed",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "0.001f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 14
          },
          {
            "Name": "isResize",
            "Type": "bool",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "false",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 15
          },
          {
            "Name": "maxSize",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "2.0f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 16
          },
          {
            "Name": "minSize",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "0.3f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 17
          },
          {
            "Name": "isProgressBar",
            "Type": "bool",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "false",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 18
          },
          {
            "Name": "progressBarWidth",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "800.0f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 19
          },
          {
            "Name": "progressBarSpeed",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "200.0f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 20
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "LoadingScreenManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\LoadingScreenManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "LoadingScreenManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "IsLoading",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 19
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "GameManager.LoadingScreenManager.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<GameManager.SceneChangeManager>()",
                    "ReturnType": "SceneChangeManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 16
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "sceneChangeManager",
                      "Type": "GameManager.SceneChangeManager",
                      "Assignment": "GetComponent<SceneChangeManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<SceneChangeManager>()",
                      "Type": "GameManager.SceneChangeManager",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "Invocation",
                      "AssignedTo": "sceneChangeManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "Loading",
                "FullName": "GameManager.LoadingScreenManager.Loading()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "WaitForLoad()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 27
                  },
                  {
                    "Name": "WaitForLoad",
                    "FullName": "GameManager.LoadingScreenManager.WaitForLoad()",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\LoadingScreenManager.cs",
                    "DefinitionLine": 30,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 27
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 25
              },
              {
                "Name": "WaitForLoad",
                "FullName": "GameManager.LoadingScreenManager.WaitForLoad()",
                "Modifiers": [],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Instantiate",
                    "FullName": "UnityEngine.Object.Instantiate<UnityEngine.GameObject>(UnityEngine.GameObject)",
                    "ReturnType": "GameObject",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "loadingScreen",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "ChangeScene",
                    "FullName": "GameManager.SceneChangeManager.ChangeScene()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\SceneChangeManager.cs",
                    "DefinitionLine": 41,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 35
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "thisLoadingScreen",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "Instantiate(loadingScreen)",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isLoading",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Instantiate(loadingScreen)",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "Invocation",
                      "AssignedTo": "thisLoadingScreen",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "Literal",
                      "AssignedTo": "isLoading",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              },
              {
                "Name": "Update",
                "FullName": "GameManager.LoadingScreenManager.Update()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 40
              }
            ],
            "Fields": [
              {
                "Name": "loadingScreen",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "isLoading",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "thisLoadingScreen",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "sceneChangeManager",
                "Type": "SceneChangeManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "MainMenu",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\MainMenu.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "MainMenu",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Start",
            "FullName": "MainMenu.Start()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetFloat",
                "FullName": "UnityEngine.PlayerPrefs.GetFloat(string)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"masterVolume\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 12
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "lockMode",
                  "Type": "CursorLockMode",
                  "Assignment": "CursorLockMode.Confined",
                  "Kind": "Definition",
                  "DefinitionLine": 9
                }
              },
              {
                "Variable": {
                  "Name": "Cursor.lockState",
                  "Type": "UnityEngine.CursorLockMode",
                  "Assignment": "lockMode",
                  "Kind": "Assignment",
                  "AssignmentLine": 10,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "AudioListener.volume",
                  "Type": "float",
                  "Assignment": "PlayerPrefs.GetFloat(\"masterVolume\")",
                  "Kind": "Assignment",
                  "AssignmentLine": 11,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "lockMode",
                  "Type": "UnityEngine.CursorLockMode",
                  "Kind": "Use",
                  "UseLine": 10,
                  "UseKind": "LocalReference",
                  "AssignedTo": "Cursor.lockState",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "PlayerPrefs.GetFloat(\"masterVolume\")",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 11,
                  "UseKind": "Invocation",
                  "AssignedTo": "AudioListener.volume",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 8
          },
          {
            "Name": "ExitGame",
            "FullName": "MainMenu.ExitGame()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Quit",
                "FullName": "UnityEngine.Application.Quit()",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 17
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 15
          }
        ],
        "Fields": [],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "MenuEffect",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\MenuEffect.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "MenuEffect",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Start",
            "FullName": "MenuEffect.Start()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [
              {
                "Variable": {
                  "Name": "Application.targetFrameRate",
                  "Type": "int",
                  "Assignment": "60",
                  "Kind": "Assignment",
                  "AssignmentLine": 12,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "int",
                  "Kind": "Use",
                  "UseLine": 12,
                  "UseKind": "Literal",
                  "AssignedTo": "Application.targetFrameRate",
                  "Value": "60",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 11
          },
          {
            "Name": "FixedUpdate",
            "FullName": "MenuEffect.FixedUpdate()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "SetFloat",
                "FullName": "UnityEngine.Material.SetFloat(string, float)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"_Rotation\"",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "rot",
                    "IsInvocation": false
                  }
                ],
                "Line": 22
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "rot",
                  "Type": "float",
                  "Assignment": "speed",
                  "Kind": "Assignment",
                  "AssignmentLine": 18,
                  "AssignmentKind": "AddAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rot",
                  "Type": "float",
                  "Assignment": "0",
                  "Kind": "Assignment",
                  "AssignmentLine": 19,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rot",
                  "Type": "float",
                  "Assignment": "360",
                  "Kind": "Assignment",
                  "AssignmentLine": 20,
                  "AssignmentKind": "ModuloAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "speed",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 18,
                  "UseKind": "FieldReference",
                  "AssignedTo": "rot",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 19,
                  "UseKind": "Literal",
                  "AssignedTo": "rot",
                  "Value": "0",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 20,
                  "UseKind": "Literal",
                  "AssignedTo": "rot",
                  "Value": "360",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 17
          }
        ],
        "Fields": [
          {
            "Name": "speed",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "0.05f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 7
          },
          {
            "Name": "rot",
            "Type": "float",
            "Modifiers": [],
            "Assignment": "0f",
            "Attributes": [],
            "Line": 8
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "Modifier",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Modifier.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Modifier",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Type",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 14
              },
              {
                "Name": "Name",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 19
              },
              {
                "Name": "MultFactor",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 24
              },
              {
                "Name": "AddFactor",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 29
              }
            ],
            "Methods": [],
            "Fields": [
              {
                "Name": "name",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "featureType",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "mult_factor",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1.0f",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "add_factor",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0.0f",
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "MuzzleManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\MuzzleManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Weapon",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "MuzzleManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Muzzle",
                "FullName": "Weapon.MuzzleManager.Muzzle()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 17
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 19
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 15
              }
            ],
            "Fields": [
              {
                "Name": "muzzle",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "interval",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0.02f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "timer",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "active",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 13
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "NameSelection",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NameSelection.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "NameSelection",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "GameManager.NameSelection.Awake()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<GameManager.SceneChangeManager>()",
                    "ReturnType": "SceneChangeManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 16
                  },
                  {
                    "Name": "FindGameObjectWithTag",
                    "FullName": "UnityEngine.GameObject.FindGameObjectWithTag(string)",
                    "ReturnType": "GameObject",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"NetworkManager\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 16
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "scm",
                      "Type": "GameManager.SceneChangeManager",
                      "Assignment": "GameObject.FindGameObjectWithTag(\"NetworkManager\").GetComponent<SceneChangeManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GameObject.FindGameObjectWithTag(\"NetworkManager\").GetComponent<SceneChangeManager>()",
                      "Type": "GameManager.SceneChangeManager",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "Invocation",
                      "AssignedTo": "scm",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "Start",
                "FullName": "GameManager.NameSelection.Start()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "delegate { RemoveSpaces(); }",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 21
                  },
                  {
                    "Name": "RemoveSpaces",
                    "FullName": "GameManager.NameSelection.RemoveSpaces()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NameSelection.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 21
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "RemoveSpaces",
                "FullName": "GameManager.NameSelection.RemoveSpaces()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\" \"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "playerName.text",
                      "Type": "?",
                      "Assignment": "playerName.text.Replace(\" \", \"\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerName.text.Replace(\" \", \"\")",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "Invalid",
                      "AssignedTo": "playerName.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "ConnectToGame",
                "FullName": "GameManager.NameSelection.ConnectToGame()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 31
                  },
                  {
                    "Name": "ToString",
                    "FullName": "float.ToString()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 31
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Name\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "playerName.text",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "LoadingScreen",
                    "FullName": "GameManager.SceneChangeManager.LoadingScreen(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\SceneChangeManager.cs",
                    "DefinitionLine": 34,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"UnlimitedArena_Menu\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "playerName.text",
                      "Type": "?",
                      "Assignment": "\"GuestPlayer\" + Time.time.ToString()",
                      "Kind": "Assignment",
                      "AssignmentLine": 30,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "\"GuestPlayer\" + Time.time.ToString()",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 30,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "playerName.text",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "string",
                          "Kind": "Use",
                          "UseLine": 30,
                          "UseKind": "Literal",
                          "AssignedTo": "playerName.text",
                          "Value": "\"GuestPlayer\"",
                          "VariablesList": []
                        },
                        {
                          "Name": "Time.time.ToString()",
                          "Type": "string",
                          "Kind": "Use",
                          "UseLine": 30,
                          "UseKind": "Invocation",
                          "AssignedTo": "playerName.text",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 29
              }
            ],
            "Fields": [
              {
                "Name": "playerName",
                "Type": "InputField",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "scm",
                "Type": "SceneChangeManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "NetManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "NetManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkManager",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "SpawnPositionsList",
                "Type": "List<Vector3>",
                "Modifiers": [
                  "public"
                ],
                "Line": 29
              },
              {
                "Name": "PManager",
                "Type": "PlayerManagerScript",
                "Modifiers": [
                  "public"
                ],
                "Line": 34
              },
              {
                "Name": "MyClient",
                "Type": "NetworkClient",
                "Modifiers": [
                  "public"
                ],
                "Line": 40
              },
              {
                "Name": "IsHost",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 46
              },
              {
                "Name": "ChosenPlayer",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 51
              },
              {
                "Name": "InGame",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 56
              },
              {
                "Name": "Player",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Line": 62
              },
              {
                "Name": "ConsumableManager",
                "Type": "ConsumableSpawnManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 67
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "GameManager.NetManager.Start()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetString",
                    "FullName": "UnityEngine.PlayerPrefs.SetString(string, string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"SCORES\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 75
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 76
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "scm",
                      "Type": "GameManager.SceneChangeManager",
                      "Assignment": "GetComponent<SceneChangeManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 75,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<SceneChangeManager>()",
                      "Type": "GameManager.SceneChangeManager",
                      "Kind": "Use",
                      "UseLine": 75,
                      "UseKind": "Invalid",
                      "AssignedTo": "scm",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 73
              },
              {
                "Name": "ChooseMap",
                "FullName": "GameManager.NetManager.ChooseMap()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "string",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 80
              },
              {
                "Name": "StartAsHost",
                "FullName": "GameManager.NetManager.StartAsHost()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "StartGame",
                    "FullName": "GameManager.NetManager.StartGame()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 104,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 89
                  },
                  {
                    "Name": "RegisterServerHandlers",
                    "FullName": "GameManager.NetManager.RegisterServerHandlers()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 90
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isHost",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 87,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 87,
                      "UseKind": "Literal",
                      "AssignedTo": "isHost",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 86
              },
              {
                "Name": "RegisterServerHandlers",
                "FullName": "GameManager.NetManager.RegisterServerHandlers()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "UAMess.MSG_HOST_SIGNAL_DEATH",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "OnSignalDeath",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 95
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 93
              },
              {
                "Name": "StartAsClient",
                "FullName": "GameManager.NetManager.StartAsClient()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "StartGame",
                    "FullName": "GameManager.NetManager.StartGame()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 104,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 101
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isHost",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 99,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 99,
                      "UseKind": "Literal",
                      "AssignedTo": "isHost",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 98
              },
              {
                "Name": "StartGame",
                "FullName": "GameManager.NetManager.StartGame()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LoadingScreen",
                    "FullName": "GameManager.SceneChangeManager.LoadingScreen(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\SceneChangeManager.cs",
                    "DefinitionLine": 34,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "ChooseMap()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 106
                  },
                  {
                    "Name": "ChooseMap",
                    "FullName": "GameManager.NetManager.ChooseMap()",
                    "ReturnType": "String",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 80,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 106
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 104
              },
              {
                "Name": "SpawnPlayer",
                "FullName": "GameManager.NetManager.SpawnPlayer()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<GameManager.PlayerSpawnScript>()",
                    "ReturnType": "PlayerSpawnScript",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 112
                  },
                  {
                    "Name": "FindGameObjectWithTag",
                    "FullName": "UnityEngine.GameObject.FindGameObjectWithTag(string)",
                    "ReturnType": "GameObject",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"PlayerSpawnManager\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 112
                  },
                  {
                    "Name": "LoadSpawnPositions",
                    "FullName": "GameManager.NetManager.LoadSpawnPositions()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 119,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 113
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 115
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 116
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "pss",
                      "Type": "GameManager.PlayerSpawnScript",
                      "Assignment": "GameObject.FindGameObjectWithTag(\"PlayerSpawnManager\").GetComponent<PlayerSpawnScript>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 111,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inGame",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 113,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "myClient",
                      "Type": "NetworkClient",
                      "Assignment": "StartHost()",
                      "Kind": "Assignment",
                      "AssignmentLine": 114,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "myClient",
                      "Type": "NetworkClient",
                      "Assignment": "StartClient()",
                      "Kind": "Assignment",
                      "AssignmentLine": 115,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GameObject.FindGameObjectWithTag(\"PlayerSpawnManager\").GetComponent<PlayerSpawnScript>()",
                      "Type": "GameManager.PlayerSpawnScript",
                      "Kind": "Use",
                      "UseLine": 111,
                      "UseKind": "Invocation",
                      "AssignedTo": "pss",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 113,
                      "UseKind": "Literal",
                      "AssignedTo": "inGame",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "StartHost()",
                      "Type": "NetworkClient",
                      "Kind": "Use",
                      "UseLine": 114,
                      "UseKind": "Invalid",
                      "AssignedTo": "myClient",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "StartClient()",
                      "Type": "NetworkClient",
                      "Kind": "Use",
                      "UseLine": 115,
                      "UseKind": "Invalid",
                      "AssignedTo": "myClient",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 109
              },
              {
                "Name": "LoadSpawnPositions",
                "FullName": "GameManager.NetManager.LoadSpawnPositions()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "spawnPoints",
                      "Type": "System.Collections.Generic.List<UnityEngine.Vector3>",
                      "Assignment": "pss.SpawnPositions",
                      "Kind": "Assignment",
                      "AssignmentLine": 120,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerSpawners",
                      "Type": "System.Collections.Generic.List<UnityEngine.GameObject>",
                      "Assignment": "pss.PlayerSpawners",
                      "Kind": "Assignment",
                      "AssignmentLine": 121,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pss.SpawnPositions",
                      "Type": "System.Collections.Generic.List<UnityEngine.Vector3>",
                      "Kind": "Use",
                      "UseLine": 120,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "spawnPoints",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pss.PlayerSpawners",
                      "Type": "System.Collections.Generic.List<UnityEngine.GameObject>",
                      "Kind": "Use",
                      "UseLine": 121,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "playerSpawners",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 119
              },
              {
                "Name": "ConsumablePickedUp",
                "FullName": "GameManager.NetManager.ConsumablePickedUp(UnityEngine.GameObject)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "consumable",
                    "Type": "GameObject",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 127
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 125
              },
              {
                "Name": "SetPvP",
                "FullName": "GameManager.NetManager.SetPvP(bool)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "flag",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetPvP",
                    "FullName": "Character.PlayerManagerScript.SetPvP(bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 221,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "flag",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 134
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.PlayerManagerScript>()",
                    "ReturnType": "PlayerManagerScript",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 134
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 132
              },
              {
                "Name": "SignalDeath",
                "FullName": "GameManager.NetManager.SignalDeath(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "conn",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "UAMess.MSG_HOST_SIGNAL_DEATH",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "msg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 141
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "msg",
                      "Type": "NetworkSignalDeathMessage",
                      "Assignment": "new NetworkSignalDeathMessage()",
                      "Kind": "Definition",
                      "DefinitionLine": 138
                    }
                  },
                  {
                    "Variable": {
                      "Name": "msg.connectionId",
                      "Type": "int",
                      "Assignment": "conn",
                      "Kind": "Assignment",
                      "AssignmentLine": 139,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "conn",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 139,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "msg.connectionId",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 137
              },
              {
                "Name": "SetNextSpawn",
                "FullName": "GameManager.NetManager.SetNextSpawn()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RandomSpawnPoint",
                    "FullName": "GameManager.NetManager.RandomSpawnPoint()",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 200,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 147
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "o.connectionId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 150
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "UAMess.MSG_NEW_SPAWN_POSITION",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "msg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 151
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 152
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "msg",
                      "Type": "NetworkPositionMessage",
                      "Assignment": "new NetworkPositionMessage()",
                      "Kind": "Definition",
                      "DefinitionLine": 145
                    }
                  },
                  {
                    "Variable": {
                      "Name": "msg.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "RandomSpawnPoint()",
                      "Kind": "Assignment",
                      "AssignmentLine": 146,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "RandomSpawnPoint()",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 146,
                      "UseKind": "Invocation",
                      "AssignedTo": "msg.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 144
              },
              {
                "Name": "SpawnPoint",
                "FullName": "GameManager.NetManager.SpawnPoint()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Vector3",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "p",
                      "Type": "Vector3",
                      "Assignment": "startPositions[currentSpawnPoint].position",
                      "Kind": "Definition",
                      "DefinitionLine": 185
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentSpawnPoint",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 187,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 187,
                      "UseKind": "Literal",
                      "AssignedTo": "currentSpawnPoint",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 184
              },
              {
                "Name": "SSpawnPoint",
                "FullName": "GameManager.NetManager.SSpawnPoint()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "GameObject",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "spanwer",
                      "Type": "GameObject",
                      "Assignment": "playerSpawners[currentSpawnPoint]",
                      "Kind": "Definition",
                      "DefinitionLine": 193
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentSpawnPoint",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 195,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 195,
                      "UseKind": "Literal",
                      "AssignedTo": "currentSpawnPoint",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 192
              },
              {
                "Name": "RandomSpawnPoint",
                "FullName": "GameManager.NetManager.RandomSpawnPoint()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Vector3",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Range",
                    "FullName": "UnityEngine.Random.Range(int, int)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "spawnPoints.Count",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 202
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 200
              },
              {
                "Name": "OnServerAddPlayer",
                "FullName": "GameManager.NetManager.OnServerAddPlayer(NetworkConnection, short, NetworkReader)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "conn",
                    "Type": "NetworkConnection",
                    "Assignment": null
                  },
                  {
                    "Name": "playerControllerId",
                    "Type": "short",
                    "Assignment": null
                  },
                  {
                    "Name": "extraMessageReader",
                    "Type": "NetworkReader",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "playerManagerPrefab",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "SpawnPoint()",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Quaternion.identity",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 207
                  },
                  {
                    "Name": "SpawnPoint",
                    "FullName": "GameManager.NetManager.SpawnPoint()",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 184,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 207
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 208
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.PlayerManagerScript>()",
                    "ReturnType": "PlayerManagerScript",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 209
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.PlayerManagerScript>()",
                    "ReturnType": "PlayerManagerScript",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 210
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.PlayerManagerScript>()",
                    "ReturnType": "PlayerManagerScript",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 211
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "conn",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "player",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 213
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "msg",
                      "Type": "NetworkHeroSelectionMessage",
                      "Assignment": "extraMessageReader.ReadMessage<NetworkHeroSelectionMessage>()",
                      "Kind": "Definition",
                      "DefinitionLine": 207
                    }
                  },
                  {
                    "Variable": {
                      "Name": "player",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "Instantiate(playerManagerPrefab, SpawnPoint(), Quaternion.identity)",
                      "Kind": "Assignment",
                      "AssignmentLine": 206,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "player.GetComponent<PlayerManagerScript>().ChosenPlayer",
                      "Type": "int",
                      "Assignment": "msg.chosenPlayer",
                      "Kind": "Assignment",
                      "AssignmentLine": 208,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "player.GetComponent<PlayerManagerScript>().ClientId",
                      "Type": "int",
                      "Assignment": "conn.connectionId",
                      "Kind": "Assignment",
                      "AssignmentLine": 209,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "player.GetComponent<PlayerManagerScript>().PlayerName",
                      "Type": "string",
                      "Assignment": "\"Player \" + conn.connectionId",
                      "Kind": "Assignment",
                      "AssignmentLine": 210,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "connectedPlayer[conn.connectionId]",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "player",
                      "Kind": "Assignment",
                      "AssignmentLine": 211,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Instantiate(playerManagerPrefab, SpawnPoint(), Quaternion.identity)",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 206,
                      "UseKind": "Invalid",
                      "AssignedTo": "player",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "msg.chosenPlayer",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 208,
                      "UseKind": "FieldReference",
                      "AssignedTo": "player.GetComponent<PlayerManagerScript>().ChosenPlayer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "conn.connectionId",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 209,
                      "UseKind": "Invalid",
                      "AssignedTo": "player.GetComponent<PlayerManagerScript>().ClientId",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "\"Player \" + conn.connectionId",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 210,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "player.GetComponent<PlayerManagerScript>().PlayerName",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "string",
                          "Kind": "Use",
                          "UseLine": 210,
                          "UseKind": "Literal",
                          "AssignedTo": "player.GetComponent<PlayerManagerScript>().PlayerName",
                          "Value": "\"Player \"",
                          "VariablesList": []
                        },
                        {
                          "Name": "conn.connectionId",
                          "Type": "?",
                          "Kind": "Use",
                          "UseLine": 210,
                          "UseKind": "Invalid",
                          "AssignedTo": "player.GetComponent<PlayerManagerScript>().PlayerName",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "player",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 211,
                      "UseKind": "FieldReference",
                      "AssignedTo": "connectedPlayer[conn.connectionId]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 205
              },
              {
                "Name": "PlayerWasKilled",
                "FullName": "GameManager.NetManager.PlayerWasKilled(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "connectionId",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "playerManagerPrefab",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "SpawnPoint()",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Quaternion.identity",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 221
                  },
                  {
                    "Name": "SpawnPoint",
                    "FullName": "GameManager.NetManager.SpawnPoint()",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 184,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 221
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 222
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.PlayerManagerScript>()",
                    "ReturnType": "PlayerManagerScript",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 222
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 223
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 224
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.PlayerManagerScript>()",
                    "ReturnType": "PlayerManagerScript",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 224
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "player",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 225
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "conn",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "newPlayer",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 227
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "conn",
                      "Type": "NetworkConnection",
                      "Assignment": "NetworkServer.connections[connectionId]",
                      "Kind": "Definition",
                      "DefinitionLine": 218
                    }
                  },
                  {
                    "Variable": {
                      "Name": "player",
                      "Type": "GameObject",
                      "Assignment": "conn.playerControllers[0].gameObject",
                      "Kind": "Definition",
                      "DefinitionLine": 219
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newPlayer",
                      "Type": "var",
                      "Assignment": "Instantiate(playerManagerPrefab, SpawnPoint(), Quaternion.identity)",
                      "Kind": "Definition",
                      "DefinitionLine": 220
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newPlayer.GetComponent<PlayerManagerScript>().ChosenPlayer",
                      "Type": "?",
                      "Assignment": "player.GetComponent<PlayerManagerScript>().ChosenPlayer",
                      "Kind": "Assignment",
                      "AssignmentLine": 221,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newPlayer.GetComponent<PlayerManagerScript>().ClientId",
                      "Type": "?",
                      "Assignment": "connectionId",
                      "Kind": "Assignment",
                      "AssignmentLine": 222,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newPlayer.GetComponent<PlayerManagerScript>().PlayerName",
                      "Type": "?",
                      "Assignment": "player.GetComponent<PlayerManagerScript>().PlayerName",
                      "Kind": "Assignment",
                      "AssignmentLine": 223,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "connectedPlayer[connectionId]",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "newPlayer",
                      "Kind": "Assignment",
                      "AssignmentLine": 225,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "player.GetComponent<PlayerManagerScript>().ChosenPlayer",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 221,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "newPlayer.GetComponent<PlayerManagerScript>().ChosenPlayer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "connectionId",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 222,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "newPlayer.GetComponent<PlayerManagerScript>().ClientId",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "player.GetComponent<PlayerManagerScript>().PlayerName",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 223,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "newPlayer.GetComponent<PlayerManagerScript>().PlayerName",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newPlayer",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 225,
                      "UseKind": "LocalReference",
                      "AssignedTo": "connectedPlayer[connectionId]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 216
              },
              {
                "Name": "OnClientConnect",
                "FullName": "GameManager.NetManager.OnClientConnect(NetworkConnection)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "conn",
                    "Type": "NetworkConnection",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetInt",
                    "FullName": "UnityEngine.PlayerPrefs.GetInt(string)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"character\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 233
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "conn",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "msg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 234
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "UAMess.MSG_NEW_SPAWN_POSITION",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "OnSetSpawnPosition",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 235
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "msg",
                      "Type": "NetworkHeroSelectionMessage",
                      "Assignment": "new NetworkHeroSelectionMessage()",
                      "Kind": "Definition",
                      "DefinitionLine": 231
                    }
                  },
                  {
                    "Variable": {
                      "Name": "msg.chosenPlayer",
                      "Type": "int",
                      "Assignment": "PlayerPrefs.GetInt(\"character\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 232,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "PlayerPrefs.GetInt(\"character\")",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 232,
                      "UseKind": "Invocation",
                      "AssignedTo": "msg.chosenPlayer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 230
              },
              {
                "Name": "OnSetSpawnPosition",
                "FullName": "GameManager.NetManager.OnSetSpawnPosition(NetworkMessage)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "netMsg",
                    "Type": "NetworkMessage",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 240
                  },
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "msg.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 242
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "msg",
                      "Type": "NetworkPositionMessage",
                      "Assignment": "netMsg.ReadMessage<NetworkPositionMessage>()",
                      "Kind": "Definition",
                      "DefinitionLine": 239
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager.TheSpawnPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "msg.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 240,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "msg.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 240,
                      "UseKind": "FieldReference",
                      "AssignedTo": "playerManager.TheSpawnPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 238
              },
              {
                "Name": "OnSignalDeath",
                "FullName": "GameManager.NetManager.OnSignalDeath(NetworkMessage)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "netMsg",
                    "Type": "NetworkMessage",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 247
                  },
                  {
                    "Name": "PlayerWasKilled",
                    "FullName": "GameManager.NetManager.PlayerWasKilled(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 216,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "msg.connectionId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 248
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "msg",
                      "Type": "NetworkSignalDeathMessage",
                      "Assignment": "netMsg.ReadMessage<NetworkSignalDeathMessage>()",
                      "Kind": "Definition",
                      "DefinitionLine": 246
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 245
              },
              {
                "Name": "OnClientDisconnect",
                "FullName": "GameManager.NetManager.OnClientDisconnect(NetworkConnection)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "conn",
                    "Type": "NetworkConnection",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "conn",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 253
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 251
              },
              {
                "Name": "OnServerDisconnect",
                "FullName": "GameManager.NetManager.OnServerDisconnect(NetworkConnection)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "conn",
                    "Type": "NetworkConnection",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "conn",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 258
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "conn.connectionId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 259
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 256
              },
              {
                "Name": "OnClientSceneChanged",
                "FullName": "GameManager.NetManager.OnClientSceneChanged(NetworkConnection)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "conn",
                    "Type": "NetworkConnection",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 262
              }
            ],
            "Fields": [
              {
                "Name": "scm",
                "Type": "SceneChangeManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "inGame",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "consumableSpawnManager",
                "Type": "ConsumableSpawnManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "csm",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "chosenPlayer",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "player",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "isHost",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "connectedPlayer",
                "Type": "Dictionary<int, GameObject>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<int, GameObject>()",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "players",
                "Type": "CustomizedPlayer[]",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "playerManagerPrefab",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "currentSpawnPoint",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "myClient",
                "Type": "NetworkClient",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "playerManager",
                "Type": "PlayerManagerScript",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "spawnPoints",
                "Type": "List<Vector3>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "playerSpawners",
                "Type": "List<GameObject>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "pss",
                "Type": "PlayerSpawnScript",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "clientCounter",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "playerModel",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 159
              },
              {
                "Name": "connectionId",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 164
              },
              {
                "Name": "position",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 169
              },
              {
                "Name": "chosenPlayer",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 174
              },
              {
                "Name": "MSG_NEW_SPAWN_POSITION",
                "Type": "short",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "Assignment": "1000",
                "Attributes": [],
                "Line": 179
              },
              {
                "Name": "MSG_PVP",
                "Type": "short",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "Assignment": "1005",
                "Attributes": [],
                "Line": 180
              },
              {
                "Name": "MSG_HOST_SIGNAL_DEATH",
                "Type": "short",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "Assignment": "1010",
                "Attributes": [],
                "Line": 181
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 7
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 4
      },
      {
        "Name": "Character",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "ObjectWithFeatures",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ObjectWithFeatures.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ObjectWithFeatures",
            "Modifiers": [
              "public",
              "abstract"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "AddFeature",
                "FullName": "Character.ObjectWithFeatures.AddFeature(Character.Feature)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "Feature",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 10
              },
              {
                "Name": "AddFeature",
                "FullName": "Character.ObjectWithFeatures.AddFeature(string, float)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "val",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 12
              },
              {
                "Name": "GetFeature",
                "FullName": "Character.ObjectWithFeatures.GetFeature(string)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "Feature",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              }
            ],
            "Fields": [],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "System.Linq",
        "Line": 3
      },
      {
        "Name": "UnityEngine",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "OverTime",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\OverTime.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "OverTime",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "MyComponent",
                "Type": "UAComponent",
                "Modifiers": [
                  "public"
                ],
                "Line": 13
              }
            ],
            "Methods": [
              {
                "Name": "Activate",
                "FullName": "Character.OverTime.Activate()",
                "Modifiers": [
                  "public",
                  "virtual"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              }
            ],
            "Fields": [
              {
                "Name": "valuePerSecond",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "parameter",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "c",
                "Type": "UAComponent",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "PathManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PathManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PathManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Path",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 13
              }
            ],
            "Methods": [
              {
                "Name": "CorrectPath",
                "FullName": "Character.PathManager.CorrectPath()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "string",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Combine",
                    "FullName": "System.IO.Path.Combine(string, string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "Application.streamingAssetsPath",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 20
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              }
            ],
            "Fields": [
              {
                "Name": "path",
                "Type": "string",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 7
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "System",
        "Line": 4
      },
      {
        "Name": "System.IO",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlayerLifeManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PlayerLifeManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "IsDead",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 80
              },
              {
                "Name": "MaxHealth",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 86
              },
              {
                "Name": "Health",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 91
              },
              {
                "Name": "Armor",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 97
              }
            ],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.PlayerLifeManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Combine",
                    "FullName": "System.IO.Path.Combine(string, string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "Application.streamingAssetsPath",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "LIFEFEATUREPATH",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 49
                  },
                  {
                    "Name": "Combine",
                    "FullName": "System.IO.Path.Combine(string, string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "Application.streamingAssetsPath",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "TICKSPATH",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 50
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 51
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 54
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 55
                  },
                  {
                    "Name": "LoadParameters",
                    "FullName": "Character.PlayerLifeManager.LoadParameters<string, float>(string, System.Collections.Generic.Dictionary<string, float>)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 303,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "LIFEFEATUREPATH",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "lifeFeatures",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "LoadParameters",
                    "FullName": "Character.PlayerLifeManager.LoadParameters<string, string>(string, System.Collections.Generic.Dictionary<string, string>)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 303,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "TICKSPATH",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "tickables",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 57
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "LIFEFEATUREPATH",
                      "Type": "string",
                      "Assignment": "Path.Combine(Application.streamingAssetsPath, LIFEFEATUREPATH)",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "TICKSPATH",
                      "Type": "string",
                      "Assignment": "Path.Combine(Application.streamingAssetsPath, TICKSPATH)",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager",
                      "Type": "Character.PlayerManagerScript",
                      "Assignment": "GetComponent<PlayerManagerScript>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "featureManager",
                      "Type": "Character.FeatureManager",
                      "Assignment": "playerManager.PlayerFeatures",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "componentManager",
                      "Type": "Character.ComponentManager",
                      "Assignment": "playerManager.ComponentManager",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "characterStatus",
                      "Type": "Character.CharacterStatus",
                      "Assignment": "GetComponent<CharacterStatus>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "effectManager",
                      "Type": "EffectManager",
                      "Assignment": "GetComponent<EffectManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 54,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Path.Combine(Application.streamingAssetsPath, LIFEFEATUREPATH)",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Invocation",
                      "AssignedTo": "LIFEFEATUREPATH",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Path.Combine(Application.streamingAssetsPath, TICKSPATH)",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "Invocation",
                      "AssignedTo": "TICKSPATH",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<PlayerManagerScript>()",
                      "Type": "Character.PlayerManagerScript",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "Invalid",
                      "AssignedTo": "playerManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager.PlayerFeatures",
                      "Type": "Character.FeatureManager",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "featureManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager.ComponentManager",
                      "Type": "Character.ComponentManager",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "componentManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CharacterStatus>()",
                      "Type": "Character.CharacterStatus",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "Invalid",
                      "AssignedTo": "characterStatus",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<EffectManager>()",
                      "Type": "EffectManager",
                      "Kind": "Use",
                      "UseLine": 54,
                      "UseKind": "Invalid",
                      "AssignedTo": "effectManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 47
              },
              {
                "Name": "Start",
                "FullName": "Character.PlayerLifeManager.Start()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CmdAlive",
                    "FullName": "Character.PlayerLifeManager.CmdAlive()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 274,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 64
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "inGameUI",
                      "Type": "Character.InGameUIManager",
                      "Assignment": "playerManager.InGameUI",
                      "Kind": "Assignment",
                      "AssignmentLine": 61,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "scoreTableManager",
                      "Type": "Character.ScoreTableManager",
                      "Assignment": "playerManager.ScoreTable",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lastPlayerHitting",
                      "Type": "int",
                      "Assignment": "playerManager.ClientId",
                      "Kind": "Assignment",
                      "AssignmentLine": 64,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager.InGameUI",
                      "Type": "Character.InGameUIManager",
                      "Kind": "Use",
                      "UseLine": 61,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "inGameUI",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager.ScoreTable",
                      "Type": "Character.ScoreTableManager",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "scoreTableManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager.ClientId",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 64,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "lastPlayerHitting",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 60
              },
              {
                "Name": "LoadFeatures",
                "FullName": "Character.PlayerLifeManager.LoadFeatures()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.FeatureManager.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 78,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "HEALTH",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 70
                  },
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.FeatureManager.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 78,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "ARMOR",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 71
                  },
                  {
                    "Name": "CmdHealth",
                    "FullName": "Character.PlayerLifeManager.CmdHealth(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 256,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "initialHealth",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 72
                  },
                  {
                    "Name": "CmdAddArmor",
                    "FullName": "Character.PlayerLifeManager.CmdAddArmor(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 262,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "initialArmor",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 73
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "initialHealth",
                      "Type": "int",
                      "Assignment": "(int)featureManager.FeatureValue(HEALTH)",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "initialArmor",
                      "Type": "int",
                      "Assignment": "(int)featureManager.FeatureValue(ARMOR)",
                      "Kind": "Assignment",
                      "AssignmentLine": 70,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isDead",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 73,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "characterStatus.IsAlive",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 74,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "loading",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 75,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "experience",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 76,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(int)featureManager.FeatureValue(HEALTH)",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": "Conversion",
                      "AssignedTo": "initialHealth",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(int)featureManager.FeatureValue(ARMOR)",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 70,
                      "UseKind": "Conversion",
                      "AssignedTo": "initialArmor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 73,
                      "UseKind": "Literal",
                      "AssignedTo": "isDead",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 74,
                      "UseKind": "Literal",
                      "AssignedTo": "characterStatus.IsAlive",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 75,
                      "UseKind": "Literal",
                      "AssignedTo": "loading",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 76,
                      "UseKind": "Literal",
                      "AssignedTo": "experience",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 68
              },
              {
                "Name": "TakeDamage",
                "FullName": "Character.PlayerLifeManager.TakeDamage(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "dmg",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ReduceArmor",
                    "FullName": "Character.PlayerLifeManager.ReduceArmor(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 279,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "dmg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 105
                  },
                  {
                    "Name": "ComputateHealthReduction",
                    "FullName": "Character.PlayerLifeManager.ComputateHealthReduction(float)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 296,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "dmg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 106
                  },
                  {
                    "Name": "CeilToInt",
                    "FullName": "UnityEngine.Mathf.CeilToInt(float)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "damage",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 107
                  },
                  {
                    "Name": "UpdateDamage",
                    "FullName": "Character.ScoreTableManager.UpdateDamage(int, int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
                    "DefinitionLine": 74,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "lastPlayerHitting",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "finalDamage",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 108
                  },
                  {
                    "Name": "CmdTakeDamage",
                    "FullName": "Character.PlayerLifeManager.CmdTakeDamage(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 244,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "finalDamage",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 109
                  },
                  {
                    "Name": "DoFeedback",
                    "FullName": "Character.InGameUIManager.DoFeedback(UnityEngine.Color)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\InGameUIManager.cs",
                    "DefinitionLine": 72,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "damageReceivedColorFeedback",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 110
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "damage",
                      "Type": "float",
                      "Assignment": "ComputateHealthReduction(dmg)",
                      "Kind": "Definition",
                      "DefinitionLine": 105
                    }
                  },
                  {
                    "Variable": {
                      "Name": "finalDamage",
                      "Type": "int",
                      "Assignment": "Mathf.CeilToInt(damage)",
                      "Kind": "Definition",
                      "DefinitionLine": 106
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 102
              },
              {
                "Name": "HealMe",
                "FullName": "Character.PlayerLifeManager.HealMe(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "amount",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "CmdHeal",
                    "FullName": "Character.PlayerLifeManager.CmdHeal(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 250,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "amount",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 115
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "health",
                      "Type": "int",
                      "Assignment": "maxHealth",
                      "Kind": "Assignment",
                      "AssignmentLine": 115,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "maxHealth",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 115,
                      "UseKind": "FieldReference",
                      "AssignedTo": "health",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 112
              },
              {
                "Name": "AddExp",
                "FullName": "Character.PlayerLifeManager.AddExp(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "amount",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "experience",
                      "Type": "int",
                      "Assignment": "amount",
                      "Kind": "Assignment",
                      "AssignmentLine": 120,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "amount",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 120,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "experience",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 118
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.PlayerLifeManager.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.PlayerManagerScript.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 272,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "HEALTH",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  },
                  {
                    "Name": "LoadFeatures",
                    "FullName": "Character.PlayerLifeManager.LoadFeatures()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 68,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 131
                  },
                  {
                    "Name": "ComputeFeature",
                    "FullName": "Character.PlayerLifeManager.ComputeFeature()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 188,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 133
                  },
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.PlayerManagerScript.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 272,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "ARMOR",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 134
                  },
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.PlayerManagerScript.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 272,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "HEALTH",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 135
                  },
                  {
                    "Name": "DoAllTicks",
                    "FullName": "Character.PlayerLifeManager.DoAllTicks()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 149,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 136
                  },
                  {
                    "Name": "CheckEffects",
                    "FullName": "Character.PlayerLifeManager.CheckEffects()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 167,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 137
                  },
                  {
                    "Name": "CmdDeath",
                    "FullName": "Character.PlayerLifeManager.CmdDeath()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 268,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 142
                  },
                  {
                    "Name": "UpdateKill",
                    "FullName": "Character.ScoreTableManager.UpdateKill(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
                    "DefinitionLine": 83,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "lastPlayerHitting",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 144
                  },
                  {
                    "Name": "CheckIsOutOfBorder",
                    "FullName": "Character.PlayerLifeManager.CheckIsOutOfBorder()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 232,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 146
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "health",
                      "Type": "int",
                      "Assignment": "(int)playerManager.FeatureValue(HEALTH)",
                      "Kind": "Assignment",
                      "AssignmentLine": 129,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "armor",
                      "Type": "int",
                      "Assignment": "(int)playerManager.FeatureValue(ARMOR)",
                      "Kind": "Assignment",
                      "AssignmentLine": 133,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "maxHealth",
                      "Type": "int",
                      "Assignment": "(int)playerManager.FeatureValue(HEALTH)",
                      "Kind": "Assignment",
                      "AssignmentLine": 134,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "health",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 139,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isDead",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 140,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "characterStatus.IsAlive",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 142,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(int)playerManager.FeatureValue(HEALTH)",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 129,
                      "UseKind": "Conversion",
                      "AssignedTo": "health",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(int)playerManager.FeatureValue(ARMOR)",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 133,
                      "UseKind": "Conversion",
                      "AssignedTo": "armor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(int)playerManager.FeatureValue(HEALTH)",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 134,
                      "UseKind": "Conversion",
                      "AssignedTo": "maxHealth",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 139,
                      "UseKind": "Literal",
                      "AssignedTo": "health",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 140,
                      "UseKind": "Literal",
                      "AssignedTo": "isDead",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 142,
                      "UseKind": "Literal",
                      "AssignedTo": "characterStatus.IsAlive",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 124
              },
              {
                "Name": "DoAllTicks",
                "FullName": "Character.PlayerLifeManager.DoAllTicks()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "ComputeByComponent",
                    "FullName": "Character.PlayerLifeManager.ComputeByComponent(string, string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 197,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "t.Key",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "t.Value",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 153
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 149
              },
              {
                "Name": "ForeignDamage",
                "FullName": "Character.PlayerLifeManager.ForeignDamage(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "dmg",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "FromJson",
                    "FullName": "UnityEngine.JsonUtility.FromJson<Character.ShootingScript.DamageDone>(string)",
                    "ReturnType": "DamageDone",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.JSONSerializeModule.dll",
                    "Arguments": [
                      {
                        "Argument": "dmg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 159
                  },
                  {
                    "Name": "Effects",
                    "FullName": "EffectManager.Effects(System.Collections.Generic.List<string>)",
                    "ReturnType": "List",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\EffectManager.cs",
                    "DefinitionLine": 18,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "damage.Effects",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 160
                  },
                  {
                    "Name": "TakeDamage",
                    "FullName": "Character.PlayerLifeManager.TakeDamage(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 102,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Mathf.CeilToInt(ComputeFeatureValue(damageList))",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 163
                  },
                  {
                    "Name": "CeilToInt",
                    "FullName": "UnityEngine.Mathf.CeilToInt(float)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "ComputeFeatureValue(damageList)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 163
                  },
                  {
                    "Name": "ComputeFeatureValue",
                    "FullName": "Character.PlayerLifeManager.ComputeFeatureValue(System.Collections.Generic.Dictionary<string, float>)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 211,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "damageList",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 163
                  },
                  {
                    "Name": "ToJson",
                    "FullName": "UnityEngine.JsonUtility.ToJson(object)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.JSONSerializeModule.dll",
                    "Arguments": [
                      {
                        "Argument": "effList",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 164
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "damage",
                      "Type": "ShootingScript.DamageDone",
                      "Assignment": "JsonUtility.FromJson<ShootingScript.DamageDone>(dmg)",
                      "Kind": "Definition",
                      "DefinitionLine": 158
                    }
                  },
                  {
                    "Variable": {
                      "Name": "effList",
                      "Type": "ShootingScript.EffectList",
                      "Assignment": "new ShootingScript.EffectList(effectManager.Effects(damage.Effects))",
                      "Kind": "Definition",
                      "DefinitionLine": 159
                    }
                  },
                  {
                    "Variable": {
                      "Name": "damageList",
                      "Type": "Dictionary<string, float>",
                      "Assignment": "damage.DamageList",
                      "Kind": "Definition",
                      "DefinitionLine": 160
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lastPlayerHitting",
                      "Type": "int",
                      "Assignment": "damage.playerid",
                      "Kind": "Assignment",
                      "AssignmentLine": 161,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "effectJSON",
                      "Type": "string",
                      "Assignment": "JsonUtility.ToJson(effList)",
                      "Kind": "Assignment",
                      "AssignmentLine": 163,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "damage.playerid",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 161,
                      "UseKind": "FieldReference",
                      "AssignedTo": "lastPlayerHitting",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "JsonUtility.ToJson(effList)",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 163,
                      "UseKind": "Invocation",
                      "AssignedTo": "effectJSON",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 157
              },
              {
                "Name": "CheckEffects",
                "FullName": "Character.PlayerLifeManager.CheckEffects()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "IsNullOrEmpty",
                    "FullName": "string.IsNullOrEmpty(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "effectJSON",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 169
                  },
                  {
                    "Name": "FromJson",
                    "FullName": "UnityEngine.JsonUtility.FromJson<Character.ShootingScript.EffectList>(string)",
                    "ReturnType": "EffectList",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.JSONSerializeModule.dll",
                    "Arguments": [
                      {
                        "Argument": "effectJSON",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 170
                  },
                  {
                    "Name": "ApplyAruas",
                    "FullName": "Character.PlayerLifeManager.ApplyAruas(System.Collections.Generic.List<string>)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 179,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "eff",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 171
                  },
                  {
                    "Name": "CmdClearEffect",
                    "FullName": "Character.PlayerLifeManager.CmdClearEffect()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 238,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 175
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "eff",
                      "Type": "List<string>",
                      "Assignment": "JsonUtility.FromJson<ShootingScript.EffectList>(effectJSON).Effects",
                      "Kind": "Definition",
                      "DefinitionLine": 169
                    }
                  },
                  {
                    "Variable": {
                      "Name": "effectJSON",
                      "Type": "string",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 173,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 173,
                      "UseKind": "Literal",
                      "AssignedTo": "effectJSON",
                      "Value": "null",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 167
              },
              {
                "Name": "ApplyAruas",
                "FullName": "Character.PlayerLifeManager.ApplyAruas(System.Collections.Generic.List<string>)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "effects",
                    "Type": "List<string>",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ComponentPickup",
                    "FullName": "Character.ComponentManager.ComponentPickup(string, string, string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 238,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Powerup\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "e",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 184
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "path",
                      "Type": "string",
                      "Assignment": "buffBasePath + e + ext",
                      "Kind": "Definition",
                      "DefinitionLine": 182
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 179
              },
              {
                "Name": "ComputeFeature",
                "FullName": "Character.PlayerLifeManager.ComputeFeature()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 192
                  },
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.ComponentManager.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 257,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "s",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 193
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 189
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s",
                      "Type": "string",
                      "Assignment": "lifeFeatures.Keys.ElementAt(i)",
                      "Kind": "Definition",
                      "DefinitionLine": 191
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lifeFeatures[s]",
                      "Type": "float",
                      "Assignment": "componentManager.FeatureValue(s)",
                      "Kind": "Assignment",
                      "AssignmentLine": 192,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "componentManager.FeatureValue(s)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 192,
                      "UseKind": "Invocation",
                      "AssignedTo": "lifeFeatures[s]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 188
              },
              {
                "Name": "ComputeByComponent",
                "FullName": "Character.PlayerLifeManager.ComputeByComponent(string, string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "type",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "func",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetAllTicks",
                    "FullName": "Character.PlayerManagerScript.GetAllTicks(string)",
                    "ReturnType": "Dictionary",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 282,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "type",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 199
                  },
                  {
                    "Name": "ComputeFeatureValue",
                    "FullName": "Character.PlayerLifeManager.ComputeFeatureValue(System.Collections.Generic.Dictionary<string, float>)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 211,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "filtered",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 200
                  },
                  {
                    "Name": "CeilToInt",
                    "FullName": "UnityEngine.Mathf.CeilToInt(float)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "amount",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 201
                  },
                  {
                    "Name": "GetType",
                    "FullName": "object.GetType()",
                    "ReturnType": "Type",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 205
                  },
                  {
                    "Name": "GetMethod",
                    "FullName": "System.Type.GetMethod(string)",
                    "ReturnType": "MethodInfo",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "func",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 206
                  },
                  {
                    "Name": "Invoke",
                    "FullName": "System.Reflection.MethodBase.Invoke(object, object[])",
                    "ReturnType": "Object",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "this",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "p",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 207
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "filtered",
                      "Type": "Dictionary<string, float>",
                      "Assignment": "playerManager.GetAllTicks(type)",
                      "Kind": "Definition",
                      "DefinitionLine": 198
                    }
                  },
                  {
                    "Variable": {
                      "Name": "amount",
                      "Type": "float",
                      "Assignment": "ComputeFeatureValue(filtered)",
                      "Kind": "Definition",
                      "DefinitionLine": 199
                    }
                  },
                  {
                    "Variable": {
                      "Name": "famount",
                      "Type": "int",
                      "Assignment": "Mathf.CeilToInt(amount)",
                      "Kind": "Definition",
                      "DefinitionLine": 200
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p",
                      "Type": "object[]",
                      "Assignment": "{ famount }",
                      "Kind": "Definition",
                      "DefinitionLine": 203
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thisType",
                      "Type": "Type",
                      "Assignment": "this.GetType()",
                      "Kind": "Definition",
                      "DefinitionLine": 204
                    }
                  },
                  {
                    "Variable": {
                      "Name": "theMethod",
                      "Type": "MethodInfo",
                      "Assignment": "thisType.GetMethod(func)",
                      "Kind": "Definition",
                      "DefinitionLine": 205
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 197
              },
              {
                "Name": "ComputeFeatureValue",
                "FullName": "Character.PlayerLifeManager.ComputeFeatureValue(System.Collections.Generic.Dictionary<string, float>)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "received",
                    "Type": "Dictionary<string, float>",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "res",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 212
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reduction",
                      "Type": "float",
                      "Assignment": "lifeFeatures[s]",
                      "Kind": "Definition",
                      "DefinitionLine": 217
                    }
                  },
                  {
                    "Variable": {
                      "Name": "res",
                      "Type": "float",
                      "Assignment": "received[s] * reduction",
                      "Kind": "Assignment",
                      "AssignmentLine": 218,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "received[s] * reduction",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 218,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "res",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "received[s]",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 218,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "res",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "reduction",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 218,
                          "UseKind": "LocalReference",
                          "AssignedTo": "res",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 211
              },
              {
                "Name": "SignalAlive",
                "FullName": "Character.PlayerLifeManager.SignalAlive()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CmdAlive",
                    "FullName": "Character.PlayerLifeManager.CmdAlive()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 274,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 228
                  },
                  {
                    "Name": "CmdHealth",
                    "FullName": "Character.PlayerLifeManager.CmdHealth(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 256,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "100",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 229
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 226
              },
              {
                "Name": "CheckIsOutOfBorder",
                "FullName": "Character.PlayerLifeManager.CheckIsOutOfBorder()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "health",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 233,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 233,
                      "UseKind": "Literal",
                      "AssignedTo": "health",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 232
              },
              {
                "Name": "CmdClearEffect",
                "FullName": "Character.PlayerLifeManager.CmdClearEffect()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "effectJSON",
                      "Type": "string",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 239,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 239,
                      "UseKind": "Literal",
                      "AssignedTo": "effectJSON",
                      "Value": "null",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 237
              },
              {
                "Name": "CmdTakeDamage",
                "FullName": "Character.PlayerLifeManager.CmdTakeDamage(int)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "amount",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "health",
                      "Type": "int",
                      "Assignment": "amount",
                      "Kind": "Assignment",
                      "AssignmentLine": 245,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "amount",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 245,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "health",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 243
              },
              {
                "Name": "CmdHeal",
                "FullName": "Character.PlayerLifeManager.CmdHeal(int)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "amount",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "health",
                      "Type": "int",
                      "Assignment": "amount",
                      "Kind": "Assignment",
                      "AssignmentLine": 251,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "amount",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 251,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "health",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 249
              },
              {
                "Name": "CmdHealth",
                "FullName": "Character.PlayerLifeManager.CmdHealth(int)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "amount",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "health",
                      "Type": "int",
                      "Assignment": "amount",
                      "Kind": "Assignment",
                      "AssignmentLine": 257,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "amount",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 257,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "health",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 255
              },
              {
                "Name": "CmdAddArmor",
                "FullName": "Character.PlayerLifeManager.CmdAddArmor(int)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "amount",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "armor",
                      "Type": "int",
                      "Assignment": "amount",
                      "Kind": "Assignment",
                      "AssignmentLine": 263,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "amount",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 263,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "armor",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 261
              },
              {
                "Name": "CmdDeath",
                "FullName": "Character.PlayerLifeManager.CmdDeath()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isDead",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 269,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 269,
                      "UseKind": "Literal",
                      "AssignedTo": "isDead",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 267
              },
              {
                "Name": "CmdAlive",
                "FullName": "Character.PlayerLifeManager.CmdAlive()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isDead",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 275,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 275,
                      "UseKind": "Literal",
                      "AssignedTo": "isDead",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 273
              },
              {
                "Name": "ReduceArmor",
                "FullName": "Character.PlayerLifeManager.ReduceArmor(float)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "dmg",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ComponentsByFeature",
                    "FullName": "Character.ComponentManager.ComponentsByFeature(string)",
                    "ReturnType": "Dictionary",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 224,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "ARMOR",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 281
                  },
                  {
                    "Name": "ModifierNameByFeature",
                    "FullName": "Character.UAComponent.ModifierNameByFeature(string)",
                    "ReturnType": "String",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 112,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "ARMORREDUCTION",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 286
                  },
                  {
                    "Name": "ReduceComponent",
                    "FullName": "Character.UAComponent.ReduceComponent(string, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 27,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "ARMORDURABILITY",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "reduction",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 290
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "comp",
                      "Type": "Dictionary<string, UAComponent>",
                      "Assignment": "componentManager.ComponentsByFeature(ARMOR)",
                      "Kind": "Definition",
                      "DefinitionLine": 280
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reductionName",
                      "Type": "string",
                      "Assignment": "c.ModifierNameByFeature(ARMORREDUCTION)",
                      "Kind": "Definition",
                      "DefinitionLine": 285
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reduction",
                      "Type": "float",
                      "Assignment": "c.MyModifiers[reductionName].MultFactor",
                      "Kind": "Definition",
                      "DefinitionLine": 286
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reduction",
                      "Type": "float",
                      "Assignment": "dmg",
                      "Kind": "Assignment",
                      "AssignmentLine": 287,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reduction",
                      "Type": "float",
                      "Assignment": "minArmorReductionOnHit",
                      "Kind": "Assignment",
                      "AssignmentLine": 288,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dmg",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 287,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "reduction",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "minArmorReductionOnHit",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 288,
                      "UseKind": "FieldReference",
                      "AssignedTo": "reduction",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 279
              },
              {
                "Name": "ComputateHealthReduction",
                "FullName": "Character.PlayerLifeManager.ComputateHealthReduction(float)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "dmg",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.FeatureManager.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 78,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "DAMAGEREDUCTION",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 298
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "reduction",
                      "Type": "float",
                      "Assignment": "playerManager.PlayerFeatures.FeatureValue(DAMAGEREDUCTION)",
                      "Kind": "Definition",
                      "DefinitionLine": 297
                    }
                  },
                  {
                    "Variable": {
                      "Name": "healthReduction",
                      "Type": "float",
                      "Assignment": "dmg * reduction",
                      "Kind": "Definition",
                      "DefinitionLine": 298
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 296
              },
              {
                "Name": "LoadParameters",
                "FullName": "Character.PlayerLifeManager.LoadParameters<T1, T2>(string, System.Collections.Generic.Dictionary<T1, T2>)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "paramDict",
                    "Type": "Dictionary<T1, T2>",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ReadAllLines",
                    "FullName": "System.IO.File.ReadAllLines(string)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 305
                  },
                  {
                    "Name": "Split",
                    "FullName": "string.Split(params char[])",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "','",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 308
                  },
                  {
                    "Name": "Trim",
                    "FullName": "string.Trim()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 309
                  },
                  {
                    "Name": "Trim",
                    "FullName": "string.Trim()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 310
                  },
                  {
                    "Name": "ParseFloatValue",
                    "FullName": "Character.PlayerLifeManager.ParseFloatValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 316,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "items[1]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 311
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<T1, T2>.Add(T1, T2)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "(T1)param1",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "(T2)param2",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 312
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "lines",
                      "Type": "string[]",
                      "Assignment": "File.ReadAllLines(path)",
                      "Kind": "Definition",
                      "DefinitionLine": 304
                    }
                  },
                  {
                    "Variable": {
                      "Name": "items",
                      "Type": "string[]",
                      "Assignment": "l.Split(',')",
                      "Kind": "Definition",
                      "DefinitionLine": 307
                    }
                  },
                  {
                    "Variable": {
                      "Name": "param1",
                      "Type": "object",
                      "Assignment": "items[0].Trim()",
                      "Kind": "Definition",
                      "DefinitionLine": 308
                    }
                  },
                  {
                    "Variable": {
                      "Name": "param2",
                      "Type": "object",
                      "Assignment": "items[1].Trim()",
                      "Kind": "Definition",
                      "DefinitionLine": 309
                    }
                  },
                  {
                    "Variable": {
                      "Name": "param2",
                      "Type": "object",
                      "Assignment": "ParseFloatValue(items[1])",
                      "Kind": "Assignment",
                      "AssignmentLine": 310,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ParseFloatValue(items[1])",
                      "Type": "object",
                      "Kind": "Use",
                      "UseLine": 310,
                      "UseKind": "Invocation",
                      "AssignedTo": "param2",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 303
              },
              {
                "Name": "ParseFloatValue",
                "FullName": "Character.PlayerLifeManager.ParseFloatValue(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "val",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Parse",
                    "FullName": "float.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "val",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "System.Globalization.NumberStyles.Any",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "System.Globalization.CultureInfo.InvariantCulture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 318
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 316
              }
            ],
            "Fields": [
              {
                "Name": "maxHealth",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "100",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "maxArmor",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "500",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "damageReceivedColorFeedback",
                "Type": "Color",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "minArmorReductionOnHit",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "ARMORREDUCTION",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"ARMOR_REDUCTION_ON_HIT\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "ARMORDURABILITY",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"DURABILITY\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "ARMOR",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"ARMOR\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 21
              },
              {
                "Name": "HEALTH",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"HEALTH\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 22
              },
              {
                "Name": "DAMAGEREDUCTION",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"DAMAGE_RECEIVED\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 23
              },
              {
                "Name": "LIFEFEATUREPATH",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 24
              },
              {
                "Name": "TICKSPATH",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 25
              },
              {
                "Name": "buffBasePath",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"Buff/\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 26
              },
              {
                "Name": "ext",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\".csv\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 27
              },
              {
                "Name": "initialArmor",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "initialHealth",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 29
              },
              {
                "Name": "characterStatus",
                "Type": "CharacterStatus",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 30
              },
              {
                "Name": "inGameUI",
                "Type": "InGameUIManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 31
              },
              {
                "Name": "scoreTableManager",
                "Type": "ScoreTableManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 32
              },
              {
                "Name": "playerManager",
                "Type": "PlayerManagerScript",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 33
              },
              {
                "Name": "componentManager",
                "Type": "ComponentManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 34
              },
              {
                "Name": "featureManager",
                "Type": "FeatureManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 35
              },
              {
                "Name": "lifeFeatures",
                "Type": "Dictionary<string, float>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, float>()",
                "Attributes": [],
                "Line": 36
              },
              {
                "Name": "tickables",
                "Type": "Dictionary<string, string>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, string>()",
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "loading",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 38
              },
              {
                "Name": "lastPlayerHitting",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 39
              },
              {
                "Name": "effectManager",
                "Type": "EffectManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 40
              },
              {
                "Name": "armor",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 41
              },
              {
                "Name": "health",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 42
              },
              {
                "Name": "isDead",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 43
              },
              {
                "Name": "experience",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 44
              },
              {
                "Name": "effectJSON",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 45
              }
            ],
            "Line": 13
          }
        ],
        "Usings": [],
        "Line": 11
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System",
        "Line": 2
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 3
      },
      {
        "Name": "UnityEngine",
        "Line": 4
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 5
      },
      {
        "Name": "System.IO",
        "Line": 6
      },
      {
        "Name": "System.Linq",
        "Line": 7
      },
      {
        "Name": "System.Reflection",
        "Line": 8
      },
      {
        "Name": "Unity.IO",
        "Line": 9
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlayerManagerScript",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PlayerManagerScript",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "ScoreTable",
                "Type": "ScoreTableManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 46
              },
              {
                "Name": "PlayerFeatures",
                "Type": "FeatureManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 51
              },
              {
                "Name": "ComponentManager",
                "Type": "ComponentManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 56
              },
              {
                "Name": "TheSpawnPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Line": 61
              },
              {
                "Name": "YPos",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 67
              },
              {
                "Name": "ChosenPlayer",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 71
              },
              {
                "Name": "ClientId",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 76
              },
              {
                "Name": "NetMan",
                "Type": "NetManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 81
              },
              {
                "Name": "SpawnedChar",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Line": 86
              },
              {
                "Name": "InGameUI",
                "Type": "InGameUIManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 92
              },
              {
                "Name": "PlayerName",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 97
              },
              {
                "Name": "AnimatorManager",
                "Type": "AnimatorManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 261
              }
            ],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.PlayerManagerScript.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 105
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 106
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 107
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 108
                  },
                  {
                    "Name": "FindGameObjectWithTag",
                    "FullName": "UnityEngine.GameObject.FindGameObjectWithTag(string)",
                    "ReturnType": "GameObject",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"NetworkManager\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 109
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 110
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.AnimatorManager>()",
                    "ReturnType": "AnimatorManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 111
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<GameManager.NetManager>()",
                    "ReturnType": "NetManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 112
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 113
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 114
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 115
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.InGameUIManager>()",
                    "ReturnType": "InGameUIManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 116
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.ScoreTableManager>()",
                    "ReturnType": "ScoreTableManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 117
                  },
                  {
                    "Name": "ConvertAll",
                    "FullName": "System.Collections.Generic.List<string>.ConvertAll<string>(System.Converter<string, string>)",
                    "ReturnType": "List",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "s => s.ToUpper()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 118
                  },
                  {
                    "Name": "ToUpper",
                    "FullName": "string.ToUpper()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 118
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "featureManager",
                      "Type": "Character.FeatureManager",
                      "Assignment": "GetComponent<FeatureManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 104,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "componentManager",
                      "Type": "Character.ComponentManager",
                      "Assignment": "GetComponent<ComponentManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 105,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "countDownManager",
                      "Type": "Character.CountDownManager",
                      "Assignment": "GetComponent<CountDownManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 106,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "tickManager",
                      "Type": "Character.TickManager",
                      "Assignment": "GetComponent<TickManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 107,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "networkManagerObj",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "GameObject.FindGameObjectWithTag(\"NetworkManager\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 108,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weaponManager",
                      "Type": "Weapon.WeaponManager",
                      "Assignment": "GetComponent<WeaponManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 109,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animatorManager",
                      "Type": "Character.AnimatorManager",
                      "Assignment": "animatorManagerObj.GetComponent<AnimatorManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 110,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "netManager",
                      "Type": "GameManager.NetManager",
                      "Assignment": "networkManagerObj.GetComponent<NetManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 111,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lifeManager",
                      "Type": "Character.PlayerLifeManager",
                      "Assignment": "GetComponent<PlayerLifeManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 112,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "characterStatus",
                      "Type": "Character.CharacterStatus",
                      "Assignment": "GetComponent<CharacterStatus>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 113,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mp",
                      "Type": "Character.MovePlayer",
                      "Assignment": "GetComponent<MovePlayer>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 114,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inGameUI",
                      "Type": "Character.InGameUIManager",
                      "Assignment": "inGameUIObj.GetComponent<InGameUIManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 115,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "scoreTableManager",
                      "Type": "Character.ScoreTableManager",
                      "Assignment": "scoreTableObj.GetComponent<ScoreTableManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 116,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "collidersTags",
                      "Type": "System.Collections.Generic.List<string>",
                      "Assignment": "collidersTags.ConvertAll(s => s.ToUpper())",
                      "Kind": "Assignment",
                      "AssignmentLine": 117,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<FeatureManager>()",
                      "Type": "Character.FeatureManager",
                      "Kind": "Use",
                      "UseLine": 104,
                      "UseKind": "Invalid",
                      "AssignedTo": "featureManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<ComponentManager>()",
                      "Type": "Character.ComponentManager",
                      "Kind": "Use",
                      "UseLine": 105,
                      "UseKind": "Invalid",
                      "AssignedTo": "componentManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CountDownManager>()",
                      "Type": "Character.CountDownManager",
                      "Kind": "Use",
                      "UseLine": 106,
                      "UseKind": "Invalid",
                      "AssignedTo": "countDownManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<TickManager>()",
                      "Type": "Character.TickManager",
                      "Kind": "Use",
                      "UseLine": 107,
                      "UseKind": "Invalid",
                      "AssignedTo": "tickManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GameObject.FindGameObjectWithTag(\"NetworkManager\")",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 108,
                      "UseKind": "Invocation",
                      "AssignedTo": "networkManagerObj",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<WeaponManager>()",
                      "Type": "Weapon.WeaponManager",
                      "Kind": "Use",
                      "UseLine": 109,
                      "UseKind": "Invalid",
                      "AssignedTo": "weaponManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animatorManagerObj.GetComponent<AnimatorManager>()",
                      "Type": "Character.AnimatorManager",
                      "Kind": "Use",
                      "UseLine": 110,
                      "UseKind": "Invocation",
                      "AssignedTo": "animatorManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "networkManagerObj.GetComponent<NetManager>()",
                      "Type": "GameManager.NetManager",
                      "Kind": "Use",
                      "UseLine": 111,
                      "UseKind": "Invocation",
                      "AssignedTo": "netManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<PlayerLifeManager>()",
                      "Type": "Character.PlayerLifeManager",
                      "Kind": "Use",
                      "UseLine": 112,
                      "UseKind": "Invalid",
                      "AssignedTo": "lifeManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CharacterStatus>()",
                      "Type": "Character.CharacterStatus",
                      "Kind": "Use",
                      "UseLine": 113,
                      "UseKind": "Invalid",
                      "AssignedTo": "characterStatus",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<MovePlayer>()",
                      "Type": "Character.MovePlayer",
                      "Kind": "Use",
                      "UseLine": 114,
                      "UseKind": "Invalid",
                      "AssignedTo": "mp",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inGameUIObj.GetComponent<InGameUIManager>()",
                      "Type": "Character.InGameUIManager",
                      "Kind": "Use",
                      "UseLine": 115,
                      "UseKind": "Invocation",
                      "AssignedTo": "inGameUI",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "scoreTableObj.GetComponent<ScoreTableManager>()",
                      "Type": "Character.ScoreTableManager",
                      "Kind": "Use",
                      "UseLine": 116,
                      "UseKind": "Invocation",
                      "AssignedTo": "scoreTableManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "collidersTags.ConvertAll(s => s.ToUpper())",
                      "Type": "System.Collections.Generic.List<string>",
                      "Kind": "Use",
                      "UseLine": 117,
                      "UseKind": "Invocation",
                      "AssignedTo": "collidersTags",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 103
              },
              {
                "Name": "ActivateCam",
                "FullName": "Character.PlayerManagerScript.ActivateCam()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 123
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 121
              },
              {
                "Name": "Start",
                "FullName": "Character.PlayerManagerScript.Start()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 128
                  },
                  {
                    "Name": "ActivateModel",
                    "FullName": "Character.PlayerManagerScript.ActivateModel()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 144,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 129
                  },
                  {
                    "Name": "SearchByTag",
                    "FullName": "Character.PlayerManagerScript.SearchByTag(UnityEngine.GameObject, string)",
                    "ReturnType": "GameObject",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 226,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "thisChar",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"WeaponContainer\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  },
                  {
                    "Name": "Spawn",
                    "FullName": "Weapon.WeaponManager.Spawn()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 54,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 132
                  },
                  {
                    "Name": "PlayerReset",
                    "FullName": "Character.PlayerManagerScript.PlayerReset()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 149,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 133
                  },
                  {
                    "Name": "SetAnimator",
                    "FullName": "Character.PlayerManagerScript.SetAnimator(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 235,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "weaponManager.ActiveWeaponStatus.WeaponType",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 134
                  },
                  {
                    "Name": "ActivateCam",
                    "FullName": "Character.PlayerManagerScript.ActivateCam()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 121,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 135
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "netManager.PManager",
                      "Type": "Character.PlayerManagerScript",
                      "Assignment": "GetComponent<PlayerManagerScript>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 127,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thisCharWeapon",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "SearchByTag(thisChar, \"WeaponContainer\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 129,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weaponManager.WeaponContainer",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "thisCharWeapon",
                      "Kind": "Assignment",
                      "AssignmentLine": 130,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<PlayerManagerScript>()",
                      "Type": "Character.PlayerManagerScript",
                      "Kind": "Use",
                      "UseLine": 127,
                      "UseKind": "Invalid",
                      "AssignedTo": "netManager.PManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "SearchByTag(thisChar, \"WeaponContainer\")",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 129,
                      "UseKind": "Invocation",
                      "AssignedTo": "thisCharWeapon",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thisCharWeapon",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 130,
                      "UseKind": "FieldReference",
                      "AssignedTo": "weaponManager.WeaponContainer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 126
              },
              {
                "Name": "CmdScore",
                "FullName": "Character.PlayerManagerScript.CmdScore()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetString",
                    "FullName": "UnityEngine.PlayerPrefs.GetString(string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"SCORES\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 141
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "scores",
                      "Type": "string",
                      "Assignment": "PlayerPrefs.GetString(\"SCORES\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 140,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "PlayerPrefs.GetString(\"SCORES\")",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 140,
                      "UseKind": "Invocation",
                      "AssignedTo": "scores",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 138
              },
              {
                "Name": "ActivateModel",
                "FullName": "Character.PlayerManagerScript.ActivateModel()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 146
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 144
              },
              {
                "Name": "PlayerReset",
                "FullName": "Character.PlayerManagerScript.PlayerReset()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "ResetWeapons",
                    "FullName": "Weapon.WeaponManager.ResetWeapons()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 71,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 151
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 149
              },
              {
                "Name": "StartDeathCooldown",
                "FullName": "Character.PlayerManagerScript.StartDeathCooldown()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isDeathCooldown",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 155,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "startDeathCooldown",
                      "Type": "float",
                      "Assignment": "Time.time",
                      "Kind": "Assignment",
                      "AssignmentLine": 156,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 155,
                      "UseKind": "Literal",
                      "AssignedTo": "isDeathCooldown",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.time",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 156,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "startDeathCooldown",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 154
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.PlayerManagerScript.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CmdScore",
                    "FullName": "Character.PlayerManagerScript.CmdScore()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 139,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 162
                  },
                  {
                    "Name": "UpdateAnimator",
                    "FullName": "Character.PlayerManagerScript.UpdateAnimator()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 249,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 168
                  },
                  {
                    "Name": "SetDeathAnimator",
                    "FullName": "Character.PlayerManagerScript.SetDeathAnimator()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 241,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 174
                  },
                  {
                    "Name": "StartDeathCooldown",
                    "FullName": "Character.PlayerManagerScript.StartDeathCooldown()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 154,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 175
                  },
                  {
                    "Name": "SaveState",
                    "FullName": "Character.ScoreTableManager.SaveState()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
                    "DefinitionLine": 103,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 182
                  },
                  {
                    "Name": "SignalDeath",
                    "FullName": "GameManager.NetManager.SignalDeath(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 137,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "clientId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 183
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "thisChar.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(0, yPos, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 166,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isDeathCooldown",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 183,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(0, yPos, 0)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 166,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "thisChar.transform.localPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 183,
                      "UseKind": "Literal",
                      "AssignedTo": "isDeathCooldown",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 160
              },
              {
                "Name": "TestFilter",
                "FullName": "Character.PlayerManagerScript.TestFilter()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FilterByType",
                    "FullName": "Character.ComponentManager.FilterByType<Character.Powerup>()",
                    "ReturnType": "Dictionary",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 268,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 198
                  },
                  {
                    "Name": "Log",
                    "FullName": "UnityEngine.Debug.Log(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "s",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 199
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "p",
                      "Type": "Dictionary<string, Powerup>",
                      "Assignment": "componentManager.FilterByType<Powerup>()",
                      "Kind": "Definition",
                      "DefinitionLine": 197
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 196
              },
              {
                "Name": "OnTriggerEnter",
                "FullName": "Character.PlayerManagerScript.OnTriggerEnter(UnityEngine.Collider)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "other",
                    "Type": "Collider",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ToUpper",
                    "FullName": "string.ToUpper()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 205
                  },
                  {
                    "Name": "InTagList",
                    "FullName": "Character.PlayerManagerScript.InTagList(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 216,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "tag",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 206
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.PathManager>()",
                    "ReturnType": "PathManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 208
                  },
                  {
                    "Name": "Split",
                    "FullName": "string.Split(params char[])",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "'.'",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 209
                  },
                  {
                    "Name": "GetFileName",
                    "FullName": "System.IO.Path.GetFileName(string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "n[0]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 210
                  },
                  {
                    "Name": "ComponentPickup",
                    "FullName": "Character.ComponentManager.ComponentPickup(string, string, string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 238,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "tag",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 211
                  },
                  {
                    "Name": "CollectibleFeedback",
                    "FullName": "Character.InGameUIManager.CollectibleFeedback(UnityEngine.GameObject)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\InGameUIManager.cs",
                    "DefinitionLine": 80,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "other.gameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 212
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "tag",
                      "Type": "string",
                      "Assignment": "other.gameObject.tag.ToUpper()",
                      "Kind": "Definition",
                      "DefinitionLine": 204
                    }
                  },
                  {
                    "Variable": {
                      "Name": "path",
                      "Type": "string",
                      "Assignment": "other.gameObject.GetComponent<PathManager>().Path",
                      "Kind": "Definition",
                      "DefinitionLine": 207
                    }
                  },
                  {
                    "Variable": {
                      "Name": "n",
                      "Type": "string[]",
                      "Assignment": "path.Split('.')",
                      "Kind": "Definition",
                      "DefinitionLine": 208
                    }
                  },
                  {
                    "Variable": {
                      "Name": "name",
                      "Type": "string",
                      "Assignment": "Path.GetFileName(n[0])",
                      "Kind": "Definition",
                      "DefinitionLine": 209
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 202
              },
              {
                "Name": "InTagList",
                "FullName": "Character.PlayerManagerScript.InTagList(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "s",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Contains",
                    "FullName": "System.Collections.Generic.List<string>.Contains(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "s",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 218
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 216
              },
              {
                "Name": "SetPvP",
                "FullName": "Character.PlayerManagerScript.SetPvP(bool)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "flag",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 223
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "GetComponent<ShootingScript>().Pvp",
                      "Type": "?",
                      "Assignment": "flag",
                      "Kind": "Assignment",
                      "AssignmentLine": 222,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "flag",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 222,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "GetComponent<ShootingScript>().Pvp",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 221
              },
              {
                "Name": "SearchByTag",
                "FullName": "Character.PlayerManagerScript.SearchByTag(UnityEngine.GameObject, string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "GameObject",
                "Parameters": [
                  {
                    "Name": "o",
                    "Type": "GameObject",
                    "Assignment": null
                  },
                  {
                    "Name": "tag",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetComponentsInChildren",
                    "FullName": "UnityEngine.GameObject.GetComponentsInChildren<UnityEngine.Transform>()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 228
                  },
                  {
                    "Name": "CompareTag",
                    "FullName": "UnityEngine.Component.CompareTag(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "tag",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 230
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 226
              },
              {
                "Name": "SetAnimator",
                "FullName": "Character.PlayerManagerScript.SetAnimator(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "animatorId",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 237
                  },
                  {
                    "Name": "GetCombatAnimator",
                    "FullName": "Character.AnimatorManager.GetCombatAnimator(string)",
                    "ReturnType": "RuntimeAnimatorController",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\AnimatorManager.cs",
                    "DefinitionLine": 54,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "animatorId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 237
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<UnityEngine.Animator>()",
                    "ReturnType": "Animator",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 238
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 238
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "GetComponent<Animator>().runtimeAnimatorController",
                      "Type": "?",
                      "Assignment": "animatorManager.GetCombatAnimator(animatorId)",
                      "Kind": "Assignment",
                      "AssignmentLine": 236,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thisChar.GetComponent<Animator>().runtimeAnimatorController",
                      "Type": "UnityEngine.RuntimeAnimatorController",
                      "Assignment": "GetComponent<Animator>().runtimeAnimatorController",
                      "Kind": "Assignment",
                      "AssignmentLine": 237,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animatorManager.GetCombatAnimator(animatorId)",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 236,
                      "UseKind": "Invocation",
                      "AssignedTo": "GetComponent<Animator>().runtimeAnimatorController",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Animator>().runtimeAnimatorController",
                      "Type": "UnityEngine.RuntimeAnimatorController",
                      "Kind": "Use",
                      "UseLine": 237,
                      "UseKind": "Invalid",
                      "AssignedTo": "thisChar.GetComponent<Animator>().runtimeAnimatorController",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 235
              },
              {
                "Name": "SetDeathAnimator",
                "FullName": "Character.PlayerManagerScript.SetDeathAnimator()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "40",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 244
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 245
                  },
                  {
                    "Name": "RandomDeathAnimator",
                    "FullName": "Character.AnimatorManager.RandomDeathAnimator()",
                    "ReturnType": "RuntimeAnimatorController",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\AnimatorManager.cs",
                    "DefinitionLine": 40,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 245
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<UnityEngine.Animator>()",
                    "ReturnType": "Animator",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 246
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 246
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "mainCam.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(mainCam.transform.localPosition.x, mainCam.transform.localPosition.y, -1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 242,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainCam.transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Euler(40, 0, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 243,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Animator>().runtimeAnimatorController",
                      "Type": "?",
                      "Assignment": "animatorManager.RandomDeathAnimator()",
                      "Kind": "Assignment",
                      "AssignmentLine": 244,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thisChar.GetComponent<Animator>().runtimeAnimatorController",
                      "Type": "UnityEngine.RuntimeAnimatorController",
                      "Assignment": "GetComponent<Animator>().runtimeAnimatorController",
                      "Kind": "Assignment",
                      "AssignmentLine": 245,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(mainCam.transform.localPosition.x, mainCam.transform.localPosition.y, -1)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 242,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "mainCam.transform.localPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler(40, 0, 0)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 243,
                      "UseKind": "Invocation",
                      "AssignedTo": "mainCam.transform.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animatorManager.RandomDeathAnimator()",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 244,
                      "UseKind": "Invocation",
                      "AssignedTo": "GetComponent<Animator>().runtimeAnimatorController",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Animator>().runtimeAnimatorController",
                      "Type": "UnityEngine.RuntimeAnimatorController",
                      "Kind": "Use",
                      "UseLine": 245,
                      "UseKind": "Invalid",
                      "AssignedTo": "thisChar.GetComponent<Animator>().runtimeAnimatorController",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 241
              },
              {
                "Name": "UpdateAnimator",
                "FullName": "Character.PlayerManagerScript.UpdateAnimator()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"speed\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 251
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 251
                  },
                  {
                    "Name": "SetFloat",
                    "FullName": "UnityEngine.Animator.SetFloat(string, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"speed\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "speed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 252
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<UnityEngine.Animator>()",
                    "ReturnType": "Animator",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 252
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "speed",
                      "Type": "float",
                      "Assignment": "GetComponent<Animator>().GetFloat(\"speed\")",
                      "Kind": "Definition",
                      "DefinitionLine": 250
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 249
              },
              {
                "Name": "PreStartClient",
                "FullName": "Character.PlayerManagerScript.PreStartClient()",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 257
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "characters[chosenPlayer]",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "transform.localPosition",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "gameObject.transform.rotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "transform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 258
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "thisChar",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "Instantiate(characters[chosenPlayer], transform.localPosition, gameObject.transform.rotation, transform)",
                      "Kind": "Assignment",
                      "AssignmentLine": 257,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Instantiate(characters[chosenPlayer], transform.localPosition, gameObject.transform.rotation, transform)",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 257,
                      "UseKind": "Invalid",
                      "AssignedTo": "thisChar",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 255
              },
              {
                "Name": "CmdDeathCooldown",
                "FullName": "Character.PlayerManagerScript.CmdDeathCooldown(bool)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "val",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "isDeathCooldown",
                      "Type": "bool",
                      "Assignment": "val",
                      "Kind": "Assignment",
                      "AssignmentLine": 268,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "val",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 268,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "isDeathCooldown",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 266
              },
              {
                "Name": "FeatureValue",
                "FullName": "Character.PlayerManagerScript.FeatureValue(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.FeatureManager.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 78,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 274
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 272
              },
              {
                "Name": "TickValue",
                "FullName": "Character.PlayerManagerScript.TickValue(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "TickValue",
                    "FullName": "Character.FeatureManager.TickValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 88,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 279
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 277
              },
              {
                "Name": "GetAllTicks",
                "FullName": "Character.PlayerManagerScript.GetAllTicks(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Dictionary<string, float>",
                "Parameters": [
                  {
                    "Name": "type",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetAllTicks",
                    "FullName": "Character.ComponentManager.GetAllTicks(string)",
                    "ReturnType": "Dictionary",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 247,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "type",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 284
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 282
              }
            ],
            "Fields": [
              {
                "Name": "characters",
                "Type": "List<GameObject>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "mainCam",
                "Type": "Camera",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "animatorManagerObj",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "yPos",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "-2.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "deathCooldown",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "2.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "inGameUIObj",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "scoreTableObj",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "collidersTags",
                "Type": "List<string>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 21
              },
              {
                "Name": "featureManager",
                "Type": "FeatureManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "componentManager",
                "Type": "ComponentManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "startDeathCooldown",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "networkManagerObj",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "weaponManager",
                "Type": "WeaponManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "animatorManager",
                "Type": "AnimatorManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "lifeManager",
                "Type": "PlayerLifeManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "countDownManager",
                "Type": "CountDownManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 29
              },
              {
                "Name": "tickManager",
                "Type": "TickManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 30
              },
              {
                "Name": "thisChar",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "null",
                "Attributes": [],
                "Line": 31
              },
              {
                "Name": "thisCharWeapon",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "null",
                "Attributes": [],
                "Line": 32
              },
              {
                "Name": "playerPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 33
              },
              {
                "Name": "netManager",
                "Type": "NetManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 34
              },
              {
                "Name": "characterStatus",
                "Type": "CharacterStatus",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 35
              },
              {
                "Name": "mp",
                "Type": "MovePlayer",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 36
              },
              {
                "Name": "isDeathCooldown",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "inGameUI",
                "Type": "InGameUIManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 38
              },
              {
                "Name": "scoreTableManager",
                "Type": "ScoreTableManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 39
              },
              {
                "Name": "chosenPlayer",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 40
              },
              {
                "Name": "theSpawnPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Vector3(0, 0, 0)",
                "Attributes": [],
                "Line": 41
              },
              {
                "Name": "clientId",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 42
              },
              {
                "Name": "playerName",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 43
              },
              {
                "Name": "scores",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 44
              }
            ],
            "Line": 12
          }
        ],
        "Usings": [],
        "Line": 10
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 4
      },
      {
        "Name": "Weapon",
        "Line": 5
      },
      {
        "Name": "GameManager",
        "Line": 6
      },
      {
        "Name": "System.IO",
        "Line": 7
      },
      {
        "Name": "Unity.IO",
        "Line": 8
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlayerSpawnScript",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerSpawnScript.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PlayerSpawnScript",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "SpawnPositions",
                "Type": "List<Vector3>",
                "Modifiers": [
                  "public"
                ],
                "Line": 19
              },
              {
                "Name": "PlayerSpawners",
                "Type": "List<GameObject>",
                "Modifiers": [
                  "public"
                ],
                "Line": 24
              }
            ],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "GameManager.PlayerSpawnScript.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<UnityEngine.Vector3>.Add(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "o.transform.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 17
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "spawnPositions",
                      "Type": "System.Collections.Generic.List<UnityEngine.Vector3>",
                      "Assignment": "new List<Vector3>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new List<Vector3>()",
                      "Type": "System.Collections.Generic.List<UnityEngine.Vector3>",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "spawnPositions",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              }
            ],
            "Fields": [
              {
                "Name": "spawnPointsList",
                "Type": "List<GameObject>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "spawnPositions",
                "Type": "List<Vector3>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "Powerup",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Powerup.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Powerup",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "UAComponent",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "AddToTick",
                "FullName": "Character.Powerup.AddToTick()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckFeature",
                    "FullName": "Character.UAComponent.CheckFeature(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 157,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "TICK",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 24
                  },
                  {
                    "Name": "DoTick",
                    "FullName": "Character.Tick.DoTick()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Tick.cs",
                    "DefinitionLine": 40,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 26
                  },
                  {
                    "Name": "AddTick",
                    "FullName": "Character.TickManager.AddTick(Character.Tick)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\TickManager.cs",
                    "DefinitionLine": 19,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "t",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 27
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "Tick",
                      "Assignment": "new Tick(this, TICK, (int)m_features[TICK].CurrValue)",
                      "Kind": "Definition",
                      "DefinitionLine": 24
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "AddToCountdown",
                "FullName": "Character.Powerup.AddToCountdown()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckFeature",
                    "FullName": "Character.UAComponent.CheckFeature(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 157,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "TIME",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "AddCountDown",
                    "FullName": "Character.CountDownManager.AddCountDown(Character.CountDown)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\CountDownManager.cs",
                    "DefinitionLine": 18,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "new CountDown(this, TIME, valuePerSecond)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 33
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              }
            ],
            "Fields": [
              {
                "Name": "cdmanager",
                "Type": "CountDownManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "tm",
                "Type": "TickManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "TIME",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"TIME\"",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "TICK",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"TICK\"",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "valuePerSecond",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 13
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "SceneChangeManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\SceneChangeManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SceneChangeManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "LoadProgress",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 17
              }
            ],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "GameManager.SceneChangeManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<GameManager.NetManager>()",
                    "ReturnType": "NetManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 24
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<GameManager.LoadingScreenManager>()",
                    "ReturnType": "LoadingScreenManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 25
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "netManager",
                      "Type": "GameManager.NetManager",
                      "Assignment": "GetComponent<NetManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "loadingScreenManager",
                      "Type": "GameManager.LoadingScreenManager",
                      "Assignment": "GetComponent<LoadingScreenManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<NetManager>()",
                      "Type": "GameManager.NetManager",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "Invocation",
                      "AssignedTo": "netManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<LoadingScreenManager>()",
                      "Type": "GameManager.LoadingScreenManager",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "Invocation",
                      "AssignedTo": "loadingScreenManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "OnEnable",
                "FullName": "GameManager.SceneChangeManager.OnEnable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "SceneManager.sceneLoaded",
                      "Type": "void",
                      "Assignment": "OnSceneLoaded",
                      "Kind": "Assignment",
                      "AssignmentLine": 30,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "OnSceneLoaded",
                      "Type": "void",
                      "Kind": "Use",
                      "UseLine": 30,
                      "UseKind": "MethodReference",
                      "AssignedTo": "SceneManager.sceneLoaded",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              },
              {
                "Name": "LoadingScreen",
                "FullName": "GameManager.SceneChangeManager.LoadingScreen(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "scene",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "LoadScene",
                    "FullName": "UnityEngine.SceneManagement.SceneManager.LoadScene(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"UnlimitedArena_Loading\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "sceneToLoad",
                      "Type": "string",
                      "Assignment": "scene",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "loadingScreenManager.IsLoading",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "scene",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "sceneToLoad",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "Literal",
                      "AssignedTo": "loadingScreenManager.IsLoading",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 34
              },
              {
                "Name": "ChangeScene",
                "FullName": "GameManager.SceneChangeManager.ChangeScene()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LoadSceneAsync",
                    "FullName": "UnityEngine.SceneManagement.SceneManager.LoadSceneAsync(string)",
                    "ReturnType": "AsyncOperation",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "sceneToLoad",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 43
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "loadingOperation",
                      "Type": "UnityEngine.AsyncOperation",
                      "Assignment": "SceneManager.LoadSceneAsync(sceneToLoad)",
                      "Kind": "Assignment",
                      "AssignmentLine": 42,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "loadProgress",
                      "Type": "float",
                      "Assignment": "loadingOperation.progress",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "netManager.InGame",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 44,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "SceneManager.LoadSceneAsync(sceneToLoad)",
                      "Type": "UnityEngine.AsyncOperation",
                      "Kind": "Use",
                      "UseLine": 42,
                      "UseKind": "Invocation",
                      "AssignedTo": "loadingOperation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "loadingOperation.progress",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "loadProgress",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "Literal",
                      "AssignedTo": "netManager.InGame",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 41
              },
              {
                "Name": "OnSceneLoaded",
                "FullName": "GameManager.SceneChangeManager.OnSceneLoaded(UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.LoadSceneMode)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "scene",
                    "Type": "Scene",
                    "Assignment": null
                  },
                  {
                    "Name": "mode",
                    "Type": "LoadSceneMode",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SpawnPlayer",
                    "FullName": "GameManager.NetManager.SpawnPlayer()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 110,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 51
                  },
                  {
                    "Name": "Loading",
                    "FullName": "GameManager.LoadingScreenManager.Loading()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\LoadingScreenManager.cs",
                    "DefinitionLine": 25,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 52
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 48
              }
            ],
            "Fields": [
              {
                "Name": "netManager",
                "Type": "NetManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "loadingOperation",
                "Type": "AsyncOperation",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "loadingScreenManager",
                "Type": "LoadingScreenManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "loadProgress",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0.0f",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "sceneToLoad",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.SceneManagement",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "SelectHero",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\SelectHero.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SelectHero",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "GameManager.SelectHero.Awake()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<GameManager.NetManager>()",
                    "ReturnType": "NetManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 17
                  },
                  {
                    "Name": "FindGameObjectWithTag",
                    "FullName": "UnityEngine.GameObject.FindGameObjectWithTag(string)",
                    "ReturnType": "GameObject",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"NetworkManager\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 17
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "_netManager",
                      "Type": "GameManager.NetManager",
                      "Assignment": "GameObject.FindGameObjectWithTag(\"NetworkManager\").GetComponent<NetManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 16,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GameObject.FindGameObjectWithTag(\"NetworkManager\").GetComponent<NetManager>()",
                      "Type": "GameManager.NetManager",
                      "Kind": "Use",
                      "UseLine": 16,
                      "UseKind": "Invocation",
                      "AssignedTo": "_netManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 15
              },
              {
                "Name": "Start",
                "FullName": "GameManager.SelectHero.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 23
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "currentChar",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "Literal",
                      "AssignedTo": "currentChar",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 20
              },
              {
                "Name": "right",
                "FullName": "GameManager.SelectHero.right()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 31
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "new Vector3(0, 180, 0)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 32
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "currentChar",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 29,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "characthers[currentChar].transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Euler(new Vector3(0, 180, 0))",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 29,
                      "UseKind": "Literal",
                      "AssignedTo": "currentChar",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler(new Vector3(0, 180, 0))",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "Invocation",
                      "AssignedTo": "characthers[currentChar].transform.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 26
              },
              {
                "Name": "left",
                "FullName": "GameManager.SelectHero.left()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "new Vector3(0, 180, 0)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 41
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "currentChar",
                      "Type": "int",
                      "Assignment": "characthers.Length - 1",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "characthers[currentChar].transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Euler(new Vector3(0, 180, 0))",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "characthers.Length - 1",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "currentChar",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "characthers.Length",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 38,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "currentChar",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 38,
                          "UseKind": "Literal",
                          "AssignedTo": "currentChar",
                          "Value": "1",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler(new Vector3(0, 180, 0))",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "Invocation",
                      "AssignedTo": "characthers[currentChar].transform.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 35
              },
              {
                "Name": "SelectCharHost",
                "FullName": "GameManager.SelectHero.SelectCharHost()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetInt",
                    "FullName": "UnityEngine.PlayerPrefs.SetInt(string, int)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"character\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "currentChar",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "StartAsHost",
                    "FullName": "GameManager.NetManager.StartAsHost()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 86,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 47
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 44
              },
              {
                "Name": "SelectCharClient",
                "FullName": "GameManager.SelectHero.SelectCharClient()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetInt",
                    "FullName": "UnityEngine.PlayerPrefs.SetInt(string, int)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"character\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "currentChar",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  },
                  {
                    "Name": "StartAsClient",
                    "FullName": "GameManager.NetManager.StartAsClient()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\NetManager.cs",
                    "DefinitionLine": 98,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 53
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 50
              },
              {
                "Name": "FixedUpdate",
                "FullName": "GameManager.SelectHero.FixedUpdate()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Rotate",
                    "FullName": "UnityEngine.Transform.Rotate(float, float, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rotationSpeed",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 58
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 56
              }
            ],
            "Fields": [
              {
                "Name": "rotationSpeed",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "-1.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "characthers",
                "Type": "GameObject[]",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "_netManager",
                "Type": "NetManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "currentChar",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "ShootingScript",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ShootingScript",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Pvp",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 29
              },
              {
                "Name": "DamageList",
                "Type": "Dictionary<string, float>",
                "Modifiers": [
                  "public"
                ],
                "Line": 165
              },
              {
                "Name": "Player",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 170
              },
              {
                "Name": "Effects",
                "Type": "List<string>",
                "Modifiers": [
                  "public"
                ],
                "Line": 175
              },
              {
                "Name": "Effects",
                "Type": "List<string>",
                "Modifiers": [
                  "public"
                ],
                "Line": 203
              }
            ],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.ShootingScript.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Combine",
                    "FullName": "System.IO.Path.Combine(string, string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "Application.streamingAssetsPath",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "damageWrapperDirectory",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 38
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 39
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 40
                  },
                  {
                    "Name": "LoadDamageWrapper",
                    "FullName": "Character.ShootingScript.LoadDamageWrapper()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
                    "DefinitionLine": 72,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 41
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "damageWrapperDirectory",
                      "Type": "string",
                      "Assignment": "Path.Combine(Application.streamingAssetsPath, damageWrapperDirectory)",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerManager",
                      "Type": "Character.PlayerManagerScript",
                      "Assignment": "GetComponent<PlayerManagerScript>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "status",
                      "Type": "Character.CharacterStatus",
                      "Assignment": "GetComponent<CharacterStatus>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weaponManager",
                      "Type": "Weapon.WeaponManager",
                      "Assignment": "GetComponent<WeaponManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Path.Combine(Application.streamingAssetsPath, damageWrapperDirectory)",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "Invocation",
                      "AssignedTo": "damageWrapperDirectory",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<PlayerManagerScript>()",
                      "Type": "Character.PlayerManagerScript",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "Invalid",
                      "AssignedTo": "playerManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CharacterStatus>()",
                      "Type": "Character.CharacterStatus",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "Invalid",
                      "AssignedTo": "status",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<WeaponManager>()",
                      "Type": "Weapon.WeaponManager",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Invalid",
                      "AssignedTo": "weaponManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 35
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.ShootingScript.FixedUpdate()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DoShoot",
                    "FullName": "Character.ShootingScript.DoShoot()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
                    "DefinitionLine": 51,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 48
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 45
              },
              {
                "Name": "DoShoot",
                "FullName": "Character.ShootingScript.DoShoot()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DamagePacket",
                    "FullName": "Character.ShootingScript.DamagePacket()",
                    "ReturnType": "Dictionary",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
                    "DefinitionLine": 123,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 53
                  },
                  {
                    "Name": "TriggerShoot",
                    "FullName": "Weapon.WeaponManager.TriggerShoot()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 135,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 55
                  },
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Vector3, UnityEngine.Vector3, out UnityEngine.RaycastHit, float)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "_camera.transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "_camera.transform.forward",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "RaycastHit hitInfo",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "range",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "CompareTag",
                    "FullName": "UnityEngine.GameObject.CompareTag(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Player\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "DamagePacket",
                    "FullName": "Character.ShootingScript.DamagePacket()",
                    "ReturnType": "Dictionary",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
                    "DefinitionLine": 123,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 62
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 63
                  },
                  {
                    "Name": "ToJson",
                    "FullName": "UnityEngine.JsonUtility.ToJson(object)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.JSONSerializeModule.dll",
                    "Arguments": [
                      {
                        "Argument": "dmg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "Log",
                    "FullName": "UnityEngine.Debug.Log(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "jsonString",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 65
                  },
                  {
                    "Name": "CmdShootEnemyPlayer",
                    "FullName": "Character.ShootingScript.CmdShootEnemyPlayer(UnityEngine.GameObject, string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
                    "DefinitionLine": 135,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "enemy",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "jsonString",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 66
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "ShootCooldown()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 69
                  },
                  {
                    "Name": "ShootCooldown",
                    "FullName": "Character.ShootingScript.ShootCooldown()",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
                    "DefinitionLine": 140,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 69
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "enemy",
                      "Type": "GameObject",
                      "Assignment": "hitInfo.transform.gameObject",
                      "Kind": "Definition",
                      "DefinitionLine": 57
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dmg",
                      "Type": "DamageDone",
                      "Assignment": "new DamageDone(playerManager.PlayerName, playerManager.ClientId)",
                      "Kind": "Definition",
                      "DefinitionLine": 60
                    }
                  },
                  {
                    "Variable": {
                      "Name": "jsonString",
                      "Type": "string",
                      "Assignment": "JsonUtility.ToJson(dmg)",
                      "Kind": "Definition",
                      "DefinitionLine": 63
                    }
                  },
                  {
                    "Variable": {
                      "Name": "canShoot",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dmg.DamageList",
                      "Type": "System.Collections.Generic.Dictionary<string, float>",
                      "Assignment": "DamagePacket()",
                      "Kind": "Assignment",
                      "AssignmentLine": 61,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dmg.effects",
                      "Type": "System.Collections.Generic.List<string>",
                      "Assignment": "weaponManager.MyComponentManager.Components.Keys.ToList()",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "Literal",
                      "AssignedTo": "canShoot",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "DamagePacket()",
                      "Type": "System.Collections.Generic.Dictionary<string, float>",
                      "Kind": "Use",
                      "UseLine": 61,
                      "UseKind": "Invocation",
                      "AssignedTo": "dmg.DamageList",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weaponManager.MyComponentManager.Components.Keys.ToList()",
                      "Type": "System.Collections.Generic.List<string>",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "Invalid",
                      "AssignedTo": "dmg.effects",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 51
              },
              {
                "Name": "LoadDamageWrapper",
                "FullName": "Character.ShootingScript.LoadDamageWrapper()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckDirectory",
                    "FullName": "Character.ShootingScript.CheckDirectory(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
                    "DefinitionLine": 103,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "damageWrapperDirectory",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 74
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, string>.Add(string, string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "DEFAULTDAMAGEDONE",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "DEFAULTDAMAGERESIST",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 76
                  },
                  {
                    "Name": "GetFiles",
                    "FullName": "System.IO.Directory.GetFiles(string, string)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "damageWrapperDirectory",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"*.csv\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 79
                  },
                  {
                    "Name": "LoadSingleFile",
                    "FullName": "Character.ShootingScript.LoadSingleFile(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
                    "DefinitionLine": 86,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "fileName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 82
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "fileEntries",
                      "Type": "string[]",
                      "Assignment": "Directory.GetFiles(damageWrapperDirectory, \"*.csv\")",
                      "Kind": "Definition",
                      "DefinitionLine": 78
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 72
              },
              {
                "Name": "LoadSingleFile",
                "FullName": "Character.ShootingScript.LoadSingleFile(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "fileName",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "CheckFile",
                    "FullName": "Character.ShootingScript.CheckFile(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ShootingScript.cs",
                    "DefinitionLine": 113,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "fileName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 88
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, string>.Add(string, string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "DEFAULTDAMAGEDONE",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "DEFAULTDAMAGERESIST",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 90
                  },
                  {
                    "Name": "ReadAllLines",
                    "FullName": "System.IO.File.ReadAllLines(string)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "fileName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 93
                  },
                  {
                    "Name": "Split",
                    "FullName": "string.Split(params char[])",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "','",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 96
                  },
                  {
                    "Name": "Trim",
                    "FullName": "string.Trim()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 97
                  },
                  {
                    "Name": "Trim",
                    "FullName": "string.Trim()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 98
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, string>.Add(string, string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "damage",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "resist",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 99
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "lines",
                      "Type": "string[]",
                      "Assignment": "File.ReadAllLines(fileName)",
                      "Kind": "Definition",
                      "DefinitionLine": 92
                    }
                  },
                  {
                    "Variable": {
                      "Name": "items",
                      "Type": "string[]",
                      "Assignment": "l.Split(',')",
                      "Kind": "Definition",
                      "DefinitionLine": 95
                    }
                  },
                  {
                    "Variable": {
                      "Name": "damage",
                      "Type": "string",
                      "Assignment": "items[0].Trim()",
                      "Kind": "Definition",
                      "DefinitionLine": 96
                    }
                  },
                  {
                    "Variable": {
                      "Name": "resist",
                      "Type": "string",
                      "Assignment": "items[1].Trim()",
                      "Kind": "Definition",
                      "DefinitionLine": 97
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 86
              },
              {
                "Name": "CheckDirectory",
                "FullName": "Character.ShootingScript.CheckDirectory(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Exists",
                    "FullName": "System.IO.Directory.Exists(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 105
                  },
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Directory Not Found\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 107
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 103
              },
              {
                "Name": "CheckFile",
                "FullName": "Character.ShootingScript.CheckFile(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Exists",
                    "FullName": "System.IO.File.Exists(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 115
                  },
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"File Not Found\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 117
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 113
              },
              {
                "Name": "DamagePacket",
                "FullName": "Character.ShootingScript.DamagePacket()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "Dictionary<string, float>",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, string>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "kvf.Key",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 129
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, float>.Add(string, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "damageWrapper[kvf.Key]",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "kvf.Value.CurrValue",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 129
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "damagePacket",
                      "Type": "Dictionary<string, float>",
                      "Assignment": "new Dictionary<string, float>()",
                      "Kind": "Definition",
                      "DefinitionLine": 124
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fm",
                      "Type": "FeatureManager",
                      "Assignment": "weaponManager.MyFeatureManager",
                      "Kind": "Definition",
                      "DefinitionLine": 125
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 123
              },
              {
                "Name": "CmdShootEnemyPlayer",
                "FullName": "Character.ShootingScript.CmdShootEnemyPlayer(UnityEngine.GameObject, string)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "enemy",
                    "Type": "GameObject",
                    "Assignment": null
                  },
                  {
                    "Name": "dmg",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ForeignDamage",
                    "FullName": "Character.PlayerLifeManager.ForeignDamage(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerLifeManager.cs",
                    "DefinitionLine": 157,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "dmg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 137
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.PlayerLifeManager>()",
                    "ReturnType": "PlayerLifeManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 137
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 134
              },
              {
                "Name": "ShootCooldown",
                "FullName": "Character.ShootingScript.ShootCooldown()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetActiveWeaponShootDelay",
                    "FullName": "Weapon.WeaponManager.GetActiveWeaponShootDelay()",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 225,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 142
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "canShoot",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 142,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 142,
                      "UseKind": "Literal",
                      "AssignedTo": "canShoot",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 140
              },
              {
                "Name": "CalcDamage",
                "FullName": "Character.ShootingScript.CalcDamage(float)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "int",
                "Parameters": [
                  {
                    "Name": "baseDmg",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "CeilToInt",
                    "FullName": "UnityEngine.Mathf.CeilToInt(float)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "playerManager.PlayerFeatures.FeatureValue(DAMAGEDONE) * baseDmg",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 148
                  },
                  {
                    "Name": "FeatureValue",
                    "FullName": "Character.FeatureManager.FeatureValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\FeatureManager.cs",
                    "DefinitionLine": 78,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "DAMAGEDONE",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 148
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 146
              },
              {
                "Name": "DeserializeDmg",
                "FullName": "Character.ShootingScript.DamageDone.DeserializeDmg()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "damageType.ElementAt(i)",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "damageValue.ElementAt(i)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 185
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 185
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 185
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 182
                    }
                  },
                  {
                    "Variable": {
                      "Name": "damageDone",
                      "Type": "System.Collections.Generic.Dictionary<string, float>",
                      "Assignment": "new Dictionary<string, float>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 181,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Dictionary<string, float>()",
                      "Type": "System.Collections.Generic.Dictionary<string, float>",
                      "Kind": "Use",
                      "UseLine": 181,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "damageDone",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 180
              },
              {
                "Name": "SerializeDmg",
                "FullName": "Character.ShootingScript.DamageDone.SerializeDmg()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<string>.Add(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "k.Key",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 193
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<float>.Add(float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "k.Value",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 194
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 189
              }
            ],
            "Fields": [
              {
                "Name": "range",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "100.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "_camera",
                "Type": "Camera",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "DAMAGEDONE",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"DAMAGE_DONE\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "DEFAULTDAMAGEDONE",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"PHYSICALDAMAGEDONE\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "DEFAULTDAMAGERESIST",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "\"PHYSICALDAMAGE\"",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "damageWrapperDirectory",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "damageWrapper",
                "Type": "Dictionary<string, string>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, string>()",
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "status",
                "Type": "CharacterStatus",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "weaponManager",
                "Type": "WeaponManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "canShoot",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "playerManager",
                "Type": "PlayerManagerScript",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "pvp",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "true",
                "Attributes": [
                  "[SyncVar]"
                ],
                "Line": 26
              },
              {
                "Name": "player",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 154
              },
              {
                "Name": "playerid",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 155
              },
              {
                "Name": "damageDone",
                "Type": "Dictionary<string, float>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 156
              },
              {
                "Name": "damageType",
                "Type": "List<string>",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new List<string>()",
                "Attributes": [],
                "Line": 157
              },
              {
                "Name": "damageValue",
                "Type": "List<float>",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new List<float>()",
                "Attributes": [],
                "Line": 158
              },
              {
                "Name": "effects",
                "Type": "List<string>",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new List<string>()",
                "Attributes": [],
                "Line": 159
              },
              {
                "Name": "effects",
                "Type": "List<string>",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 202
              }
            ],
            "Line": 12
          }
        ],
        "Usings": [],
        "Line": 10
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "Weapon",
        "Line": 4
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 5
      },
      {
        "Name": "System",
        "Line": 6
      },
      {
        "Name": "System.IO",
        "Line": 7
      },
      {
        "Name": "System.Linq",
        "Line": 8
      }
    ],
    "Line": 1
  },
  {
    "Name": "SoundConfiguration",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\SoundConfiguration.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "SoundConfiguration",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Start",
            "FullName": "SoundConfiguration.Start()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "LoadVolume",
                "FullName": "SoundConfiguration.LoadVolume()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\SoundConfiguration.cs",
                "DefinitionLine": 38,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 15
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 13
          },
          {
            "Name": "VolumeValue",
            "FullName": "SoundConfiguration.VolumeValue(float)",
            "Modifiers": [
              "protected"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "volume",
                "Type": "float",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "ToString",
                "FullName": "float.ToString()",
                "ReturnType": "String",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "CommonLanguageRuntimeLibrary",
                "Arguments": [],
                "Line": 20
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "musicText.text",
                  "Type": "?",
                  "Assignment": "(volume*100).ToString()",
                  "Kind": "Assignment",
                  "AssignmentLine": 19,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "(volume*100).ToString()",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 19,
                  "UseKind": "Invocation",
                  "AssignedTo": "musicText.text",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 18
          },
          {
            "Name": "SaveVolume",
            "FullName": "SoundConfiguration.SaveVolume()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "SetFloat",
                "FullName": "UnityEngine.PlayerPrefs.SetFloat(string, float)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"masterVolume\"",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "volume",
                    "IsInvocation": false
                  }
                ],
                "Line": 26
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "volume",
                  "Type": "float",
                  "Assignment": "masterSlider.value",
                  "Kind": "Definition",
                  "DefinitionLine": 24
                }
              },
              {
                "Variable": {
                  "Name": "AudioListener.volume",
                  "Type": "float",
                  "Assignment": "volume",
                  "Kind": "Assignment",
                  "AssignmentLine": 26,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "volume",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 26,
                  "UseKind": "LocalReference",
                  "AssignedTo": "AudioListener.volume",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 23
          },
          {
            "Name": "UpdateGUI",
            "FullName": "SoundConfiguration.UpdateGUI()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "VolumeValue",
                "FullName": "SoundConfiguration.VolumeValue(float)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\SoundConfiguration.cs",
                "DefinitionLine": 18,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "volume",
                    "IsInvocation": false
                  }
                ],
                "Line": 35
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "volume",
                  "Type": "float",
                  "Assignment": "masterSlider.value",
                  "Kind": "Definition",
                  "DefinitionLine": 33
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 32
          },
          {
            "Name": "LoadVolume",
            "FullName": "SoundConfiguration.LoadVolume()",
            "Modifiers": [
              "protected"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetFloat",
                "FullName": "UnityEngine.PlayerPrefs.GetFloat(string)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"masterVolume\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 40
              },
              {
                "Name": "VolumeValue",
                "FullName": "SoundConfiguration.VolumeValue(float)",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\SoundConfiguration.cs",
                "DefinitionLine": 18,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "volume",
                    "IsInvocation": false
                  }
                ],
                "Line": 42
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "volume",
                  "Type": "float",
                  "Assignment": "PlayerPrefs.GetFloat(\"masterVolume\")",
                  "Kind": "Definition",
                  "DefinitionLine": 39
                }
              },
              {
                "Variable": {
                  "Name": "masterSlider.value",
                  "Type": "?",
                  "Assignment": "volume",
                  "Kind": "Assignment",
                  "AssignmentLine": 40,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "AudioListener.volume",
                  "Type": "float",
                  "Assignment": "volume",
                  "Kind": "Assignment",
                  "AssignmentLine": 42,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "volume",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 40,
                  "UseKind": "LocalReference",
                  "AssignedTo": "masterSlider.value",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "volume",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 42,
                  "UseKind": "LocalReference",
                  "AssignedTo": "AudioListener.volume",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 38
          }
        ],
        "Fields": [
          {
            "Name": "masterSlider",
            "Type": "Slider",
            "Modifiers": [
              "protected"
            ],
            "Assignment": null,
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 8
          },
          {
            "Name": "musicText",
            "Type": "Text",
            "Modifiers": [
              "protected"
            ],
            "Assignment": null,
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 10
          }
        ],
        "Line": 6
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "Tick",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Tick.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Tick",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "OverTime",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Timer",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 13
              },
              {
                "Name": "TickInInterval",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 25
              }
            ],
            "Methods": [
              {
                "Name": "Activate",
                "FullName": "Character.Tick.Activate()",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "TickFeature",
                    "FullName": "Character.UAComponent.TickFeature()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 38,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 37
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "valuePerSecond",
                      "Type": "float",
                      "Assignment": "tickPerSecond",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "active",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "tickPerSecond",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "FieldReference",
                      "AssignedTo": "valuePerSecond",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "Literal",
                      "AssignedTo": "active",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              },
              {
                "Name": "DoTick",
                "FullName": "Character.Tick.DoTick()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Activate",
                    "FullName": "Character.Tick.Activate()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Tick.cs",
                    "DefinitionLine": 30,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 42
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 40
              }
            ],
            "Fields": [
              {
                "Name": "tickPerSecond",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "timer",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "active",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 11
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "TickManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\TickManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "TickManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.TickManager.Awake()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "AddTick",
                "FullName": "Character.TickManager.AddTick(Character.Tick)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "t",
                    "Type": "Tick",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<Character.Tick>.Add(Character.Tick)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "t",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 22
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t.Timer",
                      "Type": "float",
                      "Assignment": "timer",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "FieldReference",
                      "AssignedTo": "t.Timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "CheckIsActive",
                "FullName": "Character.TickManager.CheckIsActive()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RemoveAll",
                    "FullName": "System.Collections.Generic.List<Character.Tick>.RemoveAll(System.Predicate<Character.Tick>)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "item => item.MyComponent.CheckIsActive() == false",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 27
                  },
                  {
                    "Name": "CheckIsActive",
                    "FullName": "Character.UAComponent.CheckIsActive()",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 59,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 27
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 25
              },
              {
                "Name": "CheckTimer",
                "FullName": "Character.TickManager.CheckTimer()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DoTick",
                    "FullName": "Character.Tick.DoTick()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\Tick.cs",
                    "DefinitionLine": 40,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 37
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t.Timer",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t.Timer",
                      "Type": "float",
                      "Assignment": "timeIntervalInSecond",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "t.Timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "timeIntervalInSecond",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "FieldReference",
                      "AssignedTo": "t.Timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.TickManager.FixedUpdate()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckTimer",
                    "FullName": "Character.TickManager.CheckTimer()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\TickManager.cs",
                    "DefinitionLine": 30,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 45
                  },
                  {
                    "Name": "CheckIsActive",
                    "FullName": "Character.TickManager.CheckIsActive()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\TickManager.cs",
                    "DefinitionLine": 25,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 46
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 43
              }
            ],
            "Fields": [
              {
                "Name": "timeIntervalInSecond",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "ticks",
                "Type": "List<Tick>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new List<Tick>()",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "timer",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "tick",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "UAComponent",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "UAComponent",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "ObjectWithFeatures",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "ComponentId",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 22
              },
              {
                "Name": "MyModifiers",
                "Type": "Dictionary<string, Modifier>",
                "Modifiers": [
                  "public"
                ],
                "Line": 74
              },
              {
                "Name": "MyFeatures",
                "Type": "Dictionary<string, Feature>",
                "Modifiers": [
                  "public"
                ],
                "Line": 79
              }
            ],
            "Methods": [
              {
                "Name": "ReduceComponent",
                "FullName": "Character.UAComponent.ReduceComponent(string, float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "type",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "n",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_features[type].CurrValue",
                      "Type": "float",
                      "Assignment": "n",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "isActive",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "n",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "m_features[type].CurrValue",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "Literal",
                      "AssignedTo": "isActive",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              },
              {
                "Name": "TickFeature",
                "FullName": "Character.UAComponent.TickFeature()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "nextTick",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Literal",
                      "AssignedTo": "nextTick",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 38
              },
              {
                "Name": "ResetTick",
                "FullName": "Character.UAComponent.ResetTick()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "nextTick",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 44,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "Literal",
                      "AssignedTo": "nextTick",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 43
              },
              {
                "Name": "CheckTick",
                "FullName": "Character.UAComponent.CheckTick()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "bool",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 48
              },
              {
                "Name": "HasFeature",
                "FullName": "Character.UAComponent.HasFeature(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 53
              },
              {
                "Name": "CheckIsActive",
                "FullName": "Character.UAComponent.CheckIsActive()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "bool",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 59
              },
              {
                "Name": "AddModifier",
                "FullName": "Character.UAComponent.AddModifier(Character.Modifier)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "m",
                    "Type": "Modifier",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "modifiers[m.Name]",
                      "Type": "Character.Modifier",
                      "Assignment": "m",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m",
                      "Type": "Character.Modifier",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "modifiers[m.Name]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 64
              },
              {
                "Name": "AddModifier",
                "FullName": "Character.UAComponent.AddModifier(string, string, float, float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "m",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "mul",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "add",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "AddModifier",
                    "FullName": "Character.UAComponent.AddModifier(Character.Modifier)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 64,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "new Modifier(name, m, mul, add)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 71
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 69
              },
              {
                "Name": "LoadMe",
                "FullName": "Character.UAComponent.LoadMe(string)",
                "Modifiers": [
                  "protected",
                  "virtual"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "path",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ReadAllLines",
                    "FullName": "System.IO.File.ReadAllLines(string)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "path",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 95
                  },
                  {
                    "Name": "Split",
                    "FullName": "string.Split(params char[])",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "','",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 98
                  },
                  {
                    "Name": "Trim",
                    "FullName": "string.Trim()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 99
                  },
                  {
                    "Name": "Trim",
                    "FullName": "string.Trim()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 100
                  },
                  {
                    "Name": "ParseFloatValue",
                    "FullName": "Character.UAComponent.ParseFloatValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 118,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "items[2]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 101
                  },
                  {
                    "Name": "ParseFloatValue",
                    "FullName": "Character.UAComponent.ParseFloatValue(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 118,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "items[3]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 102
                  },
                  {
                    "Name": "AddWrapper",
                    "FullName": "Character.UAComponent.AddWrapper(string, string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 133,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "feature",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 105
                  },
                  {
                    "Name": "AddModifier",
                    "FullName": "Character.UAComponent.AddModifier(Character.Modifier)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 64,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 106
                  },
                  {
                    "Name": "AddFeature",
                    "FullName": "Character.UAComponent.AddFeature(Character.Feature)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 123,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 107
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "lines",
                      "Type": "string[]",
                      "Assignment": "File.ReadAllLines(path)",
                      "Kind": "Definition",
                      "DefinitionLine": 94
                    }
                  },
                  {
                    "Variable": {
                      "Name": "items",
                      "Type": "string[]",
                      "Assignment": "l.Split(',')",
                      "Kind": "Definition",
                      "DefinitionLine": 97
                    }
                  },
                  {
                    "Variable": {
                      "Name": "name",
                      "Type": "string",
                      "Assignment": "items[0].Trim()",
                      "Kind": "Definition",
                      "DefinitionLine": 98
                    }
                  },
                  {
                    "Variable": {
                      "Name": "feature",
                      "Type": "string",
                      "Assignment": "items[1].Trim()",
                      "Kind": "Definition",
                      "DefinitionLine": 99
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mul_val",
                      "Type": "float",
                      "Assignment": "ParseFloatValue(items[2])",
                      "Kind": "Definition",
                      "DefinitionLine": 100
                    }
                  },
                  {
                    "Variable": {
                      "Name": "add_val",
                      "Type": "float",
                      "Assignment": "ParseFloatValue(items[3])",
                      "Kind": "Definition",
                      "DefinitionLine": 101
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m",
                      "Type": "Modifier",
                      "Assignment": "new Modifier(name, feature, mul_val, add_val)",
                      "Kind": "Definition",
                      "DefinitionLine": 102
                    }
                  },
                  {
                    "Variable": {
                      "Name": "f",
                      "Type": "Feature",
                      "Assignment": "new Feature(add_val, feature)",
                      "Kind": "Definition",
                      "DefinitionLine": 103
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 93
              },
              {
                "Name": "ModifierNameByFeature",
                "FullName": "Character.UAComponent.ModifierNameByFeature(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "string",
                "Parameters": [
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 112
              },
              {
                "Name": "ParseFloatValue",
                "FullName": "Character.UAComponent.ParseFloatValue(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "val",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Parse",
                    "FullName": "float.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "val",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "System.Globalization.NumberStyles.Any",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "System.Globalization.CultureInfo.InvariantCulture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 120
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 118
              },
              {
                "Name": "AddFeature",
                "FullName": "Character.UAComponent.AddFeature(Character.Feature)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "Feature",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_features[f.Type]",
                      "Type": "Character.Feature",
                      "Assignment": "f",
                      "Kind": "Assignment",
                      "AssignmentLine": 124,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "f",
                      "Type": "Character.Feature",
                      "Kind": "Use",
                      "UseLine": 124,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "m_features[f.Type]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 123
              },
              {
                "Name": "AddFeature",
                "FullName": "Character.UAComponent.AddFeature(string, float)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "val",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "AddFeature",
                    "FullName": "Character.UAComponent.AddFeature(Character.Feature)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UAComponent.cs",
                    "DefinitionLine": 123,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "new Feature(val, f)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 130
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 128
              },
              {
                "Name": "AddWrapper",
                "FullName": "Character.UAComponent.AddWrapper(string, string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "feature",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, string>.Add(string, string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "feature",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 135
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 133
              },
              {
                "Name": "GetFeature",
                "FullName": "Character.UAComponent.GetFeature(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "Feature",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "feature",
                      "Type": "Feature",
                      "Assignment": "m_features[keyValuePair.Key]",
                      "Kind": "Definition",
                      "DefinitionLine": 141
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 138
              },
              {
                "Name": "GetModifier",
                "FullName": "Character.UAComponent.GetModifier(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Modifier",
                "Parameters": [
                  {
                    "Name": "m",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "modifier",
                      "Type": "Modifier",
                      "Assignment": "modifiers[keyValuePair.Key]",
                      "Kind": "Definition",
                      "DefinitionLine": 150
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 148
              },
              {
                "Name": "CheckFeature",
                "FullName": "Character.UAComponent.CheckFeature(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, Character.Feature>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 159
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 157
              }
            ],
            "Fields": [
              {
                "Name": "componentId",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "componentPath",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "cm",
                "Type": "ComponentManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "isActive",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "nextTick",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "modifiers",
                "Type": "Dictionary<string, Modifier>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, Modifier>()",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_features",
                "Type": "Dictionary<string, Feature>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, Feature>()",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "wrapper",
                "Type": "Dictionary<string, string>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, string>()",
                "Attributes": [],
                "Line": 19
              }
            ],
            "Line": 10
          }
        ],
        "Usings": [],
        "Line": 8
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 3
      },
      {
        "Name": "System.Linq",
        "Line": 4
      },
      {
        "Name": "UnityEngine",
        "Line": 5
      },
      {
        "Name": "System.IO",
        "Line": 6
      }
    ],
    "Line": 1
  },
  {
    "Name": "UiFeedback",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UiFeedback.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "UiFeedback",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "FeedbackTime",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 12
              },
              {
                "Name": "MaxTransparency",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 17
              }
            ],
            "Methods": [],
            "Fields": [
              {
                "Name": "feedbackTime",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "maxTransparency",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "20.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "UIPauseManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UIPauseManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "UIPauseManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Character.UIPauseManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 17
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "status",
                      "Type": "Character.CharacterStatus",
                      "Assignment": "GetComponent<CharacterStatus>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 16,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CharacterStatus>()",
                      "Type": "Character.CharacterStatus",
                      "Kind": "Use",
                      "UseLine": 16,
                      "UseKind": "Invalid",
                      "AssignedTo": "status",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 15
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Character.UIPauseManager.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "IsPause",
                    "FullName": "Character.UIPauseManager.IsPause()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UIPauseManager.cs",
                    "DefinitionLine": 35,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 27
                  },
                  {
                    "Name": "IsGame",
                    "FullName": "Character.UIPauseManager.IsGame()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\UIPauseManager.cs",
                    "DefinitionLine": 42,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 31
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "IsPause",
                "FullName": "Character.UIPauseManager.IsPause()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "inPauseMenu",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "Literal",
                      "AssignedTo": "inPauseMenu",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 35
              },
              {
                "Name": "IsGame",
                "FullName": "Character.UIPauseManager.IsGame()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 44
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 45
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "inPauseMenu",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "status.IsPaused",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "Literal",
                      "AssignedTo": "inPauseMenu",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "Literal",
                      "AssignedTo": "status.IsPaused",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 42
              },
              {
                "Name": "IsSoundOption",
                "FullName": "Character.UIPauseManager.IsSoundOption()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "inPauseMenu",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "Literal",
                      "AssignedTo": "inPauseMenu",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 50
              }
            ],
            "Fields": [
              {
                "Name": "pauseMenu",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "soundMenu",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "status",
                "Type": "CharacterStatus",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "inPauseMenu",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 14
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 7
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.InputSystem",
        "Line": 4
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "WeaponManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Weapon",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WeaponManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "NetworkBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "MyFeatureManager",
                "Type": "FeatureManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 26
              },
              {
                "Name": "MyComponentManager",
                "Type": "ComponentManager",
                "Modifiers": [
                  "public"
                ],
                "Line": 31
              },
              {
                "Name": "ActiveWeapon",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Line": 36
              },
              {
                "Name": "WeaponContainer",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Line": 41
              },
              {
                "Name": "ActiveWeaponStatus",
                "Type": "WeaponStatus",
                "Modifiers": [
                  "public"
                ],
                "Line": 209
              }
            ],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "Weapon.WeaponManager.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 49
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 50
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 51
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "pms",
                      "Type": "Character.PlayerManagerScript",
                      "Assignment": "GetComponent<PlayerManagerScript>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "status",
                      "Type": "Character.CharacterStatus",
                      "Assignment": "GetComponent<CharacterStatus>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "audioS",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "GetComponent<AudioSource>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<PlayerManagerScript>()",
                      "Type": "Character.PlayerManagerScript",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Invalid",
                      "AssignedTo": "pms",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CharacterStatus>()",
                      "Type": "Character.CharacterStatus",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "Invalid",
                      "AssignedTo": "status",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AudioSource>()",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "Invalid",
                      "AssignedTo": "audioS",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 47
              },
              {
                "Name": "Spawn",
                "FullName": "Weapon.WeaponManager.Spawn()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "weaponsList[i]",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "weaponContainer.transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "weaponContainer.transform.rotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "weaponContainer.transform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 62
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 63
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "weapon.GetComponent<WeaponStatus>().Id",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Weapon.WeaponStatus>()",
                    "ReturnType": "WeaponStatus",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 64
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "weapon.GetComponent<WeaponStatus>().Id",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "weapon",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 65
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Weapon.WeaponStatus>()",
                    "ReturnType": "WeaponStatus",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 65
                  },
                  {
                    "Name": "ChangeWeapon",
                    "FullName": "Weapon.WeaponManager.ChangeWeapon(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 182,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "activeWeaponId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 67
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 59
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weapon",
                      "Type": "GameObject",
                      "Assignment": "Instantiate(weaponsList[i], weaponContainer.transform.position, weaponContainer.transform.rotation, weaponContainer.transform)",
                      "Kind": "Definition",
                      "DefinitionLine": 61
                    }
                  },
                  {
                    "Variable": {
                      "Name": "enabledWeapons",
                      "Type": "SortedDictionary<int, bool>",
                      "Assignment": "new SortedDictionary<int, bool>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 57,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerWeapons",
                      "Type": "SortedDictionary<int, UnityEngine.GameObject>",
                      "Assignment": "new SortedDictionary<int, GameObject>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new SortedDictionary<int, bool>()",
                      "Type": "SortedDictionary<int, bool>",
                      "Kind": "Use",
                      "UseLine": 57,
                      "UseKind": "Invalid",
                      "AssignedTo": "enabledWeapons",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new SortedDictionary<int, GameObject>()",
                      "Type": "SortedDictionary<int, UnityEngine.GameObject>",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Invalid",
                      "AssignedTo": "playerWeapons",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 54
              },
              {
                "Name": "ResetWeapons",
                "FullName": "Weapon.WeaponManager.ResetWeapons()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 76
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 76
                  },
                  {
                    "Name": "ChangeWeapon",
                    "FullName": "Weapon.WeaponManager.ChangeWeapon(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 182,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "activeWeaponId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 80
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 72
                    }
                  },
                  {
                    "Variable": {
                      "Name": "enabledWeapons[i]",
                      "Type": "?",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 74,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "enabledWeapons[0]",
                      "Type": "?",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 77,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeaponId",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 78,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 74,
                      "UseKind": "Literal",
                      "AssignedTo": "enabledWeapons[i]",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 77,
                      "UseKind": "Literal",
                      "AssignedTo": "enabledWeapons[0]",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 78,
                      "UseKind": "Literal",
                      "AssignedTo": "activeWeaponId",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 71
              },
              {
                "Name": "FixedUpdate",
                "FullName": "Weapon.WeaponManager.FixedUpdate()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SelectWeapon",
                    "FullName": "Weapon.WeaponManager.SelectWeapon()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 98,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 87
                  },
                  {
                    "Name": "CheckButtonPressed",
                    "FullName": "Weapon.WeaponManager.CheckButtonPressed()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 219,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 88
                  },
                  {
                    "Name": "UpdateWeaponFeatures",
                    "FullName": "Weapon.WeaponManager.UpdateWeaponFeatures()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 89
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 83
              },
              {
                "Name": "UpdateWeaponFeatures",
                "FullName": "Weapon.WeaponManager.UpdateWeaponFeatures()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "UpdateComponents",
                    "FullName": "Character.ComponentManager.UpdateComponents(System.Collections.Generic.Dictionary<string, Character.UAComponent>)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ComponentManager.cs",
                    "DefinitionLine": 288,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "pms.ComponentManager.Components",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 95
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 93
              },
              {
                "Name": "SelectWeapon",
                "FullName": "Weapon.WeaponManager.SelectWeapon()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "ChangeWeapon",
                    "FullName": "Weapon.WeaponManager.ChangeWeapon(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 182,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "NextWeapon()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 100
                  },
                  {
                    "Name": "NextWeapon",
                    "FullName": "Weapon.WeaponManager.NextWeapon()",
                    "ReturnType": "Int32",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 148,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 100
                  },
                  {
                    "Name": "ChangeWeapon",
                    "FullName": "Weapon.WeaponManager.ChangeWeapon(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 182,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "PreWeapon()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 101
                  },
                  {
                    "Name": "PreWeapon",
                    "FullName": "Weapon.WeaponManager.PreWeapon()",
                    "ReturnType": "Int32",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 165,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 101
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 98
              },
              {
                "Name": "PickUpWeapon",
                "FullName": "Weapon.WeaponManager.PickUpWeapon(UnityEngine.GameObject)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "pickWeap",
                    "Type": "GameObject",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.WeaponConsumable>()",
                    "ReturnType": "WeaponConsumable",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 106
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "pick_consumable.Id",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 107
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 111
                  },
                  {
                    "Name": "AddAmmo",
                    "FullName": "Weapon.WeaponStatus.AddAmmo(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponStatus.cs",
                    "DefinitionLine": 99,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "pick_consumable.Ammo",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 112
                  },
                  {
                    "Name": "ChangeWeapon",
                    "FullName": "Weapon.WeaponManager.ChangeWeapon(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 182,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "pick_consumable.Id",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 117
                  },
                  {
                    "Name": "AddAmmo",
                    "FullName": "Weapon.WeaponStatus.AddAmmo(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponStatus.cs",
                    "DefinitionLine": 99,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "pick_consumable.Ammo",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 118
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "pick_consumable",
                      "Type": "WeaponConsumable",
                      "Assignment": "pickWeap.GetComponent<WeaponConsumable>()",
                      "Kind": "Definition",
                      "DefinitionLine": 105
                    }
                  },
                  {
                    "Variable": {
                      "Name": "w_stat",
                      "Type": "WeaponStatus",
                      "Assignment": "playerWeapons[pick_consumable.Id].GetComponent<WeaponStatus>()",
                      "Kind": "Definition",
                      "DefinitionLine": 110
                    }
                  },
                  {
                    "Variable": {
                      "Name": "enabledWeapons[pick_consumable.Id]",
                      "Type": "?",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 115,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 115,
                      "UseKind": "Literal",
                      "AssignedTo": "enabledWeapons[pick_consumable.Id]",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 104
              },
              {
                "Name": "AddAmmoToWeapon",
                "FullName": "Weapon.WeaponManager.AddAmmoToWeapon(UnityEngine.GameObject)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "ammoBox",
                    "Type": "GameObject",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Weapon.AmmoBox>()",
                    "ReturnType": "AmmoBox",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 125
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "id",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 128
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 130
                  },
                  {
                    "Name": "AddAmmo",
                    "FullName": "Weapon.WeaponStatus.AddAmmo(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponStatus.cs",
                    "DefinitionLine": 99,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "ammo",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 131
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "ab",
                      "Type": "AmmoBox",
                      "Assignment": "ammoBox.GetComponent<AmmoBox>()",
                      "Kind": "Definition",
                      "DefinitionLine": 124
                    }
                  },
                  {
                    "Variable": {
                      "Name": "id",
                      "Type": "int",
                      "Assignment": "ab.Id",
                      "Kind": "Definition",
                      "DefinitionLine": 125
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ammo",
                      "Type": "int",
                      "Assignment": "ab.Ammo",
                      "Kind": "Definition",
                      "DefinitionLine": 126
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weps",
                      "Type": "WeaponStatus",
                      "Assignment": "playerWeapons[id].GetComponent<WeaponStatus>()",
                      "Kind": "Definition",
                      "DefinitionLine": 129
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 123
              },
              {
                "Name": "TriggerShoot",
                "FullName": "Weapon.WeaponManager.TriggerShoot()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "WeaponShoot",
                    "FullName": "Weapon.WeaponManager.WeaponShoot()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 141,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 137
                  },
                  {
                    "Name": "ChangeWeapon",
                    "FullName": "Weapon.WeaponManager.ChangeWeapon(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 182,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "NextWeapon()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 138
                  },
                  {
                    "Name": "NextWeapon",
                    "FullName": "Weapon.WeaponManager.NextWeapon()",
                    "ReturnType": "Int32",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 148,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 138
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 135
              },
              {
                "Name": "WeaponShoot",
                "FullName": "Weapon.WeaponManager.WeaponShoot()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.AudioSource.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 144
                  },
                  {
                    "Name": "Shoot",
                    "FullName": "Weapon.WeaponStatus.Shoot()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponStatus.cs",
                    "DefinitionLine": 111,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 145
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "audioS.clip",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "activeWeaponStatus.Fire_sound",
                      "Kind": "Assignment",
                      "AssignmentLine": 142,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeaponStatus.Fire_sound",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 142,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "audioS.clip",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 141
              },
              {
                "Name": "NextWeapon",
                "FullName": "Weapon.WeaponManager.NextWeapon()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "int",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 156
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 149
                    }
                  },
                  {
                    "Variable": {
                      "Name": "found",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Definition",
                      "DefinitionLine": 150
                    }
                  },
                  {
                    "Variable": {
                      "Name": "wep_stat",
                      "Type": "WeaponStatus",
                      "Assignment": "playerWeapons[i].GetComponent<WeaponStatus>()",
                      "Kind": "Definition",
                      "DefinitionLine": 155
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "activeWeaponId + 1",
                      "Kind": "Assignment",
                      "AssignmentLine": 151,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "found",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 157,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeaponId + 1",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 151,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "i",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "activeWeaponId",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 151,
                          "UseKind": "FieldReference",
                          "AssignedTo": "i",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 151,
                          "UseKind": "Literal",
                          "AssignedTo": "i",
                          "Value": "1",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 157,
                      "UseKind": "Literal",
                      "AssignedTo": "found",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 148
              },
              {
                "Name": "PreWeapon",
                "FullName": "Weapon.WeaponManager.PreWeapon()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "int",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [],
                    "Line": 173
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 166
                    }
                  },
                  {
                    "Variable": {
                      "Name": "found",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Definition",
                      "DefinitionLine": 167
                    }
                  },
                  {
                    "Variable": {
                      "Name": "wep_stat",
                      "Type": "WeaponStatus",
                      "Assignment": "playerWeapons[i].GetComponent<WeaponStatus>()",
                      "Kind": "Definition",
                      "DefinitionLine": 172
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "activeWeaponId - 1",
                      "Kind": "Assignment",
                      "AssignmentLine": 168,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "found",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 174,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeaponId - 1",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 168,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "i",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "activeWeaponId",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 168,
                          "UseKind": "FieldReference",
                          "AssignedTo": "i",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 168,
                          "UseKind": "Literal",
                          "AssignedTo": "i",
                          "Value": "1",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 174,
                      "UseKind": "Literal",
                      "AssignedTo": "found",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 165
              },
              {
                "Name": "ChangeWeapon",
                "FullName": "Weapon.WeaponManager.ChangeWeapon(int)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "weaponId",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 185
                  },
                  {
                    "Name": "CmdChangeWeapon",
                    "FullName": "Weapon.WeaponManager.CmdChangeWeapon(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 198,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "weaponId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 186
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 189
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Weapon.WeaponStatus>()",
                    "ReturnType": "WeaponStatus",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 190
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.ComponentManager>()",
                    "ReturnType": "ComponentManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 191
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<Character.FeatureManager>()",
                    "ReturnType": "FeatureManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 192
                  },
                  {
                    "Name": "WeaponInPosition",
                    "FullName": "Weapon.WeaponManager.WeaponInPosition()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 203,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 193
                  },
                  {
                    "Name": "AnimateByWeapon",
                    "FullName": "Weapon.WeaponManager.AnimateByWeapon()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponManager.cs",
                    "DefinitionLine": 214,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 194
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "activeWeaponId",
                      "Type": "int",
                      "Assignment": "weaponId",
                      "Kind": "Assignment",
                      "AssignmentLine": 186,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeapon",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "playerWeapons[activeWeaponId]",
                      "Kind": "Assignment",
                      "AssignmentLine": 187,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeaponStatus",
                      "Type": "Weapon.WeaponStatus",
                      "Assignment": "activeWeapon.GetComponent<WeaponStatus>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 189,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "componentManager",
                      "Type": "Character.ComponentManager",
                      "Assignment": "activeWeapon.GetComponent<ComponentManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 190,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "featureManager",
                      "Type": "Character.FeatureManager",
                      "Assignment": "activeWeapon.GetComponent<FeatureManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 191,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weaponId",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 186,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "activeWeaponId",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerWeapons[activeWeaponId]",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 187,
                      "UseKind": "Invalid",
                      "AssignedTo": "activeWeapon",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeapon.GetComponent<WeaponStatus>()",
                      "Type": "Weapon.WeaponStatus",
                      "Kind": "Use",
                      "UseLine": 189,
                      "UseKind": "Invocation",
                      "AssignedTo": "activeWeaponStatus",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeapon.GetComponent<ComponentManager>()",
                      "Type": "Character.ComponentManager",
                      "Kind": "Use",
                      "UseLine": 190,
                      "UseKind": "Invocation",
                      "AssignedTo": "componentManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeapon.GetComponent<FeatureManager>()",
                      "Type": "Character.FeatureManager",
                      "Kind": "Use",
                      "UseLine": 191,
                      "UseKind": "Invocation",
                      "AssignedTo": "featureManager",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 182
              },
              {
                "Name": "CmdChangeWeapon",
                "FullName": "Weapon.WeaponManager.CmdChangeWeapon(int)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "weaponId",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "activeWeaponId",
                      "Type": "int",
                      "Assignment": "weaponId",
                      "Kind": "Assignment",
                      "AssignmentLine": 199,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weaponId",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 199,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "activeWeaponId",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 197
              },
              {
                "Name": "WeaponInPosition",
                "FullName": "Weapon.WeaponManager.WeaponInPosition()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "activeWeaponStatus.Rotation",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 206
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "weaponContainer.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "activeWeaponStatus.Position",
                      "Kind": "Assignment",
                      "AssignmentLine": 204,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "weaponContainer.transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Euler(activeWeaponStatus.Rotation)",
                      "Kind": "Assignment",
                      "AssignmentLine": 205,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeWeaponStatus.Position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 204,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "weaponContainer.transform.localPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler(activeWeaponStatus.Rotation)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 205,
                      "UseKind": "Invocation",
                      "AssignedTo": "weaponContainer.transform.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 203
              },
              {
                "Name": "AnimateByWeapon",
                "FullName": "Weapon.WeaponManager.AnimateByWeapon()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetAnimator",
                    "FullName": "Character.PlayerManagerScript.SetAnimator(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\PlayerManagerScript.cs",
                    "DefinitionLine": 235,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "activeWeaponStatus.WeaponType",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 216
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 214
              },
              {
                "Name": "CheckButtonPressed",
                "FullName": "Weapon.WeaponManager.CheckButtonPressed()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "changeButtonsPressed",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 220,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "changeButtonsPressed",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 221,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 220,
                      "UseKind": "Literal",
                      "AssignedTo": "changeButtonsPressed",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 221,
                      "UseKind": "Literal",
                      "AssignedTo": "changeButtonsPressed",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 219
              },
              {
                "Name": "GetActiveWeaponShootDelay",
                "FullName": "Weapon.WeaponManager.GetActiveWeaponShootDelay()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "float",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 225
              },
              {
                "Name": "GetActiveWeaponName",
                "FullName": "Weapon.WeaponManager.GetActiveWeaponName()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "string",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 230
              },
              {
                "Name": "GetActiveWeaponAmmo",
                "FullName": "Weapon.WeaponManager.GetActiveWeaponAmmo()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "int",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 235
              },
              {
                "Name": "GetActiveWeaponRange",
                "FullName": "Weapon.WeaponManager.GetActiveWeaponRange()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "float",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 240
              },
              {
                "Name": "GetActiveWeaponMaxAmmo",
                "FullName": "Weapon.WeaponManager.GetActiveWeaponMaxAmmo()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "int",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 245
              }
            ],
            "Fields": [
              {
                "Name": "weaponsList",
                "Type": "List<GameObject>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "pms",
                "Type": "PlayerManagerScript",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "enabledWeapons",
                "Type": "SortedDictionary<int, bool>",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "playerWeapons",
                "Type": "SortedDictionary<int, GameObject>",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "audioS",
                "Type": "AudioSource",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "activeWeapon",
                "Type": "GameObject",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "null",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "activeWeaponId",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0",
                "Attributes": [
                  "[SyncVar(hook = nameof(ChangeWeapon))]"
                ],
                "Line": 18
              },
              {
                "Name": "activeWeaponStatus",
                "Type": "WeaponStatus",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "changeButtonsPressed",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "status",
                "Type": "CharacterStatus",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "weaponContainer",
                "Type": "GameObject",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "componentManager",
                "Type": "ComponentManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "featureManager",
                "Type": "FeatureManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 7
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "Character",
        "Line": 4
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "WeaponStatus",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\WeaponStatus.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Weapon",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WeaponStatus",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "WeaponName",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 31
              },
              {
                "Name": "WeaponType",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 36
              },
              {
                "Name": "Position",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Line": 41
              },
              {
                "Name": "Rotation",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Line": 46
              },
              {
                "Name": "Fire_sound",
                "Type": "AudioClip",
                "Modifiers": [
                  "public"
                ],
                "Line": 51
              },
              {
                "Name": "Id",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 55
              },
              {
                "Name": "Has_infinite_ammo",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 60
              },
              {
                "Name": "Ammo",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 64
              },
              {
                "Name": "Is_single_fire",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 68
              },
              {
                "Name": "Max_ammo",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 72
              },
              {
                "Name": "Ammo_per_shot",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 76
              },
              {
                "Name": "Time_between_shot",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 80
              },
              {
                "Name": "Range",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 84
              }
            ],
            "Methods": [
              {
                "Name": "ResetAmmo",
                "FullName": "Weapon.WeaponStatus.ResetAmmo()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "ammo",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 27,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 27,
                      "UseKind": "Literal",
                      "AssignedTo": "ammo",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 26
              },
              {
                "Name": "Start",
                "FullName": "Weapon.WeaponStatus.Start()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Weapon.MuzzleManager>()",
                    "ReturnType": "MuzzleManager",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 91
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "muzzle",
                      "Type": "Weapon.MuzzleManager",
                      "Assignment": "GetComponent<MuzzleManager>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 90,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ammo",
                      "Type": "int",
                      "Assignment": "max_ammo",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<MuzzleManager>()",
                      "Type": "Weapon.MuzzleManager",
                      "Kind": "Use",
                      "UseLine": 90,
                      "UseKind": "Invocation",
                      "AssignedTo": "muzzle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "max_ammo",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "FieldReference",
                      "AssignedTo": "ammo",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 89
              },
              {
                "Name": "AddAmmo",
                "FullName": "Weapon.WeaponStatus.AddAmmo(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "ammo",
                      "Type": "int",
                      "Assignment": "value",
                      "Kind": "Assignment",
                      "AssignmentLine": 102,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ammo",
                      "Type": "int",
                      "Assignment": "max_ammo",
                      "Kind": "Assignment",
                      "AssignmentLine": 106,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "value",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 102,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "ammo",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "max_ammo",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 106,
                      "UseKind": "FieldReference",
                      "AssignedTo": "ammo",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 99
              },
              {
                "Name": "Shoot",
                "FullName": "Weapon.WeaponStatus.Shoot()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "muzzle.Muzzle()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 118
                  },
                  {
                    "Name": "Muzzle",
                    "FullName": "Weapon.MuzzleManager.Muzzle()",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\MuzzleManager.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 118
                  },
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "muzzle.Muzzle()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 127
                  },
                  {
                    "Name": "Muzzle",
                    "FullName": "Weapon.MuzzleManager.Muzzle()",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\MuzzleManager.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 127
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "ammo",
                      "Type": "int",
                      "Assignment": "ammo_per_shot",
                      "Kind": "Assignment",
                      "AssignmentLine": 116,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ammo",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 121,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ammo_per_shot",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 116,
                      "UseKind": "FieldReference",
                      "AssignedTo": "ammo",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 121,
                      "UseKind": "Literal",
                      "AssignedTo": "ammo",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 111
              }
            ],
            "Fields": [
              {
                "Name": "id",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "has_infinite_ammo",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "ammo",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "max_ammo",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "ammo_per_shot",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "range",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "time_between_shot",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "is_single_fire",
                "Type": "bool",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "fire_sound",
                "Type": "AudioClip",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "position",
                "Type": "Vector3",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "rotation",
                "Type": "Vector3",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 21
              },
              {
                "Name": "weaponType",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 22
              },
              {
                "Name": "weaponName",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 23
              },
              {
                "Name": "muzzle",
                "Type": "MuzzleManager",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "ConsumableSpawner",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ConsumableSpawn\\ConsumableSpawner.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "ConsumableSpawner",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "NetworkBehaviour",
        "Interfaces": [],
        "Properties": [
          {
            "Name": "SpawnedObject",
            "Type": "GameObject",
            "Modifiers": [
              "public"
            ],
            "Line": 29
          }
        ],
        "Methods": [
          {
            "Name": "SpawnConsumable",
            "FullName": "ConsumableSpawner.SpawnConsumable()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": null,
                "FullName": null,
                "ReturnType": null,
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": null,
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "objectToSpawn",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "transform.position",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "transform.rotation",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "transform",
                    "IsInvocation": false
                  }
                ],
                "Line": 18
              },
              {
                "Name": "CmdSpawnConsumable",
                "FullName": "ConsumableSpawner.CmdSpawnConsumable()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ConsumableSpawn\\ConsumableSpawner.cs",
                "DefinitionLine": 24,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 19
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "spawnedObj",
                  "Type": "UnityEngine.GameObject",
                  "Assignment": "Instantiate(objectToSpawn, transform.position, transform.rotation, transform)",
                  "Kind": "Assignment",
                  "AssignmentLine": 17,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "Instantiate(objectToSpawn, transform.position, transform.rotation, transform)",
                  "Type": "UnityEngine.GameObject",
                  "Kind": "Use",
                  "UseLine": 17,
                  "UseKind": "Invalid",
                  "AssignedTo": "spawnedObj",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 14
          },
          {
            "Name": "CmdSpawnConsumable",
            "FullName": "ConsumableSpawner.CmdSpawnConsumable()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": null,
                "FullName": null,
                "ReturnType": null,
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": null,
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "spawnedObj",
                    "IsInvocation": false
                  }
                ],
                "Line": 26
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 23
          },
          {
            "Name": "FixedUpdate",
            "FullName": "ConsumableSpawner.FixedUpdate()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "SetActive",
                "FullName": "UnityEngine.GameObject.SetActive(bool)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "true",
                    "IsInvocation": false
                  }
                ],
                "Line": 41
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "isCooldown",
                  "Type": "bool",
                  "Assignment": "false",
                  "Kind": "Assignment",
                  "AssignmentLine": 39,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 39,
                  "UseKind": "Literal",
                  "AssignedTo": "isCooldown",
                  "Value": "false",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 34
          },
          {
            "Name": "SetCooldown",
            "FullName": "ConsumableSpawner.SetCooldown()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "SetActive",
                "FullName": "UnityEngine.GameObject.SetActive(bool)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "false",
                    "IsInvocation": false
                  }
                ],
                "Line": 48
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "isCooldown",
                  "Type": "bool",
                  "Assignment": "true",
                  "Kind": "Assignment",
                  "AssignmentLine": 48,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "startCooldown",
                  "Type": "float",
                  "Assignment": "Time.time",
                  "Kind": "Assignment",
                  "AssignmentLine": 49,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 48,
                  "UseKind": "Literal",
                  "AssignedTo": "isCooldown",
                  "Value": "true",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Time.time",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 49,
                  "UseKind": "PropertyReference",
                  "AssignedTo": "startCooldown",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 46
          },
          {
            "Name": "PickedUp",
            "FullName": "ConsumableSpawner.PickedUp()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 53
          }
        ],
        "Fields": [
          {
            "Name": "objectToSpawn",
            "Type": "GameObject",
            "Modifiers": [
              "protected"
            ],
            "Assignment": null,
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 8
          },
          {
            "Name": "cooldown",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "30.0f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 9
          },
          {
            "Name": "isCooldown",
            "Type": "bool",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "false",
            "Attributes": [],
            "Line": 10
          },
          {
            "Name": "startCooldown",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "0",
            "Attributes": [],
            "Line": 11
          },
          {
            "Name": "spawnedObj",
            "Type": "GameObject",
            "Modifiers": [
              "protected"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 12
          }
        ],
        "Line": 6
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.Networking",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "ConsumableSpawnManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ConsumableSpawn\\ConsumableSpawnManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "GameManager",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ConsumableSpawnManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "AddCollectible",
                "FullName": "GameManager.ConsumableSpawnManager.AddCollectible(GameManager.Collectible)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "c",
                    "Type": "Collectible",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<GameManager.Collectible>.Add(GameManager.Collectible)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 16
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "RemoveCollectible",
                "FullName": "GameManager.ConsumableSpawnManager.RemoveCollectible(GameManager.Collectible)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "c",
                    "Type": "Collectible",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Remove",
                    "FullName": "System.Collections.Generic.List<GameManager.Collectible>.Remove(GameManager.Collectible)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "c",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 21
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "CheckIsActive",
                "FullName": "GameManager.ConsumableSpawnManager.CheckIsActive()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RemoveAll",
                    "FullName": "System.Collections.Generic.List<GameManager.Collectible>.RemoveAll(System.Predicate<GameManager.Collectible>)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "item => item.CooldownFinished == true",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 26
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "DoCountdown",
                "FullName": "GameManager.ConsumableSpawnManager.DoCountdown()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DoCooldown",
                    "FullName": "GameManager.Collectible.DoCooldown()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Consumable\\Script\\Collectible.cs",
                    "DefinitionLine": 39,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 31
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 29
              },
              {
                "Name": "FixedUpdate",
                "FullName": "GameManager.ConsumableSpawnManager.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckIsActive",
                    "FullName": "GameManager.ConsumableSpawnManager.CheckIsActive()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ConsumableSpawn\\ConsumableSpawnManager.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 37
                  },
                  {
                    "Name": "DoCountdown",
                    "FullName": "GameManager.ConsumableSpawnManager.DoCountdown()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ConsumableSpawn\\ConsumableSpawnManager.cs",
                    "DefinitionLine": 29,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 42
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "timer",
                      "Type": "float",
                      "Assignment": "interval",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "interval",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "FieldReference",
                      "AssignedTo": "timer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 34
              }
            ],
            "Fields": [
              {
                "Name": "interval",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "1",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "collectibles",
                "Type": "List<Collectible>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new List<Collectible>()",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "timer",
                "Type": "float",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "System.Linq",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "LightIntensity",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\MapScript\\LightIntensity.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "LightIntensity",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Awake",
            "FullName": "LightIntensity.Awake()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Light>()",
                "ReturnType": "Light",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 20
              },
              {
                "Name": "Euler",
                "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                "ReturnType": "Quaternion",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "_rotationAngle",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  }
                ],
                "Line": 24
              },
              {
                "Name": "Euler",
                "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                "ReturnType": "Quaternion",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "_initialRotation",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  }
                ],
                "Line": 25
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "_thisLight",
                  "Type": "UnityEngine.Light",
                  "Assignment": "GetComponent<Light>()",
                  "Kind": "Assignment",
                  "AssignmentLine": 19,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "_thisLight.intensity",
                  "Type": "float",
                  "Assignment": "_initialIntensity",
                  "Kind": "Assignment",
                  "AssignmentLine": 20,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "_initialRotation",
                  "Type": "float",
                  "Assignment": "0",
                  "Kind": "Assignment",
                  "AssignmentLine": 21,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rotate",
                  "Type": "float",
                  "Assignment": "_initialRotation",
                  "Kind": "Assignment",
                  "AssignmentLine": 22,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "_rotationAngle",
                  "Type": "float",
                  "Assignment": "Quaternion.Euler(_rotationAngle, 0, 0).x",
                  "Kind": "Assignment",
                  "AssignmentLine": 23,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "_thisLight.transform.localRotation",
                  "Type": "UnityEngine.Quaternion",
                  "Assignment": "Quaternion.Euler(_initialRotation, 0, 0)",
                  "Kind": "Assignment",
                  "AssignmentLine": 24,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "GetComponent<Light>()",
                  "Type": "UnityEngine.Light",
                  "Kind": "Use",
                  "UseLine": 19,
                  "UseKind": "Invocation",
                  "AssignedTo": "_thisLight",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "_initialIntensity",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 20,
                  "UseKind": "FieldReference",
                  "AssignedTo": "_thisLight.intensity",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 21,
                  "UseKind": "Literal",
                  "AssignedTo": "_initialRotation",
                  "Value": "0",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "_initialRotation",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 22,
                  "UseKind": "FieldReference",
                  "AssignedTo": "rotate",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Quaternion.Euler(_rotationAngle, 0, 0).x",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 23,
                  "UseKind": "FieldReference",
                  "AssignedTo": "_rotationAngle",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Quaternion.Euler(_initialRotation, 0, 0)",
                  "Type": "UnityEngine.Quaternion",
                  "Kind": "Use",
                  "UseLine": 24,
                  "UseKind": "Invocation",
                  "AssignedTo": "_thisLight.transform.localRotation",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 18
          },
          {
            "Name": "FixedUpdate",
            "FullName": "LightIntensity.FixedUpdate()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "ChangeLight",
                "FullName": "LightIntensity.ChangeLight()",
                "ReturnType": "Void",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\MapScript\\LightIntensity.cs",
                "DefinitionLine": 33,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [],
                "Line": 30
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 28
          },
          {
            "Name": "ChangeLight",
            "FullName": "LightIntensity.ChangeLight()",
            "Modifiers": [
              "protected"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "Euler",
                "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                "ReturnType": "Quaternion",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "rotate",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  }
                ],
                "Line": 51
              },
              {
                "Name": "Euler",
                "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                "ReturnType": "Quaternion",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "rotate",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  }
                ],
                "Line": 57
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "_thisLight.intensity",
                  "Type": "float",
                  "Assignment": "0.1f",
                  "Kind": "Assignment",
                  "AssignmentLine": 36,
                  "AssignmentKind": "AddAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "intensityUp",
                  "Type": "bool",
                  "Assignment": "false",
                  "Kind": "Assignment",
                  "AssignmentLine": 37,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "_thisLight.intensity",
                  "Type": "float",
                  "Assignment": "0.1f",
                  "Kind": "Assignment",
                  "AssignmentLine": 41,
                  "AssignmentKind": "SubtractAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "intensityUp",
                  "Type": "bool",
                  "Assignment": "true",
                  "Kind": "Assignment",
                  "AssignmentLine": 42,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rotate",
                  "Type": "float",
                  "Assignment": "_rotationRate",
                  "Kind": "Assignment",
                  "AssignmentLine": 49,
                  "AssignmentKind": "AddAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "_thisLight.transform.localRotation",
                  "Type": "UnityEngine.Quaternion",
                  "Assignment": "Quaternion.Euler(rotate, 0, 0)",
                  "Kind": "Assignment",
                  "AssignmentLine": 50,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rotateForward",
                  "Type": "bool",
                  "Assignment": "false",
                  "Kind": "Assignment",
                  "AssignmentLine": 51,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rotate",
                  "Type": "float",
                  "Assignment": "_rotationRate",
                  "Kind": "Assignment",
                  "AssignmentLine": 55,
                  "AssignmentKind": "SubtractAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "_thisLight.transform.localRotation",
                  "Type": "UnityEngine.Quaternion",
                  "Assignment": "Quaternion.Euler(rotate, 0, 0)",
                  "Kind": "Assignment",
                  "AssignmentLine": 56,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "rotateForward",
                  "Type": "bool",
                  "Assignment": "true",
                  "Kind": "Assignment",
                  "AssignmentLine": 57,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 36,
                  "UseKind": "Literal",
                  "AssignedTo": "_thisLight.intensity",
                  "Value": "0.1f",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 37,
                  "UseKind": "Literal",
                  "AssignedTo": "intensityUp",
                  "Value": "false",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 41,
                  "UseKind": "Literal",
                  "AssignedTo": "_thisLight.intensity",
                  "Value": "0.1f",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 42,
                  "UseKind": "Literal",
                  "AssignedTo": "intensityUp",
                  "Value": "true",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "_rotationRate",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 49,
                  "UseKind": "FieldReference",
                  "AssignedTo": "rotate",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Quaternion.Euler(rotate, 0, 0)",
                  "Type": "UnityEngine.Quaternion",
                  "Kind": "Use",
                  "UseLine": 50,
                  "UseKind": "Invocation",
                  "AssignedTo": "_thisLight.transform.localRotation",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 51,
                  "UseKind": "Literal",
                  "AssignedTo": "rotateForward",
                  "Value": "false",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "_rotationRate",
                  "Type": "float",
                  "Kind": "Use",
                  "UseLine": 55,
                  "UseKind": "FieldReference",
                  "AssignedTo": "rotate",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "Quaternion.Euler(rotate, 0, 0)",
                  "Type": "UnityEngine.Quaternion",
                  "Kind": "Use",
                  "UseLine": 56,
                  "UseKind": "Invocation",
                  "AssignedTo": "_thisLight.transform.localRotation",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 57,
                  "UseKind": "Literal",
                  "AssignedTo": "rotateForward",
                  "Value": "true",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 33
          }
        ],
        "Fields": [
          {
            "Name": "_initialIntensity",
            "Type": "int",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "1",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 7
          },
          {
            "Name": "_finalIntensity",
            "Type": "int",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "4",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 8
          },
          {
            "Name": "_isRotating",
            "Type": "bool",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "false",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 9
          },
          {
            "Name": "_rotationAngle",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "300.0f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 10
          },
          {
            "Name": "_rotationRate",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "1.0f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 11
          },
          {
            "Name": "_initialRotation",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "100.0f",
            "Attributes": [
              "[SerializeField]"
            ],
            "Line": 12
          },
          {
            "Name": "_thisLight",
            "Type": "Light",
            "Modifiers": [
              "protected"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 13
          },
          {
            "Name": "intensityUp",
            "Type": "bool",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "true",
            "Attributes": [],
            "Line": 14
          },
          {
            "Name": "rotateForward",
            "Type": "bool",
            "Modifiers": [
              "protected"
            ],
            "Assignment": "true",
            "Attributes": [],
            "Line": 15
          },
          {
            "Name": "rotate",
            "Type": "float",
            "Modifiers": [
              "protected"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 16
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "ScoreTableManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ScoreTableManager",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "ScoreTableState",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 22
              },
              {
                "Name": "List",
                "Type": "List<ScoreEntry>",
                "Modifiers": [
                  "public"
                ],
                "Line": 136
              }
            ],
            "Methods": [
              {
                "Name": "FixedUpdate",
                "FullName": "Character.ScoreTableManager.FixedUpdate()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "UpdateAllEntries",
                    "FullName": "Character.ScoreTableManager.UpdateAllEntries()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
                    "DefinitionLine": 33,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 30
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              },
              {
                "Name": "UpdateAllEntries",
                "FullName": "Character.ScoreTableManager.UpdateAllEntries()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "UpdateMe",
                    "FullName": "Character.TableEntry.UpdateMe(Character.ScoreTableManager.ScoreEntry)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\TableEntry.cs",
                    "DefinitionLine": 41,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "scores[t.Key]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 35
                  },
                  {
                    "Name": "SaveState",
                    "FullName": "Character.ScoreTableManager.SaveState()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
                    "DefinitionLine": 103,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 36
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 33
              },
              {
                "Name": "MyEntry",
                "FullName": "Character.ScoreTableManager.MyEntry(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "ScoreEntry",
                "Parameters": [
                  {
                    "Name": "playerid",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 39
              },
              {
                "Name": "AddNewPlayer",
                "FullName": "Character.ScoreTableManager.AddNewPlayer(string, int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "playerName",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "playerId",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetString",
                    "FullName": "UnityEngine.PlayerPrefs.GetString(string)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"SCORES\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 47
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<int, Character.ScoreTableManager.ScoreEntry>.Add(int, Character.ScoreTableManager.ScoreEntry)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "playerId",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "s",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 51
                  },
                  {
                    "Name": "CreateEntry",
                    "FullName": "Character.ScoreTableManager.CreateEntry(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
                    "DefinitionLine": 62,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "playerId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  },
                  {
                    "Name": "LoadState",
                    "FullName": "Character.ScoreTableManager.LoadState(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
                    "DefinitionLine": 91,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "jsonString",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "CreateEntry",
                    "FullName": "Character.ScoreTableManager.CreateEntry(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
                    "DefinitionLine": 62,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "s.playerid",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 57
                  },
                  {
                    "Name": "SaveState",
                    "FullName": "Character.ScoreTableManager.SaveState()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\ScoreTableManager.cs",
                    "DefinitionLine": 103,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 59
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "jsonString",
                      "Type": "string",
                      "Assignment": "PlayerPrefs.GetString(\"SCORES\")",
                      "Kind": "Definition",
                      "DefinitionLine": 46
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s",
                      "Type": "ScoreEntry",
                      "Assignment": "new ScoreEntry(0, 0, playerId, playerName)",
                      "Kind": "Definition",
                      "DefinitionLine": 49
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 45
              },
              {
                "Name": "CreateEntry",
                "FullName": "Character.ScoreTableManager.CreateEntry(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "playerId",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Instantiate",
                    "FullName": "UnityEngine.Object.Instantiate<UnityEngine.Transform>(UnityEngine.Transform, UnityEngine.Transform)",
                    "ReturnType": "Transform",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "tableEntry",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "entriesContainer",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Character.TableEntry>()",
                    "ReturnType": "TableEntry",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 65
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 69
                  },
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<int, Character.TableEntry>.ContainsKey(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "playerId",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 70
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<int, Character.TableEntry>.Add(int, Character.TableEntry)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "playerId",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "newTableEntry",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 71
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "newEntry",
                      "Type": "Transform",
                      "Assignment": "Instantiate(tableEntry, entriesContainer)",
                      "Kind": "Definition",
                      "DefinitionLine": 63
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newTableEntry",
                      "Type": "TableEntry",
                      "Assignment": "newEntry.GetComponent<TableEntry>()",
                      "Kind": "Definition",
                      "DefinitionLine": 64
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newTableEntry.PlayerId",
                      "Type": "int",
                      "Assignment": "playerId",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newTableEntry.Gap",
                      "Type": "int",
                      "Assignment": "currentGap",
                      "Kind": "Assignment",
                      "AssignmentLine": 66,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentGap",
                      "Type": "int",
                      "Assignment": "gapValue",
                      "Kind": "Assignment",
                      "AssignmentLine": 67,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "tableEntries[playerId]",
                      "Type": "Character.TableEntry",
                      "Assignment": "newTableEntry",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "playerId",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "newTableEntry.PlayerId",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentGap",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 66,
                      "UseKind": "FieldReference",
                      "AssignedTo": "newTableEntry.Gap",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "gapValue",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 67,
                      "UseKind": "FieldReference",
                      "AssignedTo": "currentGap",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newTableEntry",
                      "Type": "Character.TableEntry",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": "LocalReference",
                      "AssignedTo": "tableEntries[playerId]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 62
              },
              {
                "Name": "UpdateDamage",
                "FullName": "Character.ScoreTableManager.UpdateDamage(int, int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "id",
                    "Type": "int",
                    "Assignment": null
                  },
                  {
                    "Name": "dmg",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "scores[id].damage",
                      "Type": "int",
                      "Assignment": "dmg",
                      "Kind": "Assignment",
                      "AssignmentLine": 77,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dmg",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 77,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "scores[id].damage",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 74
              },
              {
                "Name": "UpdateKill",
                "FullName": "Character.ScoreTableManager.UpdateKill(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "id",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 83
              },
              {
                "Name": "LoadState",
                "FullName": "Character.ScoreTableManager.LoadState(string)",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "savedScore",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "FromJson",
                    "FullName": "UnityEngine.JsonUtility.FromJson<Character.ScoreTableManager.ScoreEntryList>(string)",
                    "ReturnType": "ScoreEntryList",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.JSONSerializeModule.dll",
                    "Arguments": [
                      {
                        "Argument": "savedScore",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 93
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 97
                  },
                  {
                    "Name": null,
                    "FullName": null,
                    "ReturnType": null,
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": null,
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 98
                  },
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<int, Character.ScoreTableManager.ScoreEntry>.ContainsKey(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "id",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 99
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<int, Character.ScoreTableManager.ScoreEntry>.Add(int, Character.ScoreTableManager.ScoreEntry)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "id",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "e",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 100
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "l",
                      "Type": "ScoreEntryList",
                      "Assignment": "JsonUtility.FromJson<ScoreEntryList>(savedScore)",
                      "Kind": "Definition",
                      "DefinitionLine": 92
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 94
                    }
                  },
                  {
                    "Variable": {
                      "Name": "id",
                      "Type": "int",
                      "Assignment": "scoreList.ElementAt(i).playerid",
                      "Kind": "Definition",
                      "DefinitionLine": 96
                    }
                  },
                  {
                    "Variable": {
                      "Name": "e",
                      "Type": "ScoreEntry",
                      "Assignment": "scoreList.ElementAt(i)",
                      "Kind": "Definition",
                      "DefinitionLine": 97
                    }
                  },
                  {
                    "Variable": {
                      "Name": "scoreList",
                      "Type": "System.Collections.Generic.List<Character.ScoreTableManager.ScoreEntry>",
                      "Assignment": "l.list",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "scores[id]",
                      "Type": "Character.ScoreTableManager.ScoreEntry",
                      "Assignment": "e",
                      "Kind": "Assignment",
                      "AssignmentLine": 98,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "l.list",
                      "Type": "System.Collections.Generic.List<Character.ScoreTableManager.ScoreEntry>",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "FieldReference",
                      "AssignedTo": "scoreList",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "e",
                      "Type": "Character.ScoreTableManager.ScoreEntry",
                      "Kind": "Use",
                      "UseLine": 98,
                      "UseKind": "LocalReference",
                      "AssignedTo": "scores[id]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 91
              },
              {
                "Name": "SaveState",
                "FullName": "Character.ScoreTableManager.SaveState()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Clear",
                    "FullName": "System.Collections.Generic.List<Character.ScoreTableManager.ScoreEntry>.Clear()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 105
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<Character.ScoreTableManager.ScoreEntry>.Add(Character.ScoreTableManager.ScoreEntry)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "k.Value",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 108
                  },
                  {
                    "Name": "ToJson",
                    "FullName": "UnityEngine.JsonUtility.ToJson(object)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.JSONSerializeModule.dll",
                    "Arguments": [
                      {
                        "Argument": "l",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 112
                  },
                  {
                    "Name": "SetString",
                    "FullName": "UnityEngine.PlayerPrefs.SetString(string, string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"SCORES\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "jsonString",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 113
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "l",
                      "Type": "ScoreEntryList",
                      "Assignment": "new ScoreEntryList()",
                      "Kind": "Definition",
                      "DefinitionLine": 109
                    }
                  },
                  {
                    "Variable": {
                      "Name": "jsonString",
                      "Type": "string",
                      "Assignment": "JsonUtility.ToJson(l)",
                      "Kind": "Definition",
                      "DefinitionLine": 111
                    }
                  },
                  {
                    "Variable": {
                      "Name": "l.List",
                      "Type": "System.Collections.Generic.List<Character.ScoreTableManager.ScoreEntry>",
                      "Assignment": "scoreList",
                      "Kind": "Assignment",
                      "AssignmentLine": 110,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "scoreList",
                      "Type": "System.Collections.Generic.List<Character.ScoreTableManager.ScoreEntry>",
                      "Kind": "Use",
                      "UseLine": 110,
                      "UseKind": "FieldReference",
                      "AssignedTo": "l.List",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 103
              }
            ],
            "Fields": [
              {
                "Name": "entriesContainer",
                "Type": "Transform",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "tableEntry",
                "Type": "Transform",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "initialGap",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "0",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "gapValue",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "100",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "tableEntries",
                "Type": "Dictionary<int, TableEntry>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<int, TableEntry>()",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "scores",
                "Type": "Dictionary<int, ScoreEntry>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<int, ScoreEntry>()",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "scoreList",
                "Type": "List<ScoreEntry>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new List<ScoreEntry>()",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "scoreTableJSON",
                "Type": "string",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "currentGap",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "damage",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 118
              },
              {
                "Name": "kills",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 119
              },
              {
                "Name": "playerid",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 120
              },
              {
                "Name": "player",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 121
              },
              {
                "Name": "list",
                "Type": "List<ScoreEntry>",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new List<ScoreEntry>()",
                "Attributes": [],
                "Line": 134
              }
            ],
            "Line": 10
          }
        ],
        "Usings": [],
        "Line": 8
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "System",
        "Line": 4
      },
      {
        "Name": "System.Linq",
        "Line": 5
      },
      {
        "Name": "Newtonsoft.Json",
        "Line": 6
      }
    ],
    "Line": 1
  },
  {
    "Name": "TableEntry",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\TableEntry.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "Character",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "TableEntry",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "PlayerId",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 17
              },
              {
                "Name": "Gap",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Line": 23
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "Character.TableEntry.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "kills.text",
                      "Type": "?",
                      "Assignment": "\"0\"",
                      "Kind": "Assignment",
                      "AssignmentLine": 30,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "damage.text",
                      "Type": "?",
                      "Assignment": "\"0\"",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 30,
                      "UseKind": "Literal",
                      "AssignedTo": "kills.text",
                      "Value": "\"0\"",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "Literal",
                      "AssignedTo": "damage.text",
                      "Value": "\"0\"",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 29
              },
              {
                "Name": "UpdateGap",
                "FullName": "Character.TableEntry.UpdateGap()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "newY",
                      "Type": "float",
                      "Assignment": "transform.position.y - gap",
                      "Kind": "Definition",
                      "DefinitionLine": 36
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector2(transform.position.x, newY)",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector2(transform.position.x, newY)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 35
              },
              {
                "Name": "UpdateMe",
                "FullName": "Character.TableEntry.UpdateMe(Character.ScoreTableManager.ScoreEntry)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "entry",
                    "Type": "ScoreTableManager.ScoreEntry",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "UpdateName",
                    "FullName": "Character.TableEntry.UpdateName(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\TableEntry.cs",
                    "DefinitionLine": 48,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "entry.player",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 43
                  },
                  {
                    "Name": "UpdateKills",
                    "FullName": "Character.TableEntry.UpdateKills(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\TableEntry.cs",
                    "DefinitionLine": 53,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "entry.kills",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 44
                  },
                  {
                    "Name": "UpdateDamage",
                    "FullName": "Character.TableEntry.UpdateDamage(int)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Script\\ScoreTable\\TableEntry.cs",
                    "DefinitionLine": 58,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "entry.damage",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 45
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 41
              },
              {
                "Name": "UpdateName",
                "FullName": "Character.TableEntry.UpdateName(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "p",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "player.text",
                      "Type": "?",
                      "Assignment": "p",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "player.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 48
              },
              {
                "Name": "UpdateKills",
                "FullName": "Character.TableEntry.UpdateKills(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "k",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ToString",
                    "FullName": "int.ToString()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 55
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "kills.text",
                      "Type": "?",
                      "Assignment": "k.ToString()",
                      "Kind": "Assignment",
                      "AssignmentLine": 54,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "k.ToString()",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 54,
                      "UseKind": "Invocation",
                      "AssignedTo": "kills.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 53
              },
              {
                "Name": "UpdateDamage",
                "FullName": "Character.TableEntry.UpdateDamage(int)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "d",
                    "Type": "int",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ToString",
                    "FullName": "int.ToString()",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 60
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "damage.text",
                      "Type": "?",
                      "Assignment": "d.ToString()",
                      "Kind": "Assignment",
                      "AssignmentLine": 59,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "d.ToString()",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 59,
                      "UseKind": "Invocation",
                      "AssignedTo": "damage.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 58
              }
            ],
            "Fields": [
              {
                "Name": "tableEntry",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "player",
                "Type": "Text",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "kills",
                "Type": "Text",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "damage",
                "Type": "Text",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "playerId",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "gap",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "Camera2DFollow",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\Camera2DFollow.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets._2D",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Camera2DFollow",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets._2D.Camera2DFollow.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_LastTargetPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "target.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OffsetZ",
                      "Type": "float",
                      "Assignment": "(transform.position - target.position).z",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.parent",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_LastTargetPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(transform.position - target.position).z",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_OffsetZ",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "Literal",
                      "AssignedTo": "transform.parent",
                      "Value": "null",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 20
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets._2D.Camera2DFollow.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "xMoveDelta",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  },
                  {
                    "Name": "Sign",
                    "FullName": "UnityEngine.Mathf.Sign(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "xMoveDelta",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "MoveTowards",
                    "FullName": "UnityEngine.Vector3.MoveTowards(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_LookAheadPos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Vector3.zero",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Time.deltaTime*lookAheadReturnSpeed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 42
                  },
                  {
                    "Name": "SmoothDamp",
                    "FullName": "UnityEngine.Vector3.SmoothDamp(UnityEngine.Vector3, UnityEngine.Vector3, ref UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "aheadTargetPos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CurrentVelocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "damping",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "xMoveDelta",
                      "Type": "float",
                      "Assignment": "(target.position - m_LastTargetPosition).x",
                      "Kind": "Definition",
                      "DefinitionLine": 31
                    }
                  },
                  {
                    "Variable": {
                      "Name": "updateLookAheadTarget",
                      "Type": "bool",
                      "Assignment": "Mathf.Abs(xMoveDelta) > lookAheadMoveThreshold",
                      "Kind": "Definition",
                      "DefinitionLine": 33
                    }
                  },
                  {
                    "Variable": {
                      "Name": "aheadTargetPos",
                      "Type": "Vector3",
                      "Assignment": "target.position + m_LookAheadPos + Vector3.forward*m_OffsetZ",
                      "Kind": "Definition",
                      "DefinitionLine": 44
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newPos",
                      "Type": "Vector3",
                      "Assignment": "Vector3.SmoothDamp(transform.position, aheadTargetPos, ref m_CurrentVelocity, damping)",
                      "Kind": "Definition",
                      "DefinitionLine": 45
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LookAheadPos",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "lookAheadFactor*Vector3.right*Mathf.Sign(xMoveDelta)",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LookAheadPos",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.MoveTowards(m_LookAheadPos, Vector3.zero, Time.deltaTime*lookAheadReturnSpeed)",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "newPos",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LastTargetPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "target.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lookAheadFactor*Vector3.right*Mathf.Sign(xMoveDelta)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_LookAheadPos",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "lookAheadFactor*Vector3.right",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 37,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_LookAheadPos",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "lookAheadFactor",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 37,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_LookAheadPos",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "Vector3.right",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 37,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "m_LookAheadPos",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "Mathf.Sign(xMoveDelta)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 37,
                          "UseKind": "Invocation",
                          "AssignedTo": "m_LookAheadPos",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.MoveTowards(m_LookAheadPos, Vector3.zero, Time.deltaTime*lookAheadReturnSpeed)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_LookAheadPos",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newPos",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "LocalReference",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_LastTargetPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 29
              }
            ],
            "Fields": [
              {
                "Name": "target",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 8
              },
              {
                "Name": "damping",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "lookAheadFactor",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "3",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "lookAheadReturnSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.5f",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "lookAheadMoveThreshold",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.1f",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "m_OffsetZ",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "m_LastTargetPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "m_CurrentVelocity",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_LookAheadPos",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "CameraFollow",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\CameraFollow.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets._2D",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CameraFollow",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets._2D.CameraFollow.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindGameObjectWithTag",
                    "FullName": "UnityEngine.GameObject.FindGameObjectWithTag(string)",
                    "ReturnType": "GameObject",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Player\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 22
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Player",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "GameObject.FindGameObjectWithTag(\"Player\").transform",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GameObject.FindGameObjectWithTag(\"Player\").transform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Player",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "CheckXMargin",
                "FullName": "UnityStandardAssets._2D.CameraFollow.CheckXMargin()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "bool",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position.x - m_Player.position.x",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 29
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 26
              },
              {
                "Name": "CheckYMargin",
                "FullName": "UnityStandardAssets._2D.CameraFollow.CheckYMargin()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "bool",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position.y - m_Player.position.y",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 36
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 33
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets._2D.CameraFollow.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "TrackPlayer",
                    "FullName": "UnityStandardAssets._2D.CameraFollow.TrackPlayer()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\CameraFollow.cs",
                    "DefinitionLine": 46,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 42
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 40
              },
              {
                "Name": "TrackPlayer",
                "FullName": "UnityStandardAssets._2D.CameraFollow.TrackPlayer()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckXMargin",
                    "FullName": "UnityStandardAssets._2D.CameraFollow.CheckXMargin()",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\CameraFollow.cs",
                    "DefinitionLine": 26,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 53
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Player.position.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "xSmooth*Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "CheckYMargin",
                    "FullName": "UnityStandardAssets._2D.CameraFollow.CheckYMargin()",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\CameraFollow.cs",
                    "DefinitionLine": 33,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 60
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Player.position.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "ySmooth*Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 63
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "targetX",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "minXAndY.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "maxXAndY.x",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 67
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "targetY",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "minXAndY.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "maxXAndY.y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 68
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "targetX",
                      "Type": "float",
                      "Assignment": "transform.position.x",
                      "Kind": "Definition",
                      "DefinitionLine": 48
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetY",
                      "Type": "float",
                      "Assignment": "transform.position.y",
                      "Kind": "Definition",
                      "DefinitionLine": 49
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetX",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(transform.position.x, m_Player.position.x, xSmooth*Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 55,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetY",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(transform.position.y, m_Player.position.y, ySmooth*Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetX",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(targetX, minXAndY.x, maxXAndY.x)",
                      "Kind": "Assignment",
                      "AssignmentLine": 66,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetY",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(targetY, minXAndY.y, maxXAndY.y)",
                      "Kind": "Assignment",
                      "AssignmentLine": 67,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(targetX, targetY, transform.position.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 70,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(transform.position.x, m_Player.position.x, xSmooth*Time.deltaTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 55,
                      "UseKind": "Invocation",
                      "AssignedTo": "targetX",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(transform.position.y, m_Player.position.y, ySmooth*Time.deltaTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "Invocation",
                      "AssignedTo": "targetY",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(targetX, minXAndY.x, maxXAndY.x)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 66,
                      "UseKind": "Invocation",
                      "AssignedTo": "targetX",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(targetY, minXAndY.y, maxXAndY.y)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 67,
                      "UseKind": "Invocation",
                      "AssignedTo": "targetY",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(targetX, targetY, transform.position.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 70,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              }
            ],
            "Fields": [
              {
                "Name": "xMargin",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "yMargin",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "xSmooth",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "8f",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "ySmooth",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "8f",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "maxXAndY",
                "Type": "Vector2",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "minXAndY",
                "Type": "Vector2",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "m_Player",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "Platformer2DUserControl",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\Platformer2DUserControl.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets._2D",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Platformer2DUserControl",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets._2D.Platformer2DUserControl.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets._2D.PlatformerCharacter2D>()",
                    "ReturnType": "PlatformerCharacter2D",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 16
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Character",
                      "Type": "UnityStandardAssets._2D.PlatformerCharacter2D",
                      "Assignment": "GetComponent<PlatformerCharacter2D>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<PlatformerCharacter2D>()",
                      "Type": "UnityStandardAssets._2D.PlatformerCharacter2D",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Character",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets._2D.Platformer2DUserControl.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetButtonDown",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButtonDown(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 119,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Jump\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 25
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Jump",
                      "Type": "bool",
                      "Assignment": "CrossPlatformInputManager.GetButtonDown(\"Jump\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetButtonDown(\"Jump\")",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Jump",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 20
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets._2D.Platformer2DUserControl.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetKey",
                    "FullName": "UnityEngine.Input.GetKey(UnityEngine.KeyCode)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "KeyCode.LeftControl",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Horizontal\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets._2D.PlatformerCharacter2D.Move(float, bool, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\PlatformerCharacter2D.cs",
                    "DefinitionLine": 53,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "h",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "crouch",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Jump",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 36
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "crouch",
                      "Type": "bool",
                      "Assignment": "Input.GetKey(KeyCode.LeftControl)",
                      "Kind": "Definition",
                      "DefinitionLine": 32
                    }
                  },
                  {
                    "Variable": {
                      "Name": "h",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Kind": "Definition",
                      "DefinitionLine": 33
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Jump",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jump",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              }
            ],
            "Fields": [
              {
                "Name": "m_Character",
                "Type": "PlatformerCharacter2D",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "m_Jump",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlatformerCharacter2D",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\PlatformerCharacter2D.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets._2D",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PlatformerCharacter2D",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets._2D.PlatformerCharacter2D.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Find",
                    "FullName": "UnityEngine.Transform.Find(string)",
                    "ReturnType": "Transform",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"GroundCheck\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 27
                  },
                  {
                    "Name": "Find",
                    "FullName": "UnityEngine.Transform.Find(string)",
                    "ReturnType": "Transform",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"CeilingCheck\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Animator>()",
                    "ReturnType": "Animator",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 29
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody2D>()",
                    "ReturnType": "Rigidbody2D",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 30
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_GroundCheck",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "transform.Find(\"GroundCheck\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CeilingCheck",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "transform.Find(\"CeilingCheck\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 27,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Anim",
                      "Type": "UnityEngine.Animator",
                      "Assignment": "GetComponent<Animator>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 28,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody2D",
                      "Type": "UnityEngine.Rigidbody2D",
                      "Assignment": "GetComponent<Rigidbody2D>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 29,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.Find(\"GroundCheck\")",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_GroundCheck",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.Find(\"CeilingCheck\")",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 27,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CeilingCheck",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Animator>()",
                      "Type": "UnityEngine.Animator",
                      "Kind": "Use",
                      "UseLine": 28,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Anim",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody2D>()",
                      "Type": "UnityEngine.Rigidbody2D",
                      "Kind": "Use",
                      "UseLine": 29,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody2D",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets._2D.PlatformerCharacter2D.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "OverlapCircleAll",
                    "FullName": "UnityEngine.Physics2D.OverlapCircleAll(UnityEngine.Vector2, float, int)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.Physics2DModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_GroundCheck.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "k_GroundedRadius",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_WhatIsGround",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "SetBool",
                    "FullName": "UnityEngine.Animator.SetBool(string, bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Ground\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Grounded",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "SetFloat",
                    "FullName": "UnityEngine.Animator.SetFloat(string, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"vSpeed\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Rigidbody2D.velocity.y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 49
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "colliders",
                      "Type": "Collider2D[]",
                      "Assignment": "Physics2D.OverlapCircleAll(m_GroundCheck.position, k_GroundedRadius, m_WhatIsGround)",
                      "Kind": "Definition",
                      "DefinitionLine": 39
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 40
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Grounded",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Grounded",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Grounded",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Grounded",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 34
              },
              {
                "Name": "Move",
                "FullName": "UnityStandardAssets._2D.PlatformerCharacter2D.Move(float, bool, bool)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "move",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "crouch",
                    "Type": "bool",
                    "Assignment": null
                  },
                  {
                    "Name": "jump",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetBool",
                    "FullName": "UnityEngine.Animator.GetBool(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Crouch\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "OverlapCircle",
                    "FullName": "UnityEngine.Physics2D.OverlapCircle(UnityEngine.Vector2, float, int)",
                    "ReturnType": "Collider2D",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.Physics2DModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CeilingCheck.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "k_CeilingRadius",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_WhatIsGround",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "SetBool",
                    "FullName": "UnityEngine.Animator.SetBool(string, bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Crouch\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "crouch",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 66
                  },
                  {
                    "Name": "SetFloat",
                    "FullName": "UnityEngine.Animator.SetFloat(string, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Speed\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Mathf.Abs(move)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 75
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "move",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 75
                  },
                  {
                    "Name": "Flip",
                    "FullName": "UnityStandardAssets._2D.PlatformerCharacter2D.Flip()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\PlatformerCharacter2D.cs",
                    "DefinitionLine": 104,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 84
                  },
                  {
                    "Name": "Flip",
                    "FullName": "UnityStandardAssets._2D.PlatformerCharacter2D.Flip()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\PlatformerCharacter2D.cs",
                    "DefinitionLine": 104,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 90
                  },
                  {
                    "Name": "GetBool",
                    "FullName": "UnityEngine.Animator.GetBool(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Ground\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 94
                  },
                  {
                    "Name": "SetBool",
                    "FullName": "UnityEngine.Animator.SetBool(string, bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Ground\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 98
                  },
                  {
                    "Name": "AddForce",
                    "FullName": "UnityEngine.Rigidbody2D.AddForce(UnityEngine.Vector2)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.Physics2DModule.dll",
                    "Arguments": [
                      {
                        "Argument": "new Vector2(0f, m_JumpForce)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 99
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "crouch",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 60,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "move",
                      "Type": "float",
                      "Assignment": "(crouch ? move*m_CrouchSpeed : move)",
                      "Kind": "Assignment",
                      "AssignmentLine": 71,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody2D.velocity",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "new Vector2(move*m_MaxSpeed, m_Rigidbody2D.velocity.y)",
                      "Kind": "Assignment",
                      "AssignmentLine": 77,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Grounded",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 96,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 60,
                      "UseKind": "Literal",
                      "AssignedTo": "crouch",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(crouch ? move*m_CrouchSpeed : move)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 71,
                      "UseKind": null,
                      "AssignedTo": "move",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector2(move*m_MaxSpeed, m_Rigidbody2D.velocity.y)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 77,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_Rigidbody2D.velocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 96,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Grounded",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 53
              },
              {
                "Name": "Flip",
                "FullName": "UnityStandardAssets._2D.PlatformerCharacter2D.Flip()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "theScale",
                      "Type": "Vector3",
                      "Assignment": "transform.localScale",
                      "Kind": "Definition",
                      "DefinitionLine": 109
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FacingRight",
                      "Type": "bool",
                      "Assignment": "!m_FacingRight",
                      "Kind": "Assignment",
                      "AssignmentLine": 106,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "theScale.x",
                      "Type": "float",
                      "Assignment": "-1",
                      "Kind": "Assignment",
                      "AssignmentLine": 110,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localScale",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "theScale",
                      "Kind": "Assignment",
                      "AssignmentLine": 111,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "!m_FacingRight",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 106,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "m_FacingRight",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-1",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 110,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "theScale.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "theScale",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 111,
                      "UseKind": "LocalReference",
                      "AssignedTo": "transform.localScale",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 104
              }
            ],
            "Fields": [
              {
                "Name": "m_MaxSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "10f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "m_JumpForce",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "400f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "m_CrouchSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": ".36f",
                "Attributes": [
                  "[Range(0, 1)]",
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "m_AirControl",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "false",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "m_WhatIsGround",
                "Type": "LayerMask",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "m_GroundCheck",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "k_GroundedRadius",
                "Type": "float",
                "Modifiers": [
                  "const"
                ],
                "Assignment": ".2f",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_Grounded",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_CeilingCheck",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "k_CeilingRadius",
                "Type": "float",
                "Modifiers": [
                  "const"
                ],
                "Assignment": ".01f",
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "m_Anim",
                "Type": "Animator",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "m_Rigidbody2D",
                "Type": "Rigidbody2D",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "m_FacingRight",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 22
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "Restarter",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\2D\\Scripts\\Restarter.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets._2D",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Restarter",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnTriggerEnter2D",
                "FullName": "UnityStandardAssets._2D.Restarter.OnTriggerEnter2D(UnityEngine.Collider2D)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "other",
                    "Type": "Collider2D",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "LoadScene",
                    "FullName": "UnityEngine.SceneManagement.SceneManager.LoadScene(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "SceneManager.GetSceneAt(0).name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 13
                  },
                  {
                    "Name": "GetSceneAt",
                    "FullName": "UnityEngine.SceneManagement.SceneManager.GetSceneAt(int)",
                    "ReturnType": "Scene",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 13
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 9
              }
            ],
            "Fields": [],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.SceneManagement",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AbstractTargetFollower",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Cameras",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AbstractTargetFollower",
            "Modifiers": [
              "public",
              "abstract"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Target",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Line": 100
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.Start()",
                "Modifiers": [
                  "protected",
                  "virtual"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindAndTargetPlayer",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FindAndTargetPlayer()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 83,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 29
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 32
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "targetRigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "m_Target.GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Target.GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "Invocation",
                      "AssignedTo": "targetRigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 23
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindAndTargetPlayer",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FindAndTargetPlayer()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 83,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 42
                  },
                  {
                    "Name": "FollowTarget",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FollowTarget(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 80,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Time.deltaTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 36
              },
              {
                "Name": "LateUpdate",
                "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.LateUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindAndTargetPlayer",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FindAndTargetPlayer()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 83,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 57
                  },
                  {
                    "Name": "FollowTarget",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FollowTarget(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 80,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Time.deltaTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 61
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 51
              },
              {
                "Name": "ManualUpdate",
                "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.ManualUpdate()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindAndTargetPlayer",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FindAndTargetPlayer()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 83,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 72
                  },
                  {
                    "Name": "FollowTarget",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FollowTarget(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 80,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Time.deltaTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 76
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 66
              },
              {
                "Name": "FollowTarget",
                "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FollowTarget(float)",
                "Modifiers": [
                  "protected",
                  "abstract"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "deltaTime",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 80
              },
              {
                "Name": "FindAndTargetPlayer",
                "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.FindAndTargetPlayer()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindGameObjectWithTag",
                    "FullName": "UnityEngine.GameObject.FindGameObjectWithTag(string)",
                    "ReturnType": "GameObject",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Player\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 86
                  },
                  {
                    "Name": "SetTarget",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.SetTarget(UnityEngine.Transform)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 94,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "targetObj.transform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 89
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "targetObj",
                      "Type": "var",
                      "Assignment": "GameObject.FindGameObjectWithTag(\"Player\")",
                      "Kind": "Definition",
                      "DefinitionLine": 85
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 83
              },
              {
                "Name": "SetTarget",
                "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.SetTarget(UnityEngine.Transform)",
                "Modifiers": [
                  "public",
                  "virtual"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "newTransform",
                    "Type": "Transform",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Target",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "newTransform",
                      "Kind": "Assignment",
                      "AssignmentLine": 95,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newTransform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 95,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "m_Target",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 94
              }
            ],
            "Fields": [
              {
                "Name": "m_Target",
                "Type": "Transform",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "m_AutoTargetPlayer",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "true",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "m_UpdateType",
                "Type": "UpdateType",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "targetRigidbody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "AutoCam",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AutoCam.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Cameras",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AutoCam",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "PivotBasedCameraRig",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "FollowTarget",
                "FullName": "UnityStandardAssets.Cameras.AutoCam.FollowTarget(float)",
                "Modifiers": [
                  "protected",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "deltaTime",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SmoothDamp",
                    "FullName": "UnityEngine.Mathf.SmoothDamp(float, float, ref float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CurrentTurnAmount",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TurnSpeedVelocityChange",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_SmoothTurnTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "targetForward.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "targetForward.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 63
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Mathf.DeltaAngle(m_LastFlatAngle, currentFlatAngle)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 66
                  },
                  {
                    "Name": "DeltaAngle",
                    "FullName": "UnityEngine.Mathf.DeltaAngle(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_LastFlatAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "currentFlatAngle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 66
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_SpinTurnLimit",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_SpinTurnLimit*0.75f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "targetSpinSpeed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 67
                  },
                  {
                    "Name": "SmoothDamp",
                    "FullName": "UnityEngine.Mathf.SmoothDamp(float, float, ref float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CurrentTurnAmount",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "desiredTurnAmount",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TurnSpeedVelocityChange",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "turnReactSpeed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 71
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Vector3.Lerp(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Target.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "deltaTime*m_MoveSpeed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 88
                  },
                  {
                    "Name": "LookRotation",
                    "FullName": "UnityEngine.Quaternion.LookRotation(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "targetForward",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_RollUp",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 100
                  },
                  {
                    "Name": "Slerp",
                    "FullName": "UnityEngine.Vector3.Slerp(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_RollUp",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "targetUp",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_RollSpeed*deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 103
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Quaternion.Lerp(UnityEngine.Quaternion, UnityEngine.Quaternion, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.rotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rollRotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TurnSpeed*m_CurrentTurnAmount*deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 104
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "targetForward",
                      "Type": "var",
                      "Assignment": "m_Target.forward",
                      "Kind": "Definition",
                      "DefinitionLine": 35
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetUp",
                      "Type": "var",
                      "Assignment": "m_Target.up",
                      "Kind": "Definition",
                      "DefinitionLine": 36
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentFlatAngle",
                      "Type": "var",
                      "Assignment": "Mathf.Atan2(targetForward.x, targetForward.z)*Mathf.Rad2Deg",
                      "Kind": "Definition",
                      "DefinitionLine": 62
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetSpinSpeed",
                      "Type": "var",
                      "Assignment": "Mathf.Abs(Mathf.DeltaAngle(m_LastFlatAngle, currentFlatAngle))/deltaTime",
                      "Kind": "Definition",
                      "DefinitionLine": 65
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredTurnAmount",
                      "Type": "var",
                      "Assignment": "Mathf.InverseLerp(m_SpinTurnLimit, m_SpinTurnLimit*0.75f, targetSpinSpeed)",
                      "Kind": "Definition",
                      "DefinitionLine": 66
                    }
                  },
                  {
                    "Variable": {
                      "Name": "turnReactSpeed",
                      "Type": "var",
                      "Assignment": "(m_CurrentTurnAmount > desiredTurnAmount ? .1f : 1f)",
                      "Kind": "Definition",
                      "DefinitionLine": 67
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rollRotation",
                      "Type": "var",
                      "Assignment": "Quaternion.LookRotation(targetForward, m_RollUp)",
                      "Kind": "Definition",
                      "DefinitionLine": 99
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetForward",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "targetRigidbody.velocity.normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetUp",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.up",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetUp",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.up",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentTurnAmount",
                      "Type": "float",
                      "Assignment": "Mathf.SmoothDamp(m_CurrentTurnAmount, 1, ref m_TurnSpeedVelocityChange, m_SmoothTurnTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentTurnAmount",
                      "Type": "float",
                      "Assignment": "Mathf.SmoothDamp(m_CurrentTurnAmount, desiredTurnAmount,\r\n                                                             ref m_TurnSpeedVelocityChange, turnReactSpeed)",
                      "Kind": "Assignment",
                      "AssignmentLine": 70,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentTurnAmount",
                      "Type": "float",
                      "Assignment": "desiredTurnAmount",
                      "Kind": "Assignment",
                      "AssignmentLine": 76,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentTurnAmount",
                      "Type": "float",
                      "Assignment": "1",
                      "Kind": "Assignment",
                      "AssignmentLine": 81,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LastFlatAngle",
                      "Type": "float",
                      "Assignment": "currentFlatAngle",
                      "Kind": "Assignment",
                      "AssignmentLine": 83,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.Lerp(transform.position, m_Target.position, deltaTime*m_MoveSpeed)",
                      "Kind": "Assignment",
                      "AssignmentLine": 87,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetForward.y",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetForward",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.forward",
                      "Kind": "Assignment",
                      "AssignmentLine": 96,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RollUp",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_RollSpeed > 0 ? Vector3.Slerp(m_RollUp, targetUp, m_RollSpeed*deltaTime) : Vector3.up",
                      "Kind": "Assignment",
                      "AssignmentLine": 102,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Lerp(transform.rotation, rollRotation, m_TurnSpeed*m_CurrentTurnAmount*deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 103,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetRigidbody.velocity.normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "targetForward",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.up",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "targetUp",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.up",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "targetUp",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.SmoothDamp(m_CurrentTurnAmount, 1, ref m_TurnSpeedVelocityChange, m_SmoothTurnTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CurrentTurnAmount",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.SmoothDamp(m_CurrentTurnAmount, desiredTurnAmount,\r\n                                                             ref m_TurnSpeedVelocityChange, turnReactSpeed)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 70,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CurrentTurnAmount",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredTurnAmount",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 76,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_CurrentTurnAmount",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 81,
                      "UseKind": "Literal",
                      "AssignedTo": "m_CurrentTurnAmount",
                      "Value": "1",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentFlatAngle",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 83,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_LastFlatAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.Lerp(transform.position, m_Target.position, deltaTime*m_MoveSpeed)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 87,
                      "UseKind": "Invocation",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "Literal",
                      "AssignedTo": "targetForward.y",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.forward",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 96,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "targetForward",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RollSpeed > 0 ? Vector3.Slerp(m_RollUp, targetUp, m_RollSpeed*deltaTime) : Vector3.up",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 102,
                      "UseKind": "Conditional",
                      "AssignedTo": "m_RollUp",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Lerp(transform.rotation, rollRotation, m_TurnSpeed*m_CurrentTurnAmount*deltaTime)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 103,
                      "UseKind": "Invocation",
                      "AssignedTo": "transform.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              }
            ],
            "Fields": [
              {
                "Name": "m_MoveSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "3",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "m_TurnSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "m_RollSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "m_FollowVelocity",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "false",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "m_FollowTilt",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "true",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "m_SpinTurnLimit",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "90",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "m_TargetVelocityLowerLimit",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "4f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "m_SmoothTurnTime",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "m_LastFlatAngle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "m_CurrentTurnAmount",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "m_TurnSpeedVelocityChange",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "m_RollUp",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "Vector3.up",
                "Attributes": [],
                "Line": 24
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 7
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "FreeLookCam",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\FreeLookCam.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Cameras",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "FreeLookCam",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "PivotBasedCameraRig",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Cameras.FreeLookCam.Awake()",
                "Modifiers": [
                  "protected",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Awake",
                    "FullName": "UnityStandardAssets.Cameras.PivotBasedCameraRig.Awake()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\PivotBasedCameraRig.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 33
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "Cursor.lockState",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "m_LockCursor ? CursorLockMode.Locked : CursorLockMode.None",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.visible",
                      "Type": "bool",
                      "Assignment": "!m_LockCursor",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PivotEulers",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Pivot.rotation.eulerAngles",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PivotTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_Pivot.transform.localRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TransformTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "transform.localRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LockCursor ? CursorLockMode.Locked : CursorLockMode.None",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "Conditional",
                      "AssignedTo": "Cursor.lockState",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "!m_LockCursor",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "Cursor.visible",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Pivot.rotation.eulerAngles",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_PivotEulers",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Pivot.transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_PivotTargetRot",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_TransformTargetRot",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 31
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Cameras.FreeLookCam.Update()",
                "Modifiers": [
                  "protected"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "HandleRotationMovement",
                    "FullName": "UnityStandardAssets.Cameras.FreeLookCam.HandleRotationMovement()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\FreeLookCam.cs",
                    "DefinitionLine": 70,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 46
                  },
                  {
                    "Name": "GetMouseButtonUp",
                    "FullName": "UnityEngine.Input.GetMouseButtonUp(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 47
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "Cursor.lockState",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "m_LockCursor ? CursorLockMode.Locked : CursorLockMode.None",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.visible",
                      "Type": "bool",
                      "Assignment": "!m_LockCursor",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LockCursor ? CursorLockMode.Locked : CursorLockMode.None",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Conditional",
                      "AssignedTo": "Cursor.lockState",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "!m_LockCursor",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "Cursor.visible",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 44
              },
              {
                "Name": "OnDisable",
                "FullName": "UnityStandardAssets.Cameras.FreeLookCam.OnDisable()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "Cursor.lockState",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "CursorLockMode.None",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.visible",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 57,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CursorLockMode.None",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "FieldReference",
                      "AssignedTo": "Cursor.lockState",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 57,
                      "UseKind": "Literal",
                      "AssignedTo": "Cursor.visible",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 55
              },
              {
                "Name": "FollowTarget",
                "FullName": "UnityStandardAssets.Cameras.FreeLookCam.FollowTarget(float)",
                "Modifiers": [
                  "protected",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "deltaTime",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Vector3.Lerp(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Target.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "deltaTime*m_MoveSpeed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 66
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.Lerp(transform.position, m_Target.position, deltaTime*m_MoveSpeed)",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.Lerp(transform.position, m_Target.position, deltaTime*m_MoveSpeed)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "Invocation",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 62
              },
              {
                "Name": "HandleRotationMovement",
                "FullName": "UnityStandardAssets.Cameras.FreeLookCam.HandleRotationMovement()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Mouse X\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 76
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Mouse Y\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 77
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_LookAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 83
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-m_TiltMin",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 90
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TiltMax",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-y",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 90
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_TiltAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-m_TiltMin",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_TiltMax",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 97
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_TiltAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_PivotEulers.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_PivotEulers.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 101
                  },
                  {
                    "Name": "Slerp",
                    "FullName": "UnityEngine.Quaternion.Slerp(UnityEngine.Quaternion, UnityEngine.Quaternion, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Pivot.localRotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_PivotTargetRot",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TurnSmoothing * Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 105
                  },
                  {
                    "Name": "Slerp",
                    "FullName": "UnityEngine.Quaternion.Slerp(UnityEngine.Quaternion, UnityEngine.Quaternion, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.localRotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TransformTargetRot",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TurnSmoothing * Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 106
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "x",
                      "Type": "var",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Mouse X\")",
                      "Kind": "Definition",
                      "DefinitionLine": 75
                    }
                  },
                  {
                    "Variable": {
                      "Name": "y",
                      "Type": "var",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Mouse Y\")",
                      "Kind": "Definition",
                      "DefinitionLine": 76
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LookAngle",
                      "Type": "float",
                      "Assignment": "x*m_TurnSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 79,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TransformTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Euler(0f, m_LookAngle, 0f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 82,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TiltAngle",
                      "Type": "float",
                      "Assignment": "y > 0 ? Mathf.Lerp(0, -m_TiltMin, y) : Mathf.Lerp(0, m_TiltMax, -y)",
                      "Kind": "Assignment",
                      "AssignmentLine": 89,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TiltAngle",
                      "Type": "float",
                      "Assignment": "y*m_TurnSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 94,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TiltAngle",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(m_TiltAngle, -m_TiltMin, m_TiltMax)",
                      "Kind": "Assignment",
                      "AssignmentLine": 96,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PivotTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Euler(m_TiltAngle, m_PivotEulers.y , m_PivotEulers.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 100,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Pivot.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Slerp(m_Pivot.localRotation, m_PivotTargetRot, m_TurnSmoothing * Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 104,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Slerp(transform.localRotation, m_TransformTargetRot, m_TurnSmoothing * Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 105,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Pivot.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_PivotTargetRot",
                      "Kind": "Assignment",
                      "AssignmentLine": 109,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_TransformTargetRot",
                      "Kind": "Assignment",
                      "AssignmentLine": 110,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "x*m_TurnSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 79,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_LookAngle",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "x",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 79,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_LookAngle",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_TurnSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 79,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_LookAngle",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler(0f, m_LookAngle, 0f)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 82,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_TransformTargetRot",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "y > 0 ? Mathf.Lerp(0, -m_TiltMin, y) : Mathf.Lerp(0, m_TiltMax, -y)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 89,
                      "UseKind": "Conditional",
                      "AssignedTo": "m_TiltAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "y*m_TurnSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 94,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_TiltAngle",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 94,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_TiltAngle",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_TurnSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 94,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_TiltAngle",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(m_TiltAngle, -m_TiltMin, m_TiltMax)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 96,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_TiltAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler(m_TiltAngle, m_PivotEulers.y , m_PivotEulers.z)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 100,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_PivotTargetRot",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Slerp(m_Pivot.localRotation, m_PivotTargetRot, m_TurnSmoothing * Time.deltaTime)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 104,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Pivot.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Slerp(transform.localRotation, m_TransformTargetRot, m_TurnSmoothing * Time.deltaTime)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 105,
                      "UseKind": "Invocation",
                      "AssignedTo": "transform.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PivotTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 109,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_Pivot.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TransformTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 110,
                      "UseKind": "FieldReference",
                      "AssignedTo": "transform.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 70
              }
            ],
            "Fields": [
              {
                "Name": "m_MoveSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "m_TurnSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1.5f",
                "Attributes": [
                  "[Range(0f, 10f)]",
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "m_TurnSmoothing",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "m_TiltMax",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "75f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "m_TiltMin",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "45f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "m_LockCursor",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "false",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 21
              },
              {
                "Name": "m_VerticalAutoReturn",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "false",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 22
              },
              {
                "Name": "m_LookAngle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "m_TiltAngle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "k_LookDistance",
                "Type": "float",
                "Modifiers": [
                  "private",
                  "const"
                ],
                "Assignment": "100f",
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "m_PivotEulers",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "m_PivotTargetRot",
                "Type": "Quaternion",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "m_TransformTargetRot",
                "Type": "Quaternion",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 29
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "HandHeldCam",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\HandHeldCam.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Cameras",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "HandHeldCam",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "LookatTarget",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "FollowTarget",
                "FullName": "UnityStandardAssets.Cameras.HandHeldCam.FollowTarget(float)",
                "Modifiers": [
                  "protected",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "deltaTime",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "FollowTarget",
                    "FullName": "UnityStandardAssets.Cameras.LookatTarget.FollowTarget(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\LookatTarget.cs",
                    "DefinitionLine": 40,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "deltaTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 16
                  },
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Time.time*m_SwaySpeed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 18
                  },
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "(Time.time*m_SwaySpeed) + 100",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 19
                  },
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Time.time*m_SwaySpeed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 24
                  },
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "(Time.time*m_SwaySpeed) + 100",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "Rotate",
                    "FullName": "UnityEngine.Transform.Rotate(float, float, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "bx + tx",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "by + ty",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 30
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "bx",
                      "Type": "float",
                      "Assignment": "(Mathf.PerlinNoise(0, Time.time*m_SwaySpeed) - 0.5f)",
                      "Kind": "Definition",
                      "DefinitionLine": 17
                    }
                  },
                  {
                    "Variable": {
                      "Name": "by",
                      "Type": "float",
                      "Assignment": "(Mathf.PerlinNoise(0, (Time.time*m_SwaySpeed) + 100)) - 0.5f",
                      "Kind": "Definition",
                      "DefinitionLine": 18
                    }
                  },
                  {
                    "Variable": {
                      "Name": "tx",
                      "Type": "float",
                      "Assignment": "(Mathf.PerlinNoise(0, Time.time*m_SwaySpeed) - 0.5f) + m_TrackingBias",
                      "Kind": "Definition",
                      "DefinitionLine": 23
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ty",
                      "Type": "float",
                      "Assignment": "((Mathf.PerlinNoise(0, (Time.time*m_SwaySpeed) + 100)) - 0.5f) + m_TrackingBias",
                      "Kind": "Definition",
                      "DefinitionLine": 24
                    }
                  },
                  {
                    "Variable": {
                      "Name": "bx",
                      "Type": "float",
                      "Assignment": "m_BaseSwayAmount",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "by",
                      "Type": "float",
                      "Assignment": "m_BaseSwayAmount",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "tx",
                      "Type": "float",
                      "Assignment": "-m_TrackingSwayAmount*m_FollowVelocity.x",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ty",
                      "Type": "float",
                      "Assignment": "m_TrackingSwayAmount*m_FollowVelocity.y",
                      "Kind": "Assignment",
                      "AssignmentLine": 27,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_BaseSwayAmount",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "FieldReference",
                      "AssignedTo": "bx",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_BaseSwayAmount",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "FieldReference",
                      "AssignedTo": "by",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-m_TrackingSwayAmount*m_FollowVelocity.x",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "tx",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "-m_TrackingSwayAmount",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 26,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "tx",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_FollowVelocity.x",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 26,
                          "UseKind": "FieldReference",
                          "AssignedTo": "tx",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TrackingSwayAmount*m_FollowVelocity.y",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 27,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "ty",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_TrackingSwayAmount",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 27,
                          "UseKind": "FieldReference",
                          "AssignedTo": "ty",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_FollowVelocity.y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 27,
                          "UseKind": "FieldReference",
                          "AssignedTo": "ty",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              }
            ],
            "Fields": [
              {
                "Name": "m_SwaySpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": ".5f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 8
              },
              {
                "Name": "m_BaseSwayAmount",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": ".5f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "m_TrackingSwayAmount",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": ".5f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "m_TrackingBias",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0",
                "Attributes": [
                  "[Range(-1, 1)]",
                  "[SerializeField]"
                ],
                "Line": 11
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "LookatTarget",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\LookatTarget.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Cameras",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "LookatTarget",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "AbstractTargetFollower",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Cameras.LookatTarget.Start()",
                "Modifiers": [
                  "protected",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Start",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.Start()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 23,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 35
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_OriginalRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "transform.localRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 33
              },
              {
                "Name": "FollowTarget",
                "FullName": "UnityStandardAssets.Cameras.LookatTarget.FollowTarget(float)",
                "Modifiers": [
                  "protected",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "deltaTime",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "InverseTransformPoint",
                    "FullName": "UnityEngine.Transform.InverseTransformPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Target.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "localTarget.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localTarget.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 47
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "yAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-m_RotationRange.y*0.5f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_RotationRange.y*0.5f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 49
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "yAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 50
                  },
                  {
                    "Name": "InverseTransformPoint",
                    "FullName": "UnityEngine.Transform.InverseTransformPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Target.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "localTarget.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localTarget.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "xAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-m_RotationRange.x*0.5f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_RotationRange.x*0.5f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 55
                  },
                  {
                    "Name": "DeltaAngle",
                    "FullName": "UnityEngine.Mathf.DeltaAngle(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_FollowAngles.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "xAngle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "DeltaAngle",
                    "FullName": "UnityEngine.Mathf.DeltaAngle(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_FollowAngles.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "yAngle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 57
                  },
                  {
                    "Name": "SmoothDamp",
                    "FullName": "UnityEngine.Vector3.SmoothDamp(UnityEngine.Vector3, UnityEngine.Vector3, ref UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_FollowAngles",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "targetAngles",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_FollowVelocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_FollowSpeed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 60
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "-m_FollowAngles.x",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_FollowAngles.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "localTarget",
                      "Type": "Vector3",
                      "Assignment": "transform.InverseTransformPoint(m_Target.position)",
                      "Kind": "Definition",
                      "DefinitionLine": 45
                    }
                  },
                  {
                    "Variable": {
                      "Name": "yAngle",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(localTarget.x, localTarget.z)*Mathf.Rad2Deg",
                      "Kind": "Definition",
                      "DefinitionLine": 46
                    }
                  },
                  {
                    "Variable": {
                      "Name": "xAngle",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(localTarget.y, localTarget.z)*Mathf.Rad2Deg",
                      "Kind": "Definition",
                      "DefinitionLine": 53
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetAngles",
                      "Type": "var",
                      "Assignment": "new Vector3(m_FollowAngles.x + Mathf.DeltaAngle(m_FollowAngles.x, xAngle),\r\n                                           m_FollowAngles.y + Mathf.DeltaAngle(m_FollowAngles.y, yAngle))",
                      "Kind": "Definition",
                      "DefinitionLine": 55
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_OriginalRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 42,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "yAngle",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(yAngle, -m_RotationRange.y*0.5f, m_RotationRange.y*0.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_OriginalRotation*Quaternion.Euler(0, yAngle, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "localTarget",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.InverseTransformPoint(m_Target.position)",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "xAngle",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(xAngle, -m_RotationRange.x*0.5f, m_RotationRange.x*0.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 54,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FollowAngles",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.SmoothDamp(m_FollowAngles, targetAngles, ref m_FollowVelocity, m_FollowSpeed)",
                      "Kind": "Assignment",
                      "AssignmentLine": 59,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_OriginalRotation*Quaternion.Euler(-m_FollowAngles.x, m_FollowAngles.y, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 42,
                      "UseKind": "FieldReference",
                      "AssignedTo": "transform.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(yAngle, -m_RotationRange.y*0.5f, m_RotationRange.y*0.5f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Invocation",
                      "AssignedTo": "yAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalRotation*Quaternion.Euler(0, yAngle, 0)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "transform.localRotation",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_OriginalRotation",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 49,
                          "UseKind": "FieldReference",
                          "AssignedTo": "transform.localRotation",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "Quaternion.Euler(0, yAngle, 0)",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 49,
                          "UseKind": "Invocation",
                          "AssignedTo": "transform.localRotation",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.InverseTransformPoint(m_Target.position)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "Invocation",
                      "AssignedTo": "localTarget",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(xAngle, -m_RotationRange.x*0.5f, m_RotationRange.x*0.5f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 54,
                      "UseKind": "Invocation",
                      "AssignedTo": "xAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.SmoothDamp(m_FollowAngles, targetAngles, ref m_FollowVelocity, m_FollowSpeed)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 59,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_FollowAngles",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalRotation*Quaternion.Euler(-m_FollowAngles.x, m_FollowAngles.y, 0)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "transform.localRotation",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_OriginalRotation",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 63,
                          "UseKind": "FieldReference",
                          "AssignedTo": "transform.localRotation",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "Quaternion.Euler(-m_FollowAngles.x, m_FollowAngles.y, 0)",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 63,
                          "UseKind": "Invocation",
                          "AssignedTo": "transform.localRotation",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 40
              }
            ],
            "Fields": [
              {
                "Name": "m_RotationRange",
                "Type": "Vector2",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 23
              },
              {
                "Name": "m_FollowSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 24
              },
              {
                "Name": "m_FollowAngles",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "m_OriginalRotation",
                "Type": "Quaternion",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "m_FollowVelocity",
                "Type": "Vector3",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 29
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "PivotBasedCameraRig",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\PivotBasedCameraRig.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Cameras",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PivotBasedCameraRig",
            "Modifiers": [
              "public",
              "abstract"
            ],
            "Inheritance": "AbstractTargetFollower",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Cameras.PivotBasedCameraRig.Awake()",
                "Modifiers": [
                  "protected",
                  "virtual"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponentInChildren",
                    "FullName": "UnityEngine.Component.GetComponentInChildren<UnityEngine.Camera>()",
                    "ReturnType": "Camera",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 24
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Cam",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "GetComponentInChildren<Camera>().transform",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Pivot",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "m_Cam.parent",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponentInChildren<Camera>().transform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Cam",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Cam.parent",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Pivot",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              }
            ],
            "Fields": [
              {
                "Name": "m_Cam",
                "Type": "Transform",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_Pivot",
                "Type": "Transform",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_LastTargetPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "ProtectCameraFromWallClip",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\ProtectCameraFromWallClip.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Cameras",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ProtectCameraFromWallClip",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "protecting",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 14
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Cameras.ProtectCameraFromWallClip.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponentInChildren",
                    "FullName": "UnityEngine.Component.GetComponentInChildren<UnityEngine.Camera>()",
                    "ReturnType": "Camera",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 30
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Cam",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "GetComponentInChildren<Camera>().transform",
                      "Kind": "Assignment",
                      "AssignmentLine": 29,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Pivot",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "m_Cam.parent",
                      "Kind": "Assignment",
                      "AssignmentLine": 30,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalDist",
                      "Type": "float",
                      "Assignment": "m_Cam.localPosition.magnitude",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentDist",
                      "Type": "float",
                      "Assignment": "m_OriginalDist",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RayHitComparer",
                      "Type": "UnityStandardAssets.Cameras.ProtectCameraFromWallClip.RayHitComparer",
                      "Assignment": "new RayHitComparer()",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponentInChildren<Camera>().transform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 29,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Cam",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Cam.parent",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 30,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Pivot",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Cam.localPosition.magnitude",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalDist",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalDist",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_CurrentDist",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new RayHitComparer()",
                      "Type": "UnityStandardAssets.Cameras.ProtectCameraFromWallClip.RayHitComparer",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_RayHitComparer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              },
              {
                "Name": "LateUpdate",
                "FullName": "UnityStandardAssets.Cameras.ProtectCameraFromWallClip.LateUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "OverlapSphere",
                    "FullName": "UnityEngine.Physics.OverlapSphere(UnityEngine.Vector3, float)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Ray.origin",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sphereCastRadius",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 49
                  },
                  {
                    "Name": "CompareTag",
                    "FullName": "UnityEngine.Component.CompareTag(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "dontClipTag",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 58
                  },
                  {
                    "Name": "RaycastAll",
                    "FullName": "UnityEngine.Physics.RaycastAll(UnityEngine.Ray, float)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Ray",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_OriginalDist - sphereCastRadius",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 71
                  },
                  {
                    "Name": "SphereCastAll",
                    "FullName": "UnityEngine.Physics.SphereCastAll(UnityEngine.Ray, float, float)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Ray",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sphereCastRadius",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_OriginalDist + sphereCastRadius",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 76
                  },
                  {
                    "Name": "Sort",
                    "FullName": "System.Array.Sort(System.Array, System.Collections.IComparer)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "m_Hits",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_RayHitComparer",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 80
                  },
                  {
                    "Name": "CompareTag",
                    "FullName": "UnityEngine.Component.CompareTag(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "dontClipTag",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 91
                  },
                  {
                    "Name": "InverseTransformPoint",
                    "FullName": "UnityEngine.Transform.InverseTransformPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Hits[i].point",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 95
                  },
                  {
                    "Name": "DrawRay",
                    "FullName": "UnityEngine.Debug.DrawRay(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Ray.origin",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-m_Pivot.forward*(targetDist + sphereCastRadius)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Color.red",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 103
                  },
                  {
                    "Name": "SmoothDamp",
                    "FullName": "UnityEngine.Mathf.SmoothDamp(float, float, ref float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CurrentDist",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "targetDist",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_MoveVelocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CurrentDist > targetDist ? clipMoveTime : returnTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 108
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CurrentDist",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "closestDistance",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_OriginalDist",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 110
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "targetDist",
                      "Type": "float",
                      "Assignment": "m_OriginalDist",
                      "Kind": "Definition",
                      "DefinitionLine": 42
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cols",
                      "Type": "var",
                      "Assignment": "Physics.OverlapSphere(m_Ray.origin, sphereCastRadius)",
                      "Kind": "Definition",
                      "DefinitionLine": 48
                    }
                  },
                  {
                    "Variable": {
                      "Name": "initialIntersect",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Definition",
                      "DefinitionLine": 50
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hitSomething",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Definition",
                      "DefinitionLine": 51
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 54
                    }
                  },
                  {
                    "Variable": {
                      "Name": "nearest",
                      "Type": "float",
                      "Assignment": "Mathf.Infinity",
                      "Kind": "Definition",
                      "DefinitionLine": 82
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 85
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Ray.origin",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Pivot.position + m_Pivot.forward*sphereCastRadius",
                      "Kind": "Assignment",
                      "AssignmentLine": 44,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Ray.direction",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "-m_Pivot.forward",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "initialIntersect",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 59,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Ray.origin",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Pivot.forward*sphereCastRadius",
                      "Kind": "Assignment",
                      "AssignmentLine": 67,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Hits",
                      "Type": "UnityEngine.RaycastHit[]",
                      "Assignment": "Physics.RaycastAll(m_Ray, m_OriginalDist - sphereCastRadius)",
                      "Kind": "Assignment",
                      "AssignmentLine": 70,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Hits",
                      "Type": "UnityEngine.RaycastHit[]",
                      "Assignment": "Physics.SphereCastAll(m_Ray, sphereCastRadius, m_OriginalDist + sphereCastRadius)",
                      "Kind": "Assignment",
                      "AssignmentLine": 75,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "nearest",
                      "Type": "float",
                      "Assignment": "m_Hits[i].distance",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetDist",
                      "Type": "float",
                      "Assignment": "-m_Pivot.InverseTransformPoint(m_Hits[i].point).z",
                      "Kind": "Assignment",
                      "AssignmentLine": 94,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hitSomething",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 95,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "protecting",
                      "Type": "bool",
                      "Assignment": "hitSomething",
                      "Kind": "Assignment",
                      "AssignmentLine": 106,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentDist",
                      "Type": "float",
                      "Assignment": "Mathf.SmoothDamp(m_CurrentDist, targetDist, ref m_MoveVelocity,\r\n                                           m_CurrentDist > targetDist ? clipMoveTime : returnTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 107,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentDist",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(m_CurrentDist, closestDistance, m_OriginalDist)",
                      "Kind": "Assignment",
                      "AssignmentLine": 109,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Cam.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "-Vector3.forward*m_CurrentDist",
                      "Kind": "Assignment",
                      "AssignmentLine": 110,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Pivot.position + m_Pivot.forward*sphereCastRadius",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Ray.origin",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Pivot.position",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 44,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Ray.origin",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_Pivot.forward*sphereCastRadius",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 44,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_Ray.origin",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_Pivot.forward",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 44,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "m_Ray.origin",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "sphereCastRadius",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 44,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_Ray.origin",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-m_Pivot.forward",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "m_Ray.direction",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 59,
                      "UseKind": "Literal",
                      "AssignedTo": "initialIntersect",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Pivot.forward*sphereCastRadius",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 67,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Ray.origin",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Pivot.forward",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 67,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Ray.origin",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "sphereCastRadius",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 67,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_Ray.origin",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Physics.RaycastAll(m_Ray, m_OriginalDist - sphereCastRadius)",
                      "Type": "UnityEngine.RaycastHit[]",
                      "Kind": "Use",
                      "UseLine": 70,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Hits",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Physics.SphereCastAll(m_Ray, sphereCastRadius, m_OriginalDist + sphereCastRadius)",
                      "Type": "UnityEngine.RaycastHit[]",
                      "Kind": "Use",
                      "UseLine": 75,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Hits",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Hits[i].distance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "nearest",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-m_Pivot.InverseTransformPoint(m_Hits[i].point).z",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 94,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "targetDist",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 95,
                      "UseKind": "Literal",
                      "AssignedTo": "hitSomething",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hitSomething",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 106,
                      "UseKind": "LocalReference",
                      "AssignedTo": "protecting",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.SmoothDamp(m_CurrentDist, targetDist, ref m_MoveVelocity,\r\n                                           m_CurrentDist > targetDist ? clipMoveTime : returnTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 107,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CurrentDist",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(m_CurrentDist, closestDistance, m_OriginalDist)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 109,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CurrentDist",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-Vector3.forward*m_CurrentDist",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 110,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Cam.localPosition",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "-Vector3.forward",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 110,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "m_Cam.localPosition",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_CurrentDist",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 110,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_Cam.localPosition",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 40
              },
              {
                "Name": "Compare",
                "FullName": "UnityStandardAssets.Cameras.ProtectCameraFromWallClip.RayHitComparer.Compare(object, object)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "int",
                "Parameters": [
                  {
                    "Name": "x",
                    "Type": "object",
                    "Assignment": null
                  },
                  {
                    "Name": "y",
                    "Type": "object",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "CompareTo",
                    "FullName": "float.CompareTo(float)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "((RaycastHit) y).distance",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 120
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 118
              }
            ],
            "Fields": [
              {
                "Name": "clipMoveTime",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.05f",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "returnTime",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.4f",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "sphereCastRadius",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.1f",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "visualiseInEditor",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "closestDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.5f",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "dontClipTag",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "\"Player\"",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "m_Cam",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_Pivot",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "m_OriginalDist",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "m_MoveVelocity",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "m_CurrentDist",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "m_Ray",
                "Type": "Ray",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new Ray()",
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "m_Hits",
                "Type": "RaycastHit[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "m_RayHitComparer",
                "Type": "RayHitComparer",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "TargetFieldOfView",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\TargetFieldOfView.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Cameras",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "TargetFieldOfView",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "AbstractTargetFollower",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Cameras.TargetFieldOfView.Start()",
                "Modifiers": [
                  "protected",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Start",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.Start()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 23,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 26
                  },
                  {
                    "Name": "MaxBoundsExtent",
                    "FullName": "UnityStandardAssets.Cameras.TargetFieldOfView.MaxBoundsExtent(UnityEngine.Transform, bool)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\TargetFieldOfView.cs",
                    "DefinitionLine": 51,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_Target",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_IncludeEffectsInSize",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 27
                  },
                  {
                    "Name": "GetComponentInChildren",
                    "FullName": "UnityEngine.Component.GetComponentInChildren<UnityEngine.Camera>()",
                    "ReturnType": "Camera",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 30
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_BoundSize",
                      "Type": "float",
                      "Assignment": "MaxBoundsExtent(m_Target, m_IncludeEffectsInSize)",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Cam",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "GetComponentInChildren<Camera>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 29,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "MaxBoundsExtent(m_Target, m_IncludeEffectsInSize)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_BoundSize",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponentInChildren<Camera>()",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 29,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Cam",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "FollowTarget",
                "FullName": "UnityStandardAssets.Cameras.TargetFieldOfView.FollowTarget(float)",
                "Modifiers": [
                  "protected",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "deltaTime",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_BoundSize",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "dist",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "SmoothDamp",
                    "FullName": "UnityEngine.Mathf.SmoothDamp(float, float, ref float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Cam.fieldOfView",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "requiredFOV",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_FovAdjustVelocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_FovAdjustTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "dist",
                      "Type": "float",
                      "Assignment": "(m_Target.position - transform.position).magnitude",
                      "Kind": "Definition",
                      "DefinitionLine": 36
                    }
                  },
                  {
                    "Variable": {
                      "Name": "requiredFOV",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(m_BoundSize, dist)*Mathf.Rad2Deg*m_ZoomAmountMultiplier",
                      "Kind": "Definition",
                      "DefinitionLine": 37
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Cam.fieldOfView",
                      "Type": "float",
                      "Assignment": "Mathf.SmoothDamp(m_Cam.fieldOfView, requiredFOV, ref m_FovAdjustVelocity, m_FovAdjustTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.SmoothDamp(m_Cam.fieldOfView, requiredFOV, ref m_FovAdjustVelocity, m_FovAdjustTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Cam.fieldOfView",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 34
              },
              {
                "Name": "SetTarget",
                "FullName": "UnityStandardAssets.Cameras.TargetFieldOfView.SetTarget(UnityEngine.Transform)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "newTransform",
                    "Type": "Transform",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetTarget",
                    "FullName": "UnityStandardAssets.Cameras.AbstractTargetFollower.SetTarget(UnityEngine.Transform)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\AbstractTargetFollower.cs",
                    "DefinitionLine": 94,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "newTransform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "MaxBoundsExtent",
                    "FullName": "UnityStandardAssets.Cameras.TargetFieldOfView.MaxBoundsExtent(UnityEngine.Transform, bool)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Cameras\\Scripts\\TargetFieldOfView.cs",
                    "DefinitionLine": 51,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "newTransform",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_IncludeEffectsInSize",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 47
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_BoundSize",
                      "Type": "float",
                      "Assignment": "MaxBoundsExtent(newTransform, m_IncludeEffectsInSize)",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "MaxBoundsExtent(newTransform, m_IncludeEffectsInSize)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_BoundSize",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 44
              },
              {
                "Name": "MaxBoundsExtent",
                "FullName": "UnityStandardAssets.Cameras.TargetFieldOfView.MaxBoundsExtent(UnityEngine.Transform, bool)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "obj",
                    "Type": "Transform",
                    "Assignment": null
                  },
                  {
                    "Name": "includeEffects",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetComponentsInChildren",
                    "FullName": "UnityEngine.Component.GetComponentsInChildren<UnityEngine.Renderer>()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 56
                  },
                  {
                    "Name": "Encapsulate",
                    "FullName": "UnityEngine.Bounds.Encapsulate(UnityEngine.Bounds)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "r.bounds",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 71
                  },
                  {
                    "Name": "Max",
                    "FullName": "UnityEngine.Mathf.Max(params float[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "bounds.extents.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "bounds.extents.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "bounds.extents.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 75
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "renderers",
                      "Type": "var",
                      "Assignment": "obj.GetComponentsInChildren<Renderer>()",
                      "Kind": "Definition",
                      "DefinitionLine": 55
                    }
                  },
                  {
                    "Variable": {
                      "Name": "bounds",
                      "Type": "Bounds",
                      "Assignment": "new Bounds()",
                      "Kind": "Definition",
                      "DefinitionLine": 57
                    }
                  },
                  {
                    "Variable": {
                      "Name": "initBounds",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Definition",
                      "DefinitionLine": 58
                    }
                  },
                  {
                    "Variable": {
                      "Name": "max",
                      "Type": "float",
                      "Assignment": "Mathf.Max(bounds.extents.x, bounds.extents.y, bounds.extents.z)",
                      "Kind": "Definition",
                      "DefinitionLine": 74
                    }
                  },
                  {
                    "Variable": {
                      "Name": "initBounds",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "bounds",
                      "Type": "UnityEngine.Bounds",
                      "Assignment": "r.bounds",
                      "Kind": "Assignment",
                      "AssignmentLine": 66,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "Literal",
                      "AssignedTo": "initBounds",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "r.bounds",
                      "Type": "UnityEngine.Bounds",
                      "Kind": "Use",
                      "UseLine": 66,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "bounds",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 51
              }
            ],
            "Fields": [
              {
                "Name": "m_FovAdjustTime",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "m_ZoomAmountMultiplier",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "2",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "m_IncludeEffectsInSize",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "false",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "m_BoundSize",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "m_FovAdjustVelocity",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "m_Cam",
                "Type": "Camera",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "m_LastTarget",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "FirstPersonController",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\FirstPersonController.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Characters.FirstPerson",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "FirstPersonController",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.CharacterController>()",
                    "ReturnType": "CharacterController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 49
                  },
                  {
                    "Name": "Setup",
                    "FullName": "UnityStandardAssets.Utility.FOVKick.Setup(UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\FOVKick.cs",
                    "DefinitionLine": 18,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_Camera",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  },
                  {
                    "Name": "Setup",
                    "FullName": "UnityStandardAssets.Utility.CurveControlledBob.Setup(UnityEngine.Camera, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\CurveControlledBob.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_Camera",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_StepInterval",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.AudioSource>()",
                    "ReturnType": "AudioSource",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 57
                  },
                  {
                    "Name": "Init",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.Init(UnityEngine.Transform, UnityEngine.Transform)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\MouseLook.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "transform",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Camera.transform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 58
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_CharacterController",
                      "Type": "UnityEngine.CharacterController",
                      "Assignment": "GetComponent<CharacterController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Camera",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "Camera.main",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalCameraPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Camera.transform.localPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_StepCycle",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_NextStep",
                      "Type": "float",
                      "Assignment": "m_StepCycle/2f",
                      "Kind": "Assignment",
                      "AssignmentLine": 54,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Jumping",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 55,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AudioSource",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "GetComponent<AudioSource>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CharacterController>()",
                      "Type": "UnityEngine.CharacterController",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CharacterController",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.main",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Camera",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalCameraPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "Literal",
                      "AssignedTo": "m_StepCycle",
                      "Value": "0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_StepCycle/2f",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 54,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_NextStep",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_StepCycle",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 54,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_NextStep",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 54,
                          "UseKind": "Literal",
                          "AssignedTo": "m_NextStep",
                          "Value": "2f",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 55,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jumping",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AudioSource>()",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_AudioSource",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 47
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RotateView",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.RotateView()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\FirstPersonController.cs",
                    "DefinitionLine": 238,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 65
                  },
                  {
                    "Name": "GetButtonDown",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButtonDown(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 119,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Jump\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 69
                  },
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_JumpBob.DoBobCycle()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 74
                  },
                  {
                    "Name": "DoBobCycle",
                    "FullName": "UnityStandardAssets.Utility.LerpControlledBob.DoBobCycle()",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\LerpControlledBob.cs",
                    "DefinitionLine": 23,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 74
                  },
                  {
                    "Name": "PlayLandingSound",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.PlayLandingSound()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\FirstPersonController.cs",
                    "DefinitionLine": 88,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 75
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Jump",
                      "Type": "bool",
                      "Assignment": "CrossPlatformInputManager.GetButtonDown(\"Jump\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 68,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MoveDir.y",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 75,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Jumping",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 76,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MoveDir.y",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 80,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PreviouslyGrounded",
                      "Type": "bool",
                      "Assignment": "m_CharacterController.isGrounded",
                      "Kind": "Assignment",
                      "AssignmentLine": 83,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetButtonDown(\"Jump\")",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 68,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Jump",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 75,
                      "UseKind": "Literal",
                      "AssignedTo": "m_MoveDir.y",
                      "Value": "0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 76,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jumping",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 80,
                      "UseKind": "Literal",
                      "AssignedTo": "m_MoveDir.y",
                      "Value": "0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CharacterController.isGrounded",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 83,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_PreviouslyGrounded",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 63
              },
              {
                "Name": "PlayLandingSound",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.PlayLandingSound()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.AudioSource.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 91
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_AudioSource.clip",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "m_LandSound",
                      "Kind": "Assignment",
                      "AssignmentLine": 89,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_NextStep",
                      "Type": "float",
                      "Assignment": "m_StepCycle + .5f",
                      "Kind": "Assignment",
                      "AssignmentLine": 91,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LandSound",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 89,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_AudioSource.clip",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_StepCycle + .5f",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 91,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_NextStep",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_StepCycle",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 91,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_NextStep",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 91,
                          "UseKind": "Literal",
                          "AssignedTo": "m_NextStep",
                          "Value": ".5f",
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 88
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetInput",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.GetInput(out float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\FirstPersonController.cs",
                    "DefinitionLine": 205,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "speed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 99
                  },
                  {
                    "Name": "SphereCast",
                    "FullName": "UnityEngine.Physics.SphereCast(UnityEngine.Vector3, float, UnityEngine.Vector3, out UnityEngine.RaycastHit, float, int, UnityEngine.QueryTriggerInteraction)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CharacterController.radius",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Vector3.down",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hitInfo",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CharacterController.height/2f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Physics.AllLayers",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "QueryTriggerInteraction.Ignore",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 105
                  },
                  {
                    "Name": "ProjectOnPlane",
                    "FullName": "UnityEngine.Vector3.ProjectOnPlane(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "desiredMove",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hitInfo.normal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 107
                  },
                  {
                    "Name": "PlayJumpSound",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.PlayJumpSound()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\FirstPersonController.cs",
                    "DefinitionLine": 138,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 120
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityEngine.CharacterController.Move(UnityEngine.Vector3)",
                    "ReturnType": "CollisionFlags",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_MoveDir*Time.fixedDeltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 129
                  },
                  {
                    "Name": "ProgressStepCycle",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.ProgressStepCycle(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\FirstPersonController.cs",
                    "DefinitionLine": 145,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "speed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 131
                  },
                  {
                    "Name": "UpdateCameraPosition",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.UpdateCameraPosition(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\FirstPersonController.cs",
                    "DefinitionLine": 181,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "speed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 132
                  },
                  {
                    "Name": "UpdateCursorLock",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.UpdateCursorLock()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\MouseLook.cs",
                    "DefinitionLine": 68,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 134
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "speed",
                      "Type": "float",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 97
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove",
                      "Type": "Vector3",
                      "Assignment": "transform.forward*m_Input.y + transform.right*m_Input.x",
                      "Kind": "Definition",
                      "DefinitionLine": 100
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hitInfo",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 103
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.ProjectOnPlane(desiredMove, hitInfo.normal).normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 106,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MoveDir.x",
                      "Type": "float",
                      "Assignment": "desiredMove.x*speed",
                      "Kind": "Assignment",
                      "AssignmentLine": 108,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MoveDir.z",
                      "Type": "float",
                      "Assignment": "desiredMove.z*speed",
                      "Kind": "Assignment",
                      "AssignmentLine": 109,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MoveDir.y",
                      "Type": "float",
                      "Assignment": "-m_StickToGroundForce",
                      "Kind": "Assignment",
                      "AssignmentLine": 114,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MoveDir.y",
                      "Type": "float",
                      "Assignment": "m_JumpSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 118,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Jump",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 120,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Jumping",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 121,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MoveDir",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Physics.gravity*m_GravityMultiplier*Time.fixedDeltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 126,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CollisionFlags",
                      "Type": "UnityEngine.CollisionFlags",
                      "Assignment": "m_CharacterController.Move(m_MoveDir*Time.fixedDeltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 128,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.ProjectOnPlane(desiredMove, hitInfo.normal).normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 106,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "desiredMove",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove.x*speed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 108,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_MoveDir.x",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "desiredMove.x",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 108,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_MoveDir.x",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "speed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 108,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_MoveDir.x",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove.z*speed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 109,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_MoveDir.z",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "desiredMove.z",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 109,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_MoveDir.z",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "speed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 109,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_MoveDir.z",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-m_StickToGroundForce",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 114,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "m_MoveDir.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_JumpSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 118,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_MoveDir.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 120,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jump",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 121,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jumping",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Physics.gravity*m_GravityMultiplier*Time.fixedDeltaTime",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 126,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_MoveDir",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Physics.gravity*m_GravityMultiplier",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 126,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_MoveDir",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "Physics.gravity",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 126,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "m_MoveDir",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_GravityMultiplier",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 126,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_MoveDir",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "Time.fixedDeltaTime",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 126,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_MoveDir",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CharacterController.Move(m_MoveDir*Time.fixedDeltaTime)",
                      "Type": "UnityEngine.CollisionFlags",
                      "Kind": "Use",
                      "UseLine": 128,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CollisionFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 96
              },
              {
                "Name": "PlayJumpSound",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.PlayJumpSound()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.AudioSource.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 141
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_AudioSource.clip",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "m_JumpSound",
                      "Kind": "Assignment",
                      "AssignmentLine": 139,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_JumpSound",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 139,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_AudioSource.clip",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 138
              },
              {
                "Name": "ProgressStepCycle",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.ProgressStepCycle(float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "speed",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "PlayFootStepAudio",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.PlayFootStepAudio()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\FirstPersonController.cs",
                    "DefinitionLine": 164,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 160
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_StepCycle",
                      "Type": "float",
                      "Assignment": "(m_CharacterController.velocity.magnitude + (speed*(m_IsWalking ? 1f : m_RunstepLenghten)))*\r\n                             Time.fixedDeltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 148,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_NextStep",
                      "Type": "float",
                      "Assignment": "m_StepCycle + m_StepInterval",
                      "Kind": "Assignment",
                      "AssignmentLine": 157,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(m_CharacterController.velocity.magnitude + (speed*(m_IsWalking ? 1f : m_RunstepLenghten)))*\r\n                             Time.fixedDeltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 148,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_StepCycle",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_CharacterController.velocity.magnitude + (speed*(m_IsWalking ? 1f : m_RunstepLenghten))",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 148,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_StepCycle",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_CharacterController.velocity.magnitude",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 148,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "m_StepCycle",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "speed*(m_IsWalking ? 1f : m_RunstepLenghten)",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 148,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "m_StepCycle",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": "speed",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 148,
                                  "UseKind": "ParameterReference",
                                  "AssignedTo": "m_StepCycle",
                                  "Value": null,
                                  "VariablesList": []
                                },
                                {
                                  "Name": "m_IsWalking ? 1f : m_RunstepLenghten",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 148,
                                  "UseKind": "Conditional",
                                  "AssignedTo": "m_StepCycle",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "Time.fixedDeltaTime",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 148,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_StepCycle",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_StepCycle + m_StepInterval",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 157,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_NextStep",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_StepCycle",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 157,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_NextStep",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_StepInterval",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 157,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_NextStep",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 145
              },
              {
                "Name": "PlayFootStepAudio",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.PlayFootStepAudio()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Range",
                    "FullName": "UnityEngine.Random.Range(int, int)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_FootstepSounds.Length",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 172
                  },
                  {
                    "Name": "PlayOneShot",
                    "FullName": "UnityEngine.AudioSource.PlayOneShot(UnityEngine.AudioClip)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_AudioSource.clip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 174
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "n",
                      "Type": "int",
                      "Assignment": "Random.Range(1, m_FootstepSounds.Length)",
                      "Kind": "Definition",
                      "DefinitionLine": 171
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AudioSource.clip",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "m_FootstepSounds[n]",
                      "Kind": "Assignment",
                      "AssignmentLine": 172,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FootstepSounds[n]",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "m_FootstepSounds[0]",
                      "Kind": "Assignment",
                      "AssignmentLine": 175,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FootstepSounds[0]",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "m_AudioSource.clip",
                      "Kind": "Assignment",
                      "AssignmentLine": 176,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FootstepSounds[n]",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 172,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "m_AudioSource.clip",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FootstepSounds[0]",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 175,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "m_FootstepSounds[n]",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AudioSource.clip",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 176,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_FootstepSounds[0]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 164
              },
              {
                "Name": "UpdateCameraPosition",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.UpdateCameraPosition(float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "speed",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "DoHeadBob",
                    "FullName": "UnityStandardAssets.Utility.CurveControlledBob.DoHeadBob(float)",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\CurveControlledBob.cs",
                    "DefinitionLine": 34,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_CharacterController.velocity.magnitude +\r\n                                      (speed*(m_IsWalking ? 1f : m_RunstepLenghten))",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 191
                  },
                  {
                    "Name": "Offset",
                    "FullName": "UnityStandardAssets.Utility.LerpControlledBob.Offset()",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\LerpControlledBob.cs",
                    "DefinitionLine": 17,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 194
                  },
                  {
                    "Name": "Offset",
                    "FullName": "UnityStandardAssets.Utility.LerpControlledBob.Offset()",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\LerpControlledBob.cs",
                    "DefinitionLine": 17,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 199
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "newCameraPosition",
                      "Type": "Vector3",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 182
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_HeadBob.DoHeadBob(m_CharacterController.velocity.magnitude +\r\n                                      (speed*(m_IsWalking ? 1f : m_RunstepLenghten)))",
                      "Kind": "Assignment",
                      "AssignmentLine": 189,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Camera.transform.localPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 192,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition.y",
                      "Type": "float",
                      "Assignment": "m_Camera.transform.localPosition.y - m_JumpBob.Offset()",
                      "Kind": "Assignment",
                      "AssignmentLine": 193,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Camera.transform.localPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 197,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition.y",
                      "Type": "float",
                      "Assignment": "m_OriginalCameraPosition.y - m_JumpBob.Offset()",
                      "Kind": "Assignment",
                      "AssignmentLine": 198,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "newCameraPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 200,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HeadBob.DoHeadBob(m_CharacterController.velocity.magnitude +\r\n                                      (speed*(m_IsWalking ? 1f : m_RunstepLenghten)))",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 189,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Camera.transform.localPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 192,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "newCameraPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Camera.transform.localPosition.y - m_JumpBob.Offset()",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 193,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "newCameraPosition.y",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Camera.transform.localPosition.y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 193,
                          "UseKind": "FieldReference",
                          "AssignedTo": "newCameraPosition.y",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_JumpBob.Offset()",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 193,
                          "UseKind": "Invocation",
                          "AssignedTo": "newCameraPosition.y",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 197,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "newCameraPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalCameraPosition.y - m_JumpBob.Offset()",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 198,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "newCameraPosition.y",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_OriginalCameraPosition.y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 198,
                          "UseKind": "FieldReference",
                          "AssignedTo": "newCameraPosition.y",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_JumpBob.Offset()",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 198,
                          "UseKind": "Invocation",
                          "AssignedTo": "newCameraPosition.y",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 200,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_Camera.transform.localPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 181
              },
              {
                "Name": "GetInput",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.GetInput(out float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "speed",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Horizontal\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 208
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Vertical\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 209
                  },
                  {
                    "Name": "GetKey",
                    "FullName": "UnityEngine.Input.GetKey(UnityEngine.KeyCode)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "KeyCode.LeftShift",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 216
                  },
                  {
                    "Name": "Normalize",
                    "FullName": "UnityEngine.Vector2.Normalize()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 225
                  },
                  {
                    "Name": "StopAllCoroutines",
                    "FullName": "UnityEngine.MonoBehaviour.StopAllCoroutines()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 232
                  },
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "!m_IsWalking ? m_FovKick.FOVKickUp() : m_FovKick.FOVKickDown()",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 233
                  },
                  {
                    "Name": "FOVKickUp",
                    "FullName": "UnityStandardAssets.Utility.FOVKick.FOVKickUp()",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\FOVKick.cs",
                    "DefinitionLine": 48,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 233
                  },
                  {
                    "Name": "FOVKickDown",
                    "FullName": "UnityStandardAssets.Utility.FOVKick.FOVKickDown()",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\FOVKick.cs",
                    "DefinitionLine": 60,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 233
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "horizontal",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Kind": "Definition",
                      "DefinitionLine": 207
                    }
                  },
                  {
                    "Variable": {
                      "Name": "vertical",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Vertical\")",
                      "Kind": "Definition",
                      "DefinitionLine": 208
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waswalking",
                      "Type": "bool",
                      "Assignment": "m_IsWalking",
                      "Kind": "Definition",
                      "DefinitionLine": 210
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_IsWalking",
                      "Type": "bool",
                      "Assignment": "!Input.GetKey(KeyCode.LeftShift)",
                      "Kind": "Assignment",
                      "AssignmentLine": 215,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "speed",
                      "Type": "float",
                      "Assignment": "m_IsWalking ? m_WalkSpeed : m_RunSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 218,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Input",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "new Vector2(horizontal, vertical)",
                      "Kind": "Assignment",
                      "AssignmentLine": 219,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "!Input.GetKey(KeyCode.LeftShift)",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 215,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "m_IsWalking",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_IsWalking ? m_WalkSpeed : m_RunSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 218,
                      "UseKind": "Conditional",
                      "AssignedTo": "speed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector2(horizontal, vertical)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 219,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_Input",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 205
              },
              {
                "Name": "RotateView",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.RotateView()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LookRotation",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.LookRotation(UnityEngine.Transform, UnityEngine.Transform)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\MouseLook.cs",
                    "DefinitionLine": 31,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "transform",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Camera.transform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 240
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 238
              },
              {
                "Name": "OnControllerColliderHit",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.FirstPersonController.OnControllerColliderHit(UnityEngine.ControllerColliderHit)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "hit",
                    "Type": "ControllerColliderHit",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "AddForceAtPosition",
                    "FullName": "UnityEngine.Rigidbody.AddForceAtPosition(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.ForceMode)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CharacterController.velocity*0.1f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "hit.point",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "ForceMode.Impulse",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 257
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "body",
                      "Type": "Rigidbody",
                      "Assignment": "hit.collider.attachedRigidbody",
                      "Kind": "Definition",
                      "DefinitionLine": 245
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 244
              }
            ],
            "Fields": [
              {
                "Name": "m_IsWalking",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "m_WalkSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "m_RunSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "m_RunstepLenghten",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]",
                  "[Range(0f, 1f)]"
                ],
                "Line": 17
              },
              {
                "Name": "m_JumpSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "m_StickToGroundForce",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "m_GravityMultiplier",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "m_MouseLook",
                "Type": "MouseLook",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 21
              },
              {
                "Name": "m_UseFovKick",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 22
              },
              {
                "Name": "m_FovKick",
                "Type": "FOVKick",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new FOVKick()",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 23
              },
              {
                "Name": "m_UseHeadBob",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 24
              },
              {
                "Name": "m_HeadBob",
                "Type": "CurveControlledBob",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new CurveControlledBob()",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 25
              },
              {
                "Name": "m_JumpBob",
                "Type": "LerpControlledBob",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new LerpControlledBob()",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 26
              },
              {
                "Name": "m_StepInterval",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 27
              },
              {
                "Name": "m_FootstepSounds",
                "Type": "AudioClip[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 28
              },
              {
                "Name": "m_JumpSound",
                "Type": "AudioClip",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 29
              },
              {
                "Name": "m_LandSound",
                "Type": "AudioClip",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 30
              },
              {
                "Name": "m_Camera",
                "Type": "Camera",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 32
              },
              {
                "Name": "m_Jump",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 33
              },
              {
                "Name": "m_YRotation",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 34
              },
              {
                "Name": "m_Input",
                "Type": "Vector2",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 35
              },
              {
                "Name": "m_MoveDir",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "Vector3.zero",
                "Attributes": [],
                "Line": 36
              },
              {
                "Name": "m_CharacterController",
                "Type": "CharacterController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "m_CollisionFlags",
                "Type": "CollisionFlags",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 38
              },
              {
                "Name": "m_PreviouslyGrounded",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 39
              },
              {
                "Name": "m_OriginalCameraPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 40
              },
              {
                "Name": "m_StepCycle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 41
              },
              {
                "Name": "m_NextStep",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 42
              },
              {
                "Name": "m_Jumping",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 43
              },
              {
                "Name": "m_AudioSource",
                "Type": "AudioSource",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 44
              }
            ],
            "Line": 10
          }
        ],
        "Usings": [],
        "Line": 8
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      },
      {
        "Name": "UnityStandardAssets.Utility",
        "Line": 4
      },
      {
        "Name": "UnityEngine.Random",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "HeadBob",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\HeadBob.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Characters.FirstPerson",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "HeadBob",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.HeadBob.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Setup",
                    "FullName": "UnityStandardAssets.Utility.CurveControlledBob.Setup(UnityEngine.Camera, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\CurveControlledBob.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Camera",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "StrideInterval",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 23
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_OriginalCameraPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Camera.transform.localPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalCameraPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.HeadBob.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DoHeadBob",
                    "FullName": "UnityStandardAssets.Utility.CurveControlledBob.DoHeadBob(float)",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\CurveControlledBob.cs",
                    "DefinitionLine": 34,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "rigidbodyFirstPersonController.Velocity.magnitude*(rigidbodyFirstPersonController.Running ? RunningStrideLengthen : 1f)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 35
                  },
                  {
                    "Name": "Offset",
                    "FullName": "UnityStandardAssets.Utility.LerpControlledBob.Offset()",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\LerpControlledBob.cs",
                    "DefinitionLine": 17,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 37
                  },
                  {
                    "Name": "Offset",
                    "FullName": "UnityStandardAssets.Utility.LerpControlledBob.Offset()",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\LerpControlledBob.cs",
                    "DefinitionLine": 17,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 42
                  },
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "jumpAndLandingBob.DoBobCycle()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 48
                  },
                  {
                    "Name": "DoBobCycle",
                    "FullName": "UnityStandardAssets.Utility.LerpControlledBob.DoBobCycle()",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\LerpControlledBob.cs",
                    "DefinitionLine": 23,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 48
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "newCameraPosition",
                      "Type": "Vector3",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 31
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "motionBob.DoHeadBob(rigidbodyFirstPersonController.Velocity.magnitude*(rigidbodyFirstPersonController.Running ? RunningStrideLengthen : 1f))",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Camera.transform.localPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition.y",
                      "Type": "float",
                      "Assignment": "Camera.transform.localPosition.y - jumpAndLandingBob.Offset()",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Camera.transform.localPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition.y",
                      "Type": "float",
                      "Assignment": "m_OriginalCameraPosition.y - jumpAndLandingBob.Offset()",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "newCameraPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PreviouslyGrounded",
                      "Type": "bool",
                      "Assignment": "rigidbodyFirstPersonController.Grounded",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "motionBob.DoHeadBob(rigidbodyFirstPersonController.Velocity.magnitude*(rigidbodyFirstPersonController.Running ? RunningStrideLengthen : 1f))",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "Invocation",
                      "AssignedTo": "Camera.transform.localPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "newCameraPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.transform.localPosition.y - jumpAndLandingBob.Offset()",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "newCameraPosition.y",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Camera.transform.localPosition.y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 36,
                          "UseKind": "FieldReference",
                          "AssignedTo": "newCameraPosition.y",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "jumpAndLandingBob.Offset()",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 36,
                          "UseKind": "Invocation",
                          "AssignedTo": "newCameraPosition.y",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "newCameraPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalCameraPosition.y - jumpAndLandingBob.Offset()",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "newCameraPosition.y",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_OriginalCameraPosition.y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 41,
                          "UseKind": "FieldReference",
                          "AssignedTo": "newCameraPosition.y",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "jumpAndLandingBob.Offset()",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 41,
                          "UseKind": "Invocation",
                          "AssignedTo": "newCameraPosition.y",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newCameraPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "LocalReference",
                      "AssignedTo": "Camera.transform.localPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rigidbodyFirstPersonController.Grounded",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_PreviouslyGrounded",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 29
              }
            ],
            "Fields": [
              {
                "Name": "Camera",
                "Type": "Camera",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "motionBob",
                "Type": "CurveControlledBob",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new CurveControlledBob()",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "jumpAndLandingBob",
                "Type": "LerpControlledBob",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new LerpControlledBob()",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "rigidbodyFirstPersonController",
                "Type": "RigidbodyFirstPersonController",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "StrideInterval",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "RunningStrideLengthen",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [
                  "[Range(0f, 1f)]"
                ],
                "Line": 14
              },
              {
                "Name": "m_PreviouslyGrounded",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_OriginalCameraPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.Utility",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "MouseLook",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\MouseLook.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Characters.FirstPerson",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "MouseLook",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Init",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.Init(UnityEngine.Transform, UnityEngine.Transform)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "character",
                    "Type": "Transform",
                    "Assignment": null
                  },
                  {
                    "Name": "camera",
                    "Type": "Transform",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_CharacterTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "character.localRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CameraTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "camera.localRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "character.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_CharacterTargetRot",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camera.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_CameraTargetRot",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "LookRotation",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.LookRotation(UnityEngine.Transform, UnityEngine.Transform)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "character",
                    "Type": "Transform",
                    "Assignment": null
                  },
                  {
                    "Name": "camera",
                    "Type": "Transform",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Mouse X\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Mouse Y\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "yRot",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 36
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "-xRot",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": "ClampRotationAroundXAxis",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.ClampRotationAroundXAxis(UnityEngine.Quaternion)",
                    "ReturnType": "Quaternion",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\MouseLook.cs",
                    "DefinitionLine": 98,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_CameraTargetRot",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "Slerp",
                    "FullName": "UnityEngine.Quaternion.Slerp(UnityEngine.Quaternion, UnityEngine.Quaternion, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "character.localRotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CharacterTargetRot",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "smoothTime * Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 44
                  },
                  {
                    "Name": "Slerp",
                    "FullName": "UnityEngine.Quaternion.Slerp(UnityEngine.Quaternion, UnityEngine.Quaternion, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "camera.localRotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CameraTargetRot",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "smoothTime * Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "UpdateCursorLock",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.UpdateCursorLock()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\MouseLook.cs",
                    "DefinitionLine": 68,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 55
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "yRot",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Mouse X\") * XSensitivity",
                      "Kind": "Definition",
                      "DefinitionLine": 32
                    }
                  },
                  {
                    "Variable": {
                      "Name": "xRot",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Mouse Y\") * YSensitivity",
                      "Kind": "Definition",
                      "DefinitionLine": 33
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CharacterTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Euler (0f, yRot, 0f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CameraTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Euler (-xRot, 0f, 0f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CameraTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "ClampRotationAroundXAxis (m_CameraTargetRot)",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "character.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Slerp (character.localRotation, m_CharacterTargetRot,\r\n                    smoothTime * Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camera.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Slerp (camera.localRotation, m_CameraTargetRot,\r\n                    smoothTime * Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "character.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_CharacterTargetRot",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camera.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_CameraTargetRot",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler (0f, yRot, 0f)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CharacterTargetRot",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Euler (-xRot, 0f, 0f)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CameraTargetRot",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ClampRotationAroundXAxis (m_CameraTargetRot)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CameraTargetRot",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Slerp (character.localRotation, m_CharacterTargetRot,\r\n                    smoothTime * Time.deltaTime)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "Invocation",
                      "AssignedTo": "character.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Slerp (camera.localRotation, m_CameraTargetRot,\r\n                    smoothTime * Time.deltaTime)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "Invocation",
                      "AssignedTo": "camera.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CharacterTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "FieldReference",
                      "AssignedTo": "character.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CameraTargetRot",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "FieldReference",
                      "AssignedTo": "camera.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 31
              },
              {
                "Name": "SetCursorLock",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.SetCursorLock(bool)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "lockCursor",
                      "Type": "bool",
                      "Assignment": "value",
                      "Kind": "Assignment",
                      "AssignmentLine": 59,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.lockState",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "CursorLockMode.None",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.visible",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "value",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 59,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "lockCursor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CursorLockMode.None",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "FieldReference",
                      "AssignedTo": "Cursor.lockState",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "Literal",
                      "AssignedTo": "Cursor.visible",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 58
              },
              {
                "Name": "UpdateCursorLock",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.UpdateCursorLock()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "InternalLockUpdate",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.InternalLockUpdate()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\MouseLook.cs",
                    "DefinitionLine": 75,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 72
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 68
              },
              {
                "Name": "InternalLockUpdate",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.InternalLockUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetKeyUp",
                    "FullName": "UnityEngine.Input.GetKeyUp(UnityEngine.KeyCode)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "KeyCode.Escape",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 77
                  },
                  {
                    "Name": "GetMouseButtonUp",
                    "FullName": "UnityEngine.Input.GetMouseButtonUp(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 81
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_cursorIsLocked",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 78,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_cursorIsLocked",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 82,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.lockState",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "CursorLockMode.Locked",
                      "Kind": "Assignment",
                      "AssignmentLine": 87,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.visible",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 88,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.lockState",
                      "Type": "UnityEngine.CursorLockMode",
                      "Assignment": "CursorLockMode.None",
                      "Kind": "Assignment",
                      "AssignmentLine": 92,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Cursor.visible",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 78,
                      "UseKind": "Literal",
                      "AssignedTo": "m_cursorIsLocked",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 82,
                      "UseKind": "Literal",
                      "AssignedTo": "m_cursorIsLocked",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CursorLockMode.Locked",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 87,
                      "UseKind": "FieldReference",
                      "AssignedTo": "Cursor.lockState",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 88,
                      "UseKind": "Literal",
                      "AssignedTo": "Cursor.visible",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CursorLockMode.None",
                      "Type": "UnityEngine.CursorLockMode",
                      "Kind": "Use",
                      "UseLine": 92,
                      "UseKind": "FieldReference",
                      "AssignedTo": "Cursor.lockState",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "Literal",
                      "AssignedTo": "Cursor.visible",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 75
              },
              {
                "Name": "ClampRotationAroundXAxis",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.ClampRotationAroundXAxis(UnityEngine.Quaternion)",
                "Modifiers": [],
                "ReturnType": "Quaternion",
                "Parameters": [
                  {
                    "Name": "q",
                    "Type": "Quaternion",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Atan",
                    "FullName": "UnityEngine.Mathf.Atan(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "q.x",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 105
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "angleX",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "MinimumX",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "MaximumX",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 107
                  },
                  {
                    "Name": "Tan",
                    "FullName": "UnityEngine.Mathf.Tan(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0.5f * Mathf.Deg2Rad * angleX",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 109
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "angleX",
                      "Type": "float",
                      "Assignment": "2.0f * Mathf.Rad2Deg * Mathf.Atan (q.x)",
                      "Kind": "Definition",
                      "DefinitionLine": 104
                    }
                  },
                  {
                    "Variable": {
                      "Name": "q.x",
                      "Type": "float",
                      "Assignment": "q.w",
                      "Kind": "Assignment",
                      "AssignmentLine": 99,
                      "AssignmentKind": "DivideAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "q.y",
                      "Type": "float",
                      "Assignment": "q.w",
                      "Kind": "Assignment",
                      "AssignmentLine": 100,
                      "AssignmentKind": "DivideAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "q.z",
                      "Type": "float",
                      "Assignment": "q.w",
                      "Kind": "Assignment",
                      "AssignmentLine": 101,
                      "AssignmentKind": "DivideAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "q.w",
                      "Type": "float",
                      "Assignment": "1.0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 102,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "angleX",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp (angleX, MinimumX, MaximumX)",
                      "Kind": "Assignment",
                      "AssignmentLine": 106,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "q.x",
                      "Type": "float",
                      "Assignment": "Mathf.Tan (0.5f * Mathf.Deg2Rad * angleX)",
                      "Kind": "Assignment",
                      "AssignmentLine": 108,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "q.w",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 99,
                      "UseKind": "FieldReference",
                      "AssignedTo": "q.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "q.w",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 100,
                      "UseKind": "FieldReference",
                      "AssignedTo": "q.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "q.w",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 101,
                      "UseKind": "FieldReference",
                      "AssignedTo": "q.z",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 102,
                      "UseKind": "Literal",
                      "AssignedTo": "q.w",
                      "Value": "1.0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp (angleX, MinimumX, MaximumX)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 106,
                      "UseKind": "Invocation",
                      "AssignedTo": "angleX",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Tan (0.5f * Mathf.Deg2Rad * angleX)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 108,
                      "UseKind": "Invocation",
                      "AssignedTo": "q.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 98
              }
            ],
            "Fields": [
              {
                "Name": "XSensitivity",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "2f",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "YSensitivity",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "2f",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "clampVerticalRotation",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "MinimumX",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "-90F",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "MaximumX",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "90F",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "smooth",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "smoothTime",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "5f",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "lockCursor",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_CharacterTargetRot",
                "Type": "Quaternion",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "m_CameraTargetRot",
                "Type": "Quaternion",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "m_cursorIsLocked",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 22
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "RigidbodyFirstPersonController",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\RigidbodyFirstPersonController.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Characters.FirstPerson",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "RigidbodyFirstPersonController",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Running",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 60
              },
              {
                "Name": "Velocity",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Line": 93
              },
              {
                "Name": "Grounded",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 98
              },
              {
                "Name": "Jumping",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 103
              },
              {
                "Name": "Running",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 108
              }
            ],
            "Methods": [
              {
                "Name": "UpdateDesiredTargetSpeed",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.MovementSettings.UpdateDesiredTargetSpeed(UnityEngine.Vector2)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "input",
                    "Type": "Vector2",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetKey",
                    "FullName": "UnityEngine.Input.GetKey(UnityEngine.KeyCode)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "RunKey",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 47
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "CurrentTargetSpeed",
                      "Type": "float",
                      "Assignment": "StrafeSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CurrentTargetSpeed",
                      "Type": "float",
                      "Assignment": "BackwardSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CurrentTargetSpeed",
                      "Type": "float",
                      "Assignment": "ForwardSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CurrentTargetSpeed",
                      "Type": "float",
                      "Assignment": "RunMultiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Running",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Running",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "StrafeSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "FieldReference",
                      "AssignedTo": "CurrentTargetSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "BackwardSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "FieldReference",
                      "AssignedTo": "CurrentTargetSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ForwardSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "FieldReference",
                      "AssignedTo": "CurrentTargetSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "RunMultiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "FieldReference",
                      "AssignedTo": "CurrentTargetSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Running",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Running",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              },
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 123
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.CapsuleCollider>()",
                    "ReturnType": "CapsuleCollider",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 124
                  },
                  {
                    "Name": "Init",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.Init(UnityEngine.Transform, UnityEngine.Transform)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\MouseLook.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "transform",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "cam.transform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 125
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_RigidBody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 122,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule",
                      "Type": "UnityEngine.CapsuleCollider",
                      "Assignment": "GetComponent<CapsuleCollider>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 123,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 122,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_RigidBody",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CapsuleCollider>()",
                      "Type": "UnityEngine.CapsuleCollider",
                      "Kind": "Use",
                      "UseLine": 123,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Capsule",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 121
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RotateView",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.RotateView()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\RigidbodyFirstPersonController.cs",
                    "DefinitionLine": 225,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 131
                  },
                  {
                    "Name": "GetButtonDown",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButtonDown(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 119,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Jump\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 133
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Jump",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 134,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 134,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jump",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 129
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GroundCheck",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.GroundCheck()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\RigidbodyFirstPersonController.cs",
                    "DefinitionLine": 244,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 142
                  },
                  {
                    "Name": "GetInput",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.GetInput()",
                    "ReturnType": "Vector2",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\RigidbodyFirstPersonController.cs",
                    "DefinitionLine": 212,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 143
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "input.x",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 145
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "input.y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 145
                  },
                  {
                    "Name": "ProjectOnPlane",
                    "FullName": "UnityEngine.Vector3.ProjectOnPlane(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "desiredMove",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_GroundContactNormal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 149
                  },
                  {
                    "Name": "AddForce",
                    "FullName": "UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3, UnityEngine.ForceMode)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "desiredMove*SlopeMultiplier()",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "ForceMode.Impulse",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 157
                  },
                  {
                    "Name": "SlopeMultiplier",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.SlopeMultiplier()",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\RigidbodyFirstPersonController.cs",
                    "DefinitionLine": 190,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 157
                  },
                  {
                    "Name": "AddForce",
                    "FullName": "UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3, UnityEngine.ForceMode)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "new Vector3(0f, movementSettings.JumpForce, 0f)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "ForceMode.Impulse",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 169
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "input.x",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 173
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "input.y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 173
                  },
                  {
                    "Name": "Sleep",
                    "FullName": "UnityEngine.Rigidbody.Sleep()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [],
                    "Line": 175
                  },
                  {
                    "Name": "StickToGroundHelper",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.StickToGroundHelper()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\RigidbodyFirstPersonController.cs",
                    "DefinitionLine": 197,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 183
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "input",
                      "Type": "Vector2",
                      "Assignment": "GetInput()",
                      "Kind": "Definition",
                      "DefinitionLine": 142
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove",
                      "Type": "Vector3",
                      "Assignment": "cam.transform.forward*input.y + cam.transform.right*input.x",
                      "Kind": "Definition",
                      "DefinitionLine": 147
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.ProjectOnPlane(desiredMove, m_GroundContactNormal).normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 148,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove.x",
                      "Type": "float",
                      "Assignment": "desiredMove.x*movementSettings.CurrentTargetSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 150,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove.z",
                      "Type": "float",
                      "Assignment": "desiredMove.z*movementSettings.CurrentTargetSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 151,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove.y",
                      "Type": "float",
                      "Assignment": "desiredMove.y*movementSettings.CurrentTargetSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 152,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RigidBody.drag",
                      "Type": "float",
                      "Assignment": "5f",
                      "Kind": "Assignment",
                      "AssignmentLine": 162,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RigidBody.drag",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 166,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RigidBody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(m_RigidBody.velocity.x, 0f, m_RigidBody.velocity.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 167,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Jumping",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 169,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RigidBody.drag",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 179,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Jump",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 185,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.ProjectOnPlane(desiredMove, m_GroundContactNormal).normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 148,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "desiredMove",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove.x*movementSettings.CurrentTargetSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 150,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "desiredMove.x",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "desiredMove.x",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 150,
                          "UseKind": "FieldReference",
                          "AssignedTo": "desiredMove.x",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "movementSettings.CurrentTargetSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 150,
                          "UseKind": "FieldReference",
                          "AssignedTo": "desiredMove.x",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove.z*movementSettings.CurrentTargetSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 151,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "desiredMove.z",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "desiredMove.z",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 151,
                          "UseKind": "FieldReference",
                          "AssignedTo": "desiredMove.z",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "movementSettings.CurrentTargetSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 151,
                          "UseKind": "FieldReference",
                          "AssignedTo": "desiredMove.z",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredMove.y*movementSettings.CurrentTargetSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 152,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "desiredMove.y",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "desiredMove.y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 152,
                          "UseKind": "FieldReference",
                          "AssignedTo": "desiredMove.y",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "movementSettings.CurrentTargetSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 152,
                          "UseKind": "FieldReference",
                          "AssignedTo": "desiredMove.y",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 162,
                      "UseKind": "Literal",
                      "AssignedTo": "m_RigidBody.drag",
                      "Value": "5f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 166,
                      "UseKind": "Literal",
                      "AssignedTo": "m_RigidBody.drag",
                      "Value": "0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(m_RigidBody.velocity.x, 0f, m_RigidBody.velocity.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 167,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_RigidBody.velocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 169,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jumping",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 179,
                      "UseKind": "Literal",
                      "AssignedTo": "m_RigidBody.drag",
                      "Value": "0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 185,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jump",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 140
              },
              {
                "Name": "SlopeMultiplier",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.SlopeMultiplier()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "float",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Angle",
                    "FullName": "UnityEngine.Vector3.Angle(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_GroundContactNormal",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Vector3.up",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 192
                  },
                  {
                    "Name": "Evaluate",
                    "FullName": "UnityEngine.AnimationCurve.Evaluate(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "angle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 193
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "angle",
                      "Type": "float",
                      "Assignment": "Vector3.Angle(m_GroundContactNormal, Vector3.up)",
                      "Kind": "Definition",
                      "DefinitionLine": 191
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 190
              },
              {
                "Name": "StickToGroundHelper",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.StickToGroundHelper()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SphereCast",
                    "FullName": "UnityEngine.Physics.SphereCast(UnityEngine.Vector3, float, UnityEngine.Vector3, out UnityEngine.RaycastHit, float, int, UnityEngine.QueryTriggerInteraction)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Capsule.radius * (1.0f - advancedSettings.shellOffset)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Vector3.down",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hitInfo",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "((m_Capsule.height/2f) - m_Capsule.radius) +\r\n                                   advancedSettings.stickToGroundHelperDistance",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Physics.AllLayers",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "QueryTriggerInteraction.Ignore",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 200
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Vector3.Angle(hitInfo.normal, Vector3.up)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 204
                  },
                  {
                    "Name": "Angle",
                    "FullName": "UnityEngine.Vector3.Angle(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "hitInfo.normal",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Vector3.up",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 204
                  },
                  {
                    "Name": "ProjectOnPlane",
                    "FullName": "UnityEngine.Vector3.ProjectOnPlane(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_RigidBody.velocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hitInfo.normal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 206
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "hitInfo",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 198
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RigidBody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.ProjectOnPlane(m_RigidBody.velocity, hitInfo.normal)",
                      "Kind": "Assignment",
                      "AssignmentLine": 205,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.ProjectOnPlane(m_RigidBody.velocity, hitInfo.normal)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 205,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_RigidBody.velocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 197
              },
              {
                "Name": "GetInput",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.GetInput()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "Vector2",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Horizontal\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 217
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Vertical\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 218
                  },
                  {
                    "Name": "UpdateDesiredTargetSpeed",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.MovementSettings.UpdateDesiredTargetSpeed(UnityEngine.Vector2)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\RigidbodyFirstPersonController.cs",
                    "DefinitionLine": 27,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "input",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 220
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "input",
                      "Type": "Vector2",
                      "Assignment": "new Vector2\r\n                {\r\n                    x = CrossPlatformInputManager.GetAxis(\"Horizontal\"),\r\n                    y = CrossPlatformInputManager.GetAxis(\"Vertical\")\r\n                }",
                      "Kind": "Definition",
                      "DefinitionLine": 214
                    }
                  },
                  {
                    "Variable": {
                      "Name": "x",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 216,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "y",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Vertical\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 217,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 216,
                      "UseKind": "Invocation",
                      "AssignedTo": "x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetAxis(\"Vertical\")",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 217,
                      "UseKind": "Invocation",
                      "AssignedTo": "y",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 212
              },
              {
                "Name": "RotateView",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.RotateView()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Time.timeScale",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 228
                  },
                  {
                    "Name": "LookRotation",
                    "FullName": "UnityStandardAssets.Characters.FirstPerson.MouseLook.LookRotation(UnityEngine.Transform, UnityEngine.Transform)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\FirstPersonCharacter\\Scripts\\MouseLook.cs",
                    "DefinitionLine": 31,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "transform",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "cam.transform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 233
                  },
                  {
                    "Name": "AngleAxis",
                    "FullName": "UnityEngine.Quaternion.AngleAxis(float, UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.eulerAngles.y - oldYRotation",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Vector3.up",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 238
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "oldYRotation",
                      "Type": "float",
                      "Assignment": "transform.eulerAngles.y",
                      "Kind": "Definition",
                      "DefinitionLine": 230
                    }
                  },
                  {
                    "Variable": {
                      "Name": "velRotation",
                      "Type": "Quaternion",
                      "Assignment": "Quaternion.AngleAxis(transform.eulerAngles.y - oldYRotation, Vector3.up)",
                      "Kind": "Definition",
                      "DefinitionLine": 237
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RigidBody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "velRotation*m_RigidBody.velocity",
                      "Kind": "Assignment",
                      "AssignmentLine": 238,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "velRotation*m_RigidBody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 238,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_RigidBody.velocity",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "velRotation",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 238,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_RigidBody.velocity",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_RigidBody.velocity",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 238,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_RigidBody.velocity",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 225
              },
              {
                "Name": "GroundCheck",
                "FullName": "UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.GroundCheck()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SphereCast",
                    "FullName": "UnityEngine.Physics.SphereCast(UnityEngine.Vector3, float, UnityEngine.Vector3, out UnityEngine.RaycastHit, float, int, UnityEngine.QueryTriggerInteraction)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Capsule.radius * (1.0f - advancedSettings.shellOffset)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Vector3.down",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hitInfo",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "((m_Capsule.height/2f) - m_Capsule.radius) + advancedSettings.groundCheckDistance",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Physics.AllLayers",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "QueryTriggerInteraction.Ignore",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 248
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "hitInfo",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 246
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PreviouslyGrounded",
                      "Type": "bool",
                      "Assignment": "m_IsGrounded",
                      "Kind": "Assignment",
                      "AssignmentLine": 245,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_IsGrounded",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 250,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_GroundContactNormal",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "hitInfo.normal",
                      "Kind": "Assignment",
                      "AssignmentLine": 251,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_IsGrounded",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 255,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_GroundContactNormal",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.up",
                      "Kind": "Assignment",
                      "AssignmentLine": 256,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Jumping",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 260,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_IsGrounded",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 245,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_PreviouslyGrounded",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 250,
                      "UseKind": "Literal",
                      "AssignedTo": "m_IsGrounded",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hitInfo.normal",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 251,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_GroundContactNormal",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 255,
                      "UseKind": "Literal",
                      "AssignedTo": "m_IsGrounded",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.up",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 256,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_GroundContactNormal",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 260,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jumping",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 244
              }
            ],
            "Fields": [
              {
                "Name": "ForwardSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "8.0f",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "BackwardSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "4.0f",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "StrafeSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "4.0f",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "RunMultiplier",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "2.0f",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "RunKey",
                "Type": "KeyCode",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "KeyCode.LeftShift",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "JumpForce",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "30f",
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "SlopeCurveModifier",
                "Type": "AnimationCurve",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new AnimationCurve(new Keyframe(-90.0f, 1.0f), new Keyframe(0.0f, 1.0f), new Keyframe(90.0f, 0.0f))",
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "CurrentTargetSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "8f",
                "Attributes": [
                  "[HideInInspector]"
                ],
                "Line": 21
              },
              {
                "Name": "m_Running",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "groundCheckDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.01f",
                "Attributes": [],
                "Line": 71
              },
              {
                "Name": "stickToGroundHelperDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.5f",
                "Attributes": [],
                "Line": 72
              },
              {
                "Name": "slowDownRate",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "20f",
                "Attributes": [],
                "Line": 73
              },
              {
                "Name": "airControl",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 74
              },
              {
                "Name": "shellOffset",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [
                  "[Tooltip(\"set it to 0.1 or more if you get stuck in wall\")]"
                ],
                "Line": 76
              },
              {
                "Name": "cam",
                "Type": "Camera",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 80
              },
              {
                "Name": "movementSettings",
                "Type": "MovementSettings",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new MovementSettings()",
                "Attributes": [],
                "Line": 81
              },
              {
                "Name": "mouseLook",
                "Type": "MouseLook",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new MouseLook()",
                "Attributes": [],
                "Line": 82
              },
              {
                "Name": "advancedSettings",
                "Type": "AdvancedSettings",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new AdvancedSettings()",
                "Attributes": [],
                "Line": 83
              },
              {
                "Name": "m_RigidBody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 86
              },
              {
                "Name": "m_Capsule",
                "Type": "CapsuleCollider",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 87
              },
              {
                "Name": "m_YRotation",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 88
              },
              {
                "Name": "m_GroundContactNormal",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 89
              },
              {
                "Name": "m_Jump",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 90
              },
              {
                "Name": "m_PreviouslyGrounded",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 90
              },
              {
                "Name": "m_Jumping",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 90
              },
              {
                "Name": "m_IsGrounded",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 90
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "Ball",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\RollerBall\\Scripts\\Ball.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Ball",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Ball",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Ball.Ball.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 19
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 21
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 18,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>().maxAngularVelocity",
                      "Type": "float",
                      "Assignment": "m_MaxAngularVelocity",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 18,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MaxAngularVelocity",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "FieldReference",
                      "AssignedTo": "GetComponent<Rigidbody>().maxAngularVelocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 17
              },
              {
                "Name": "Move",
                "FullName": "UnityStandardAssets.Vehicles.Ball.Ball.Move(UnityEngine.Vector3, bool)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "moveDirection",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "jump",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "AddTorque",
                    "FullName": "UnityEngine.Rigidbody.AddTorque(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "new Vector3(moveDirection.z, 0, -moveDirection.x)*m_MovePower",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 31
                  },
                  {
                    "Name": "AddForce",
                    "FullName": "UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "moveDirection*m_MovePower",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 36
                  },
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-Vector3.up",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "k_GroundRayLength",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "AddForce",
                    "FullName": "UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3, UnityEngine.ForceMode)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Vector3.up*m_JumpPower",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "ForceMode.Impulse",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 43
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 25
              }
            ],
            "Fields": [
              {
                "Name": "m_MovePower",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "5",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 8
              },
              {
                "Name": "m_UseTorque",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "true",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "m_MaxAngularVelocity",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "25",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "m_JumpPower",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "2",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "k_GroundRayLength",
                "Type": "float",
                "Modifiers": [
                  "private",
                  "const"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "m_Rigidbody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "BallUserControl",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\RollerBall\\Scripts\\BallUserControl.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Ball",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "BallUserControl",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Vehicles.Ball.BallUserControl.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Ball.Ball>()",
                    "ReturnType": "Ball",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 22
                  },
                  {
                    "Name": "LogWarning",
                    "FullName": "UnityEngine.Debug.LogWarning(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Warning: no main camera found. Ball needs a Camera tagged \\\"MainCamera\\\", for camera-relative controls.\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "ball",
                      "Type": "UnityStandardAssets.Vehicles.Ball.Ball",
                      "Assignment": "GetComponent<Ball>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "Camera.main.transform",
                      "Kind": "Assignment",
                      "AssignmentLine": 27,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Ball>()",
                      "Type": "UnityStandardAssets.Vehicles.Ball.Ball",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "Invocation",
                      "AssignedTo": "ball",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.main.transform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 27,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "cam",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Ball.BallUserControl.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Horizontal\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 43
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Vertical\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 44
                  },
                  {
                    "Name": "GetButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButton(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 113,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Jump\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 45
                  },
                  {
                    "Name": "Scale",
                    "FullName": "UnityEngine.Vector3.Scale(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "cam.forward",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new Vector3(1, 0, 1)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 51
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "h",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Kind": "Definition",
                      "DefinitionLine": 42
                    }
                  },
                  {
                    "Variable": {
                      "Name": "v",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Vertical\")",
                      "Kind": "Definition",
                      "DefinitionLine": 43
                    }
                  },
                  {
                    "Variable": {
                      "Name": "jump",
                      "Type": "bool",
                      "Assignment": "CrossPlatformInputManager.GetButton(\"Jump\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 44,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camForward",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.Scale(cam.forward, new Vector3(1, 0, 1)).normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "move",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "(v*camForward + h*cam.right).normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "move",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "(v*Vector3.forward + h*Vector3.right).normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetButton(\"Jump\")",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "Invocation",
                      "AssignedTo": "jump",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.Scale(cam.forward, new Vector3(1, 0, 1)).normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "camForward",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(v*camForward + h*cam.right).normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "move",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(v*Vector3.forward + h*Vector3.right).normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "move",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 39
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Vehicles.Ball.BallUserControl.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Vehicles.Ball.Ball.Move(UnityEngine.Vector3, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\RollerBall\\Scripts\\Ball.cs",
                    "DefinitionLine": 25,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "move",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "jump",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 65
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "jump",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "Literal",
                      "AssignedTo": "jump",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 62
              }
            ],
            "Fields": [
              {
                "Name": "ball",
                "Type": "Ball",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "move",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "cam",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "camForward",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "jump",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AICharacterControl",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\AICharacterControl.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Characters.ThirdPerson",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AICharacterControl",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "agent",
                "Type": "UnityEngine.AI.NavMeshAgent",
                "Modifiers": [
                  "public"
                ],
                "Line": 10
              },
              {
                "Name": "character",
                "Type": "ThirdPersonCharacter",
                "Modifiers": [
                  "public"
                ],
                "Line": 11
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.AICharacterControl.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponentInChildren",
                    "FullName": "UnityEngine.Component.GetComponentInChildren<UnityEngine.AI.NavMeshAgent>()",
                    "ReturnType": "NavMeshAgent",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 18
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter>()",
                    "ReturnType": "ThirdPersonCharacter",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 19
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "agent",
                      "Type": "UnityEngine.AI.NavMeshAgent",
                      "Assignment": "GetComponentInChildren<UnityEngine.AI.NavMeshAgent>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 17,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "character",
                      "Type": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter",
                      "Assignment": "GetComponent<ThirdPersonCharacter>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 18,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "agent.updateRotation",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "agent.updatePosition",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponentInChildren<UnityEngine.AI.NavMeshAgent>()",
                      "Type": "UnityEngine.AI.NavMeshAgent",
                      "Kind": "Use",
                      "UseLine": 17,
                      "UseKind": "Invocation",
                      "AssignedTo": "agent",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<ThirdPersonCharacter>()",
                      "Type": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter",
                      "Kind": "Use",
                      "UseLine": 18,
                      "UseKind": "Invocation",
                      "AssignedTo": "character",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "Literal",
                      "AssignedTo": "agent.updateRotation",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "Literal",
                      "AssignedTo": "agent.updatePosition",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 15
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.AICharacterControl.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetDestination",
                    "FullName": "UnityEngine.AI.NavMeshAgent.SetDestination(UnityEngine.Vector3)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "target.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 29
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.Move(UnityEngine.Vector3, bool, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 46,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "agent.desiredVelocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.Move(UnityEngine.Vector3, bool, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 46,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Vector3.zero",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 26
              },
              {
                "Name": "SetTarget",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.AICharacterControl.SetTarget(UnityEngine.Transform)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "target",
                    "Type": "Transform",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "this.target",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "target",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "this.target",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 38
              }
            ],
            "Fields": [
              {
                "Name": "target",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "ThirdPersonCharacter",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Characters.ThirdPerson",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ThirdPersonCharacter",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.Start()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Animator>()",
                    "ReturnType": "Animator",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 35
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 36
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.CapsuleCollider>()",
                    "ReturnType": "CapsuleCollider",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 37
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Animator",
                      "Type": "UnityEngine.Animator",
                      "Assignment": "GetComponent<Animator>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule",
                      "Type": "UnityEngine.CapsuleCollider",
                      "Assignment": "GetComponent<CapsuleCollider>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CapsuleHeight",
                      "Type": "float",
                      "Assignment": "m_Capsule.height",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CapsuleCenter",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Capsule.center",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.constraints",
                      "Type": "UnityEngine.RigidbodyConstraints",
                      "Assignment": "RigidbodyConstraints.FreezeRotationX | RigidbodyConstraints.FreezeRotationY | RigidbodyConstraints.FreezeRotationZ",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OrigGroundCheckDistance",
                      "Type": "float",
                      "Assignment": "m_GroundCheckDistance",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Animator>()",
                      "Type": "UnityEngine.Animator",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Animator",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CapsuleCollider>()",
                      "Type": "UnityEngine.CapsuleCollider",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Capsule",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule.height",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_CapsuleHeight",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule.center",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_CapsuleCenter",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "RigidbodyConstraints.FreezeRotationX | RigidbodyConstraints.FreezeRotationY | RigidbodyConstraints.FreezeRotationZ",
                      "Type": "UnityEngine.RigidbodyConstraints",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Rigidbody.constraints",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "RigidbodyConstraints.FreezeRotationX | RigidbodyConstraints.FreezeRotationY",
                          "Type": "UnityEngine.RigidbodyConstraints",
                          "Kind": "Use",
                          "UseLine": 40,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_Rigidbody.constraints",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "RigidbodyConstraints.FreezeRotationX",
                              "Type": "UnityEngine.RigidbodyConstraints",
                              "Kind": "Use",
                              "UseLine": 40,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_Rigidbody.constraints",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "RigidbodyConstraints.FreezeRotationY",
                              "Type": "UnityEngine.RigidbodyConstraints",
                              "Kind": "Use",
                              "UseLine": 40,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_Rigidbody.constraints",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "RigidbodyConstraints.FreezeRotationZ",
                          "Type": "UnityEngine.RigidbodyConstraints",
                          "Kind": "Use",
                          "UseLine": 40,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_Rigidbody.constraints",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_GroundCheckDistance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_OrigGroundCheckDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 33
              },
              {
                "Name": "Move",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.Move(UnityEngine.Vector3, bool, bool)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "move",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "crouch",
                    "Type": "bool",
                    "Assignment": null
                  },
                  {
                    "Name": "jump",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Normalize",
                    "FullName": "UnityEngine.Vector3.Normalize()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 52
                  },
                  {
                    "Name": "InverseTransformDirection",
                    "FullName": "UnityEngine.Transform.InverseTransformDirection(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "move",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  },
                  {
                    "Name": "CheckGroundStatus",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.CheckGroundStatus()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 202,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 54
                  },
                  {
                    "Name": "ProjectOnPlane",
                    "FullName": "UnityEngine.Vector3.ProjectOnPlane(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "move",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_GroundNormal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 55
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "move.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "move.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "ApplyExtraTurnRotation",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.ApplyExtraTurnRotation()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 179,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 59
                  },
                  {
                    "Name": "HandleGroundedMovement",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.HandleGroundedMovement(bool, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 166,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "crouch",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "jump",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "HandleAirborneMovement",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.HandleAirborneMovement()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 156,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 68
                  },
                  {
                    "Name": "ScaleCapsuleForCrouching",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.ScaleCapsuleForCrouching(bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 79,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "crouch",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 71
                  },
                  {
                    "Name": "PreventStandingInLowHeadroom",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.PreventStandingInLowHeadroom()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 103,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 72
                  },
                  {
                    "Name": "UpdateAnimator",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.UpdateAnimator(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 118,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "move",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 75
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "move",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.InverseTransformDirection(move)",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "move",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.ProjectOnPlane(move, m_GroundNormal)",
                      "Kind": "Assignment",
                      "AssignmentLine": 54,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TurnAmount",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(move.x, move.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 55,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ForwardAmount",
                      "Type": "float",
                      "Assignment": "move.z",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.InverseTransformDirection(move)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "Invocation",
                      "AssignedTo": "move",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.ProjectOnPlane(move, m_GroundNormal)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 54,
                      "UseKind": "Invocation",
                      "AssignedTo": "move",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Atan2(move.x, move.z)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 55,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_TurnAmount",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "move.z",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_ForwardAmount",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              },
              {
                "Name": "ScaleCapsuleForCrouching",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.ScaleCapsuleForCrouching(bool)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "crouch",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SphereCast",
                    "FullName": "UnityEngine.Physics.SphereCast(UnityEngine.Ray, float, float, int, UnityEngine.QueryTriggerInteraction)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "crouchRay",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Capsule.radius * k_Half",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "crouchRayLength",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Physics.AllLayers",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "QueryTriggerInteraction.Ignore",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 92
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "crouchRay",
                      "Type": "Ray",
                      "Assignment": "new Ray(m_Rigidbody.position + Vector3.up * m_Capsule.radius * k_Half, Vector3.up)",
                      "Kind": "Definition",
                      "DefinitionLine": 89
                    }
                  },
                  {
                    "Variable": {
                      "Name": "crouchRayLength",
                      "Type": "float",
                      "Assignment": "m_CapsuleHeight - m_Capsule.radius * k_Half",
                      "Kind": "Definition",
                      "DefinitionLine": 90
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule.height",
                      "Type": "float",
                      "Assignment": "m_Capsule.height / 2f",
                      "Kind": "Assignment",
                      "AssignmentLine": 83,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule.center",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Capsule.center / 2f",
                      "Kind": "Assignment",
                      "AssignmentLine": 84,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Crouching",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 85,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Crouching",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule.height",
                      "Type": "float",
                      "Assignment": "m_CapsuleHeight",
                      "Kind": "Assignment",
                      "AssignmentLine": 96,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule.center",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_CapsuleCenter",
                      "Kind": "Assignment",
                      "AssignmentLine": 97,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Crouching",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 98,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule.height / 2f",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 83,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Capsule.height",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Capsule.height",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 83,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Capsule.height",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 83,
                          "UseKind": "Literal",
                          "AssignedTo": "m_Capsule.height",
                          "Value": "2f",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Capsule.center / 2f",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 84,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Capsule.center",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Capsule.center",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 84,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Capsule.center",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 84,
                          "UseKind": "Literal",
                          "AssignedTo": "m_Capsule.center",
                          "Value": "2f",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 85,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Crouching",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Crouching",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CapsuleHeight",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 96,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_Capsule.height",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CapsuleCenter",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 97,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_Capsule.center",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 98,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Crouching",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 79
              },
              {
                "Name": "PreventStandingInLowHeadroom",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.PreventStandingInLowHeadroom()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SphereCast",
                    "FullName": "UnityEngine.Physics.SphereCast(UnityEngine.Ray, float, float, int, UnityEngine.QueryTriggerInteraction)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "crouchRay",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Capsule.radius * k_Half",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "crouchRayLength",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Physics.AllLayers",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "QueryTriggerInteraction.Ignore",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 110
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "crouchRay",
                      "Type": "Ray",
                      "Assignment": "new Ray(m_Rigidbody.position + Vector3.up * m_Capsule.radius * k_Half, Vector3.up)",
                      "Kind": "Definition",
                      "DefinitionLine": 107
                    }
                  },
                  {
                    "Variable": {
                      "Name": "crouchRayLength",
                      "Type": "float",
                      "Assignment": "m_CapsuleHeight - m_Capsule.radius * k_Half",
                      "Kind": "Definition",
                      "DefinitionLine": 108
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Crouching",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 111,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 111,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Crouching",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 103
              },
              {
                "Name": "UpdateAnimator",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.UpdateAnimator(UnityEngine.Vector3)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "move",
                    "Type": "Vector3",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetFloat",
                    "FullName": "UnityEngine.Animator.SetFloat(string, float, float, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Forward\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_ForwardAmount",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.1f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Time.deltaTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 121
                  },
                  {
                    "Name": "SetFloat",
                    "FullName": "UnityEngine.Animator.SetFloat(string, float, float, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Turn\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TurnAmount",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.1f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Time.deltaTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 122
                  },
                  {
                    "Name": "SetBool",
                    "FullName": "UnityEngine.Animator.SetBool(string, bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Crouch\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Crouching",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 123
                  },
                  {
                    "Name": "SetBool",
                    "FullName": "UnityEngine.Animator.SetBool(string, bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"OnGround\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_IsGrounded",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 124
                  },
                  {
                    "Name": "SetFloat",
                    "FullName": "UnityEngine.Animator.SetFloat(string, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Jump\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Rigidbody.velocity.y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 127
                  },
                  {
                    "Name": "Repeat",
                    "FullName": "UnityEngine.Mathf.Repeat(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Animator.GetCurrentAnimatorStateInfo(0).normalizedTime + m_RunCycleLegOffset",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 134
                  },
                  {
                    "Name": "GetCurrentAnimatorStateInfo",
                    "FullName": "UnityEngine.Animator.GetCurrentAnimatorStateInfo(int)",
                    "ReturnType": "AnimatorStateInfo",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 135
                  },
                  {
                    "Name": "SetFloat",
                    "FullName": "UnityEngine.Animator.SetFloat(string, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"JumpLeg\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "jumpLeg",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 139
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "runCycle",
                      "Type": "float",
                      "Assignment": "Mathf.Repeat(\r\n\t\t\t\t\tm_Animator.GetCurrentAnimatorStateInfo(0).normalizedTime + m_RunCycleLegOffset, 1)",
                      "Kind": "Definition",
                      "DefinitionLine": 132
                    }
                  },
                  {
                    "Variable": {
                      "Name": "jumpLeg",
                      "Type": "float",
                      "Assignment": "(runCycle < k_Half ? 1 : -1) * m_ForwardAmount",
                      "Kind": "Definition",
                      "DefinitionLine": 135
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Animator.speed",
                      "Type": "float",
                      "Assignment": "m_AnimSpeedMultiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 145,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Animator.speed",
                      "Type": "float",
                      "Assignment": "1",
                      "Kind": "Assignment",
                      "AssignmentLine": 150,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AnimSpeedMultiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 145,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_Animator.speed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 150,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Animator.speed",
                      "Value": "1",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 118
              },
              {
                "Name": "HandleAirborneMovement",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.HandleAirborneMovement()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "AddForce",
                    "FullName": "UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "extraGravityForce",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 160
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "extraGravityForce",
                      "Type": "Vector3",
                      "Assignment": "(Physics.gravity * m_GravityMultiplier) - Physics.gravity",
                      "Kind": "Definition",
                      "DefinitionLine": 158
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_GroundCheckDistance",
                      "Type": "float",
                      "Assignment": "m_Rigidbody.velocity.y < 0 ? m_OrigGroundCheckDistance : 0.01f",
                      "Kind": "Assignment",
                      "AssignmentLine": 161,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.velocity.y < 0 ? m_OrigGroundCheckDistance : 0.01f",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 161,
                      "UseKind": "Conditional",
                      "AssignedTo": "m_GroundCheckDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 156
              },
              {
                "Name": "HandleGroundedMovement",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.HandleGroundedMovement(bool, bool)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "crouch",
                    "Type": "bool",
                    "Assignment": null
                  },
                  {
                    "Name": "jump",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "IsName",
                    "FullName": "UnityEngine.AnimatorStateInfo.IsName(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Grounded\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 169
                  },
                  {
                    "Name": "GetCurrentAnimatorStateInfo",
                    "FullName": "UnityEngine.Animator.GetCurrentAnimatorStateInfo(int)",
                    "ReturnType": "AnimatorStateInfo",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 169
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(m_Rigidbody.velocity.x, m_JumpPower, m_Rigidbody.velocity.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 171,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_IsGrounded",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 172,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Animator.applyRootMotion",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 173,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_GroundCheckDistance",
                      "Type": "float",
                      "Assignment": "0.1f",
                      "Kind": "Assignment",
                      "AssignmentLine": 174,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(m_Rigidbody.velocity.x, m_JumpPower, m_Rigidbody.velocity.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 171,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_Rigidbody.velocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 172,
                      "UseKind": "Literal",
                      "AssignedTo": "m_IsGrounded",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 173,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Animator.applyRootMotion",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 174,
                      "UseKind": "Literal",
                      "AssignedTo": "m_GroundCheckDistance",
                      "Value": "0.1f",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 166
              },
              {
                "Name": "ApplyExtraTurnRotation",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.ApplyExtraTurnRotation()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_StationaryTurnSpeed",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_MovingTurnSpeed",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_ForwardAmount",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 182
                  },
                  {
                    "Name": "Rotate",
                    "FullName": "UnityEngine.Transform.Rotate(float, float, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TurnAmount * turnSpeed * Time.deltaTime",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 183
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "turnSpeed",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(m_StationaryTurnSpeed, m_MovingTurnSpeed, m_ForwardAmount)",
                      "Kind": "Definition",
                      "DefinitionLine": 181
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 179
              },
              {
                "Name": "OnAnimatorMove",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.OnAnimatorMove()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "v",
                      "Type": "Vector3",
                      "Assignment": "(m_Animator.deltaPosition * m_MoveSpeedMultiplier) / Time.deltaTime",
                      "Kind": "Definition",
                      "DefinitionLine": 192
                    }
                  },
                  {
                    "Variable": {
                      "Name": "v.y",
                      "Type": "float",
                      "Assignment": "m_Rigidbody.velocity.y",
                      "Kind": "Assignment",
                      "AssignmentLine": 195,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "v",
                      "Kind": "Assignment",
                      "AssignmentLine": 196,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.velocity.y",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 195,
                      "UseKind": "FieldReference",
                      "AssignedTo": "v.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "v",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 196,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_Rigidbody.velocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 187
              },
              {
                "Name": "CheckGroundStatus",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.CheckGroundStatus()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Vector3, UnityEngine.Vector3, out UnityEngine.RaycastHit, float)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position + (Vector3.up * 0.1f)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Vector3.down",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hitInfo",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_GroundCheckDistance",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 211
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "hitInfo",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 203
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_GroundNormal",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "hitInfo.normal",
                      "Kind": "Assignment",
                      "AssignmentLine": 212,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_IsGrounded",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 213,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Animator.applyRootMotion",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 214,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_IsGrounded",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 218,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_GroundNormal",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.up",
                      "Kind": "Assignment",
                      "AssignmentLine": 219,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Animator.applyRootMotion",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 220,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hitInfo.normal",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 212,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_GroundNormal",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 213,
                      "UseKind": "Literal",
                      "AssignedTo": "m_IsGrounded",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 214,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Animator.applyRootMotion",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 218,
                      "UseKind": "Literal",
                      "AssignedTo": "m_IsGrounded",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.up",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 219,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_GroundNormal",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 220,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Animator.applyRootMotion",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 202
              }
            ],
            "Fields": [
              {
                "Name": "m_MovingTurnSpeed",
                "Type": "float",
                "Modifiers": [],
                "Assignment": "360",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "m_StationaryTurnSpeed",
                "Type": "float",
                "Modifiers": [],
                "Assignment": "180",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "m_JumpPower",
                "Type": "float",
                "Modifiers": [],
                "Assignment": "12f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "m_GravityMultiplier",
                "Type": "float",
                "Modifiers": [],
                "Assignment": "2f",
                "Attributes": [
                  "[Range(1f, 4f)]",
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "m_RunCycleLegOffset",
                "Type": "float",
                "Modifiers": [],
                "Assignment": "0.2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "m_MoveSpeedMultiplier",
                "Type": "float",
                "Modifiers": [],
                "Assignment": "1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "m_AnimSpeedMultiplier",
                "Type": "float",
                "Modifiers": [],
                "Assignment": "1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "m_GroundCheckDistance",
                "Type": "float",
                "Modifiers": [],
                "Assignment": "0.1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "m_Rigidbody",
                "Type": "Rigidbody",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "m_Animator",
                "Type": "Animator",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "m_IsGrounded",
                "Type": "bool",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "m_OrigGroundCheckDistance",
                "Type": "float",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "k_Half",
                "Type": "float",
                "Modifiers": [
                  "const"
                ],
                "Assignment": "0.5f",
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "m_TurnAmount",
                "Type": "float",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "m_ForwardAmount",
                "Type": "float",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "m_GroundNormal",
                "Type": "Vector3",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "m_CapsuleHeight",
                "Type": "float",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "m_CapsuleCenter",
                "Type": "Vector3",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "m_Capsule",
                "Type": "CapsuleCollider",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 29
              },
              {
                "Name": "m_Crouching",
                "Type": "bool",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 30
              }
            ],
            "Line": 5
          }
        ],
        "Usings": [],
        "Line": 3
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      }
    ],
    "Line": 1
  },
  {
    "Name": "ThirdPersonUserControl",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonUserControl.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Characters.ThirdPerson",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ThirdPersonUserControl",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonUserControl.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LogWarning",
                    "FullName": "UnityEngine.Debug.LogWarning(object, UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Warning: no main camera found. Third person character needs a Camera tagged \\\"MainCamera\\\", for camera-relative controls.\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "gameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter>()",
                    "ReturnType": "ThirdPersonCharacter",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 32
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Cam",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "Camera.main.transform",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Character",
                      "Type": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter",
                      "Assignment": "GetComponent<ThirdPersonCharacter>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.main.transform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Cam",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<ThirdPersonCharacter>()",
                      "Type": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Character",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 17
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonUserControl.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetButtonDown",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButtonDown(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 119,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Jump\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Jump",
                      "Type": "bool",
                      "Assignment": "CrossPlatformInputManager.GetButtonDown(\"Jump\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetButtonDown(\"Jump\")",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Jump",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 36
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonUserControl.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Horizontal\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 49
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Vertical\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 50
                  },
                  {
                    "Name": "GetKey",
                    "FullName": "UnityEngine.Input.GetKey(UnityEngine.KeyCode)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "KeyCode.C",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 51
                  },
                  {
                    "Name": "Scale",
                    "FullName": "UnityEngine.Vector3.Scale(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Cam.forward",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new Vector3(1, 0, 1)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 57
                  },
                  {
                    "Name": "GetKey",
                    "FullName": "UnityEngine.Input.GetKey(UnityEngine.KeyCode)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "KeyCode.LeftShift",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 67
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.Move(UnityEngine.Vector3, bool, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Characters\\ThirdPersonCharacter\\Scripts\\ThirdPersonCharacter.cs",
                    "DefinitionLine": 46,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_Move",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "crouch",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Jump",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 71
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "h",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Kind": "Definition",
                      "DefinitionLine": 48
                    }
                  },
                  {
                    "Variable": {
                      "Name": "v",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Vertical\")",
                      "Kind": "Definition",
                      "DefinitionLine": 49
                    }
                  },
                  {
                    "Variable": {
                      "Name": "crouch",
                      "Type": "bool",
                      "Assignment": "Input.GetKey(KeyCode.C)",
                      "Kind": "Definition",
                      "DefinitionLine": 50
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CamForward",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.Scale(m_Cam.forward, new Vector3(1, 0, 1)).normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Move",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "v*m_CamForward + h*m_Cam.right",
                      "Kind": "Assignment",
                      "AssignmentLine": 57,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Move",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "v*Vector3.forward + h*Vector3.right",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Move",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "0.5f",
                      "Kind": "Assignment",
                      "AssignmentLine": 66,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Jump",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 71,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.Scale(m_Cam.forward, new Vector3(1, 0, 1)).normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_CamForward",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "v*m_CamForward + h*m_Cam.right",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 57,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Move",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "v*m_CamForward",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 57,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_Move",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "v",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 57,
                              "UseKind": "LocalReference",
                              "AssignedTo": "m_Move",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_CamForward",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 57,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_Move",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "h*m_Cam.right",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 57,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_Move",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "h",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 57,
                              "UseKind": "LocalReference",
                              "AssignedTo": "m_Move",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_Cam.right",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 57,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "m_Move",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "v*Vector3.forward + h*Vector3.right",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Move",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "v*Vector3.forward",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 62,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_Move",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "v",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 62,
                              "UseKind": "LocalReference",
                              "AssignedTo": "m_Move",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "Vector3.forward",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 62,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "m_Move",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "h*Vector3.right",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 62,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_Move",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "h",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 62,
                              "UseKind": "LocalReference",
                              "AssignedTo": "m_Move",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "Vector3.right",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 62,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "m_Move",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 66,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Move",
                      "Value": "0.5f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 71,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Jump",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              }
            ],
            "Fields": [
              {
                "Name": "m_Character",
                "Type": "ThirdPersonCharacter",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "m_Cam",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "m_CamForward",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "m_Move",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "m_Jump",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AxisTouchButton",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\AxisTouchButton.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AxisTouchButton",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [
              "IPointerDownHandler",
              "IPointerUpHandler"
            ],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.AxisTouchButton.OnEnable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "AxisExists",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.AxisExists(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 47,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "axisName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 21
                  },
                  {
                    "Name": "RegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 57,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_Axis",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "VirtualAxisReference",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxisReference(string)",
                    "ReturnType": "VirtualAxis",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 86,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "axisName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 29
                  },
                  {
                    "Name": "FindPairedButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.AxisTouchButton.FindPairedButton()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\AxisTouchButton.cs",
                    "DefinitionLine": 34,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 31
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Axis",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Assignment": "new CrossPlatformInputManager.VirtualAxis(axisName)",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Axis",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Assignment": "CrossPlatformInputManager.VirtualAxisReference(axisName)",
                      "Kind": "Assignment",
                      "AssignmentLine": 28,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new CrossPlatformInputManager.VirtualAxis(axisName)",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_Axis",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.VirtualAxisReference(axisName)",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Kind": "Use",
                      "UseLine": 28,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Axis",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "FindPairedButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.AxisTouchButton.FindPairedButton()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindObjectsOfType",
                    "FullName": "UnityEngine.Object.FindObjectsOfType(System.Type)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(AxisTouchButton)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "otherAxisButtons",
                      "Type": "var",
                      "Assignment": "FindObjectsOfType(typeof(AxisTouchButton)) as AxisTouchButton[]",
                      "Kind": "Definition",
                      "DefinitionLine": 37
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 41
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PairedWith",
                      "Type": "UnityStandardAssets.CrossPlatformInput.AxisTouchButton",
                      "Assignment": "otherAxisButtons[i]",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "otherAxisButtons[i]",
                      "Type": "UnityStandardAssets.CrossPlatformInput.AxisTouchButton",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "m_PairedWith",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 34
              },
              {
                "Name": "OnDisable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.AxisTouchButton.OnDisable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Remove",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Remove()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 215,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 55
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 52
              },
              {
                "Name": "OnPointerDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.AxisTouchButton.OnPointerDown(PointerEventData)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "data",
                    "Type": "PointerEventData",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "FindPairedButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.AxisTouchButton.FindPairedButton()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\AxisTouchButton.cs",
                    "DefinitionLine": 34,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 63
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Mathf.MoveTowards(m_Axis.GetValue, axisValue, responseSpeed * Time.deltaTime)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 66
                  },
                  {
                    "Name": "MoveTowards",
                    "FullName": "UnityEngine.Mathf.MoveTowards(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Axis.GetValue",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "axisValue",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "responseSpeed * Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 66
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 59
              },
              {
                "Name": "OnPointerUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.AxisTouchButton.OnPointerUp(PointerEventData)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "data",
                    "Type": "PointerEventData",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Mathf.MoveTowards(m_Axis.GetValue, 0, responseSpeed * Time.deltaTime)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 72
                  },
                  {
                    "Name": "MoveTowards",
                    "FullName": "UnityEngine.Mathf.MoveTowards(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Axis.GetValue",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "responseSpeed * Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 72
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 70
              }
            ],
            "Fields": [
              {
                "Name": "axisName",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "\"Horizontal\"",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "axisValue",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "responseSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "3",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "returnToCentreSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "3",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "m_PairedWith",
                "Type": "AxisTouchButton",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_Axis",
                "Type": "CrossPlatformInputManager.VirtualAxis",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.EventSystems",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "ButtonHandler",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\ButtonHandler.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ButtonHandler",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.ButtonHandler.OnEnable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 11
              },
              {
                "Name": "SetDownState",
                "FullName": "UnityStandardAssets.CrossPlatformInput.ButtonHandler.SetDownState()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetButtonDown",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetButtonDown(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 131,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 18
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 16
              },
              {
                "Name": "SetUpState",
                "FullName": "UnityStandardAssets.CrossPlatformInput.ButtonHandler.SetUpState()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetButtonUp",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetButtonUp(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 137,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 24
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "SetAxisPositiveState",
                "FullName": "UnityStandardAssets.CrossPlatformInput.ButtonHandler.SetAxisPositiveState()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetAxisPositive",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetAxisPositive(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 143,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 30
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              },
              {
                "Name": "SetAxisNeutralState",
                "FullName": "UnityStandardAssets.CrossPlatformInput.ButtonHandler.SetAxisNeutralState()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetAxisZero",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetAxisZero(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 155,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 36
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 34
              },
              {
                "Name": "SetAxisNegativeState",
                "FullName": "UnityStandardAssets.CrossPlatformInput.ButtonHandler.SetAxisNegativeState()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetAxisNegative",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetAxisNegative(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 149,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 42
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 40
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.CrossPlatformInput.ButtonHandler.Update()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 45
              }
            ],
            "Fields": [
              {
                "Name": "Name",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "CrossPlatformInputManager",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CrossPlatformInputManager",
            "Modifiers": [
              "public",
              "static"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "mousePosition",
                "Type": "Vector3",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "Line": 167
              },
              {
                "Name": "name",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 196
              },
              {
                "Name": "matchWithInputManager",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 198
              },
              {
                "Name": "GetValue",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 228
              },
              {
                "Name": "GetValueRaw",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 234
              },
              {
                "Name": "name",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Line": 245
              },
              {
                "Name": "matchWithInputManager",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 246
              },
              {
                "Name": "GetButton",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 294
              },
              {
                "Name": "GetButtonDown",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 300
              },
              {
                "Name": "GetButtonUp",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 309
              }
            ],
            "Methods": [
              {
                "Name": "SwitchActiveInputMethod",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SwitchActiveInputMethod(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.ActiveInputMethod)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "activeInputMethod",
                    "Type": "ActiveInputMethod",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "activeInput",
                      "Type": "UnityStandardAssets.CrossPlatformInput.VirtualInput",
                      "Assignment": "s_HardwareInput",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "activeInput",
                      "Type": "UnityStandardAssets.CrossPlatformInput.VirtualInput",
                      "Assignment": "s_TouchInput",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s_HardwareInput",
                      "Type": "UnityStandardAssets.CrossPlatformInput.VirtualInput",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "FieldReference",
                      "AssignedTo": "activeInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s_TouchInput",
                      "Type": "UnityStandardAssets.CrossPlatformInput.VirtualInput",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "FieldReference",
                      "AssignedTo": "activeInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 33
              },
              {
                "Name": "AxisExists",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.AxisExists(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "AxisExists",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.AxisExists(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 22,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 49
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 47
              },
              {
                "Name": "ButtonExists",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.ButtonExists(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ButtonExists",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.ButtonExists(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 27,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 52
              },
              {
                "Name": "RegisterVirtualAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "axis",
                    "Type": "VirtualAxis",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "RegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 33,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "axis",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 57
              },
              {
                "Name": "RegisterVirtualButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualButton(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "button",
                    "Type": "VirtualButton",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "RegisterVirtualButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.RegisterVirtualButton(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 54,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "button",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 65
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 63
              },
              {
                "Name": "UnRegisterVirtualAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.UnRegisterVirtualAxis(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "UnRegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.UnRegisterVirtualAxis(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 75,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 75
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 69
              },
              {
                "Name": "UnRegisterVirtualButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.UnRegisterVirtualButton(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "UnRegisterVirtualButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.UnRegisterVirtualButton(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 85,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 81
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 79
              },
              {
                "Name": "VirtualAxisReference",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxisReference(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "VirtualAxis",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "VirtualAxisReference",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.VirtualAxisReference(string)",
                    "ReturnType": "VirtualAxis",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 96,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 88
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 86
              },
              {
                "Name": "GetAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string, bool)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 106,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 95
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 93
              },
              {
                "Name": "GetAxisRaw",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxisRaw(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string, bool)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 106,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 101
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 99
              },
              {
                "Name": "GetAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string, bool)",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "raw",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.GetAxis(string, bool)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 120,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "raw",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 108
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 106
              },
              {
                "Name": "GetButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButton(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.GetButton(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 122,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 115
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 113
              },
              {
                "Name": "GetButtonDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButtonDown(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetButtonDown",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.GetButtonDown(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 123,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 121
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 119
              },
              {
                "Name": "GetButtonUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButtonUp(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetButtonUp",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.GetButtonUp(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 124,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 127
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 125
              },
              {
                "Name": "SetButtonDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetButtonDown(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetButtonDown",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetButtonDown(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 126,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 133
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 131
              },
              {
                "Name": "SetButtonUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetButtonUp(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetButtonUp",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetButtonUp(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 127,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 139
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 137
              },
              {
                "Name": "SetAxisPositive",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetAxisPositive(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetAxisPositive",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetAxisPositive(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 128,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 145
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 143
              },
              {
                "Name": "SetAxisNegative",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetAxisNegative(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetAxisNegative",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetAxisNegative(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 129,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 151
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 149
              },
              {
                "Name": "SetAxisZero",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetAxisZero(string)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetAxisZero",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetAxisZero(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 130,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 157
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 155
              },
              {
                "Name": "SetAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetAxis(string, float)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "value",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetAxis(string, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 131,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "value",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 163
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 161
              },
              {
                "Name": "SetVirtualMousePositionX",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetVirtualMousePositionX(float)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetVirtualMousePositionX",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetVirtualMousePositionX(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 102,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 175
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 173
              },
              {
                "Name": "SetVirtualMousePositionY",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetVirtualMousePositionY(float)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetVirtualMousePositionY",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetVirtualMousePositionY(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 108,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 181
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 179
              },
              {
                "Name": "SetVirtualMousePositionZ",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetVirtualMousePositionZ(float)",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetVirtualMousePositionZ",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetVirtualMousePositionZ(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
                    "DefinitionLine": 114,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 187
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 185
              },
              {
                "Name": "Remove",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Remove()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "UnRegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.UnRegisterVirtualAxis(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 69,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 217
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 215
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Value",
                      "Type": "float",
                      "Assignment": "value",
                      "Kind": "Assignment",
                      "AssignmentLine": 223,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "value",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 223,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "m_Value",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 222
              },
              {
                "Name": "Pressed",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton.Pressed()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Pressed",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 272,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LastPressedFrame",
                      "Type": "int",
                      "Assignment": "Time.frameCount",
                      "Kind": "Assignment",
                      "AssignmentLine": 273,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 272,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Pressed",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.frameCount",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 273,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_LastPressedFrame",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 267
              },
              {
                "Name": "Released",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton.Released()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Pressed",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 280,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ReleasedFrame",
                      "Type": "int",
                      "Assignment": "Time.frameCount",
                      "Kind": "Assignment",
                      "AssignmentLine": 281,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 280,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Pressed",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.frameCount",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 281,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_ReleasedFrame",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 279
              },
              {
                "Name": "Remove",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton.Remove()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "UnRegisterVirtualButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.UnRegisterVirtualButton(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 79,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 289
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 287
              }
            ],
            "Fields": [
              {
                "Name": "activeInput",
                "Type": "VirtualInput",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "s_TouchInput",
                "Type": "VirtualInput",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "s_HardwareInput",
                "Type": "VirtualInput",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "m_Value",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 197
              },
              {
                "Name": "m_LastPressedFrame",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "-5",
                "Attributes": [],
                "Line": 248
              },
              {
                "Name": "m_ReleasedFrame",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "-5",
                "Attributes": [],
                "Line": 249
              },
              {
                "Name": "m_Pressed",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 250
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "InputAxisScrollbar",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\InputAxisScrollbar.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "InputAxisScrollbar",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.CrossPlatformInput.InputAxisScrollbar.Update()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 10
              },
              {
                "Name": "HandleInput",
                "FullName": "UnityStandardAssets.CrossPlatformInput.InputAxisScrollbar.HandleInput(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetAxis(string, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 161,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "axis",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "(value*2f) - 1f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 14
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 12
              }
            ],
            "Fields": [
              {
                "Name": "axis",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 8
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "Joystick",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\Joystick.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Joystick",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [
              "IPointerDownHandler",
              "IPointerUpHandler",
              "IDragHandler"
            ],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.OnEnable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CreateVirtualAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.CreateVirtualAxes()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\Joystick.cs",
                    "DefinitionLine": 54,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 30
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              },
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.Start()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_StartPos",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_StartPos",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 33
              },
              {
                "Name": "UpdateVirtualAxes",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.UpdateVirtualAxes(UnityEngine.Vector3)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "Vector3",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "-delta.x",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 45
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "delta.y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 50
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "var",
                      "Assignment": "m_StartPos - value",
                      "Kind": "Definition",
                      "DefinitionLine": 39
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta.y",
                      "Type": "float",
                      "Assignment": "-delta.y",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "MovementRange",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "DivideAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-delta.y",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "delta.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "MovementRange",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "FieldReference",
                      "AssignedTo": "delta",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 38
              },
              {
                "Name": "CreateVirtualAxes",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.CreateVirtualAxes()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 57,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_HorizontalVirtualAxis",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "RegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 57,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_VerticalVirtualAxis",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 69
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_UseX",
                      "Type": "bool",
                      "Assignment": "(axesToUse == AxisOption.Both || axesToUse == AxisOption.OnlyHorizontal)",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_UseY",
                      "Type": "bool",
                      "Assignment": "(axesToUse == AxisOption.Both || axesToUse == AxisOption.OnlyVertical)",
                      "Kind": "Assignment",
                      "AssignmentLine": 57,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HorizontalVirtualAxis",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Assignment": "new CrossPlatformInputManager.VirtualAxis(horizontalAxisName)",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_VerticalVirtualAxis",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Assignment": "new CrossPlatformInputManager.VirtualAxis(verticalAxisName)",
                      "Kind": "Assignment",
                      "AssignmentLine": 67,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(axesToUse == AxisOption.Both || axesToUse == AxisOption.OnlyHorizontal)",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": null,
                      "AssignedTo": "m_UseX",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(axesToUse == AxisOption.Both || axesToUse == AxisOption.OnlyVertical)",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 57,
                      "UseKind": null,
                      "AssignedTo": "m_UseY",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new CrossPlatformInputManager.VirtualAxis(horizontalAxisName)",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_HorizontalVirtualAxis",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new CrossPlatformInputManager.VirtualAxis(verticalAxisName)",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Kind": "Use",
                      "UseLine": 67,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_VerticalVirtualAxis",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 54
              },
              {
                "Name": "OnDrag",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.OnDrag(PointerEventData)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "data",
                    "Type": "PointerEventData",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(int, int, int)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "delta",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "- MovementRange",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "MovementRange",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 81
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(int, int, int)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "delta",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-MovementRange",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "MovementRange",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 88
                  },
                  {
                    "Name": "UpdateVirtualAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.UpdateVirtualAxes(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\Joystick.cs",
                    "DefinitionLine": 38,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 92
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "newPos",
                      "Type": "Vector3",
                      "Assignment": "Vector3.zero",
                      "Kind": "Definition",
                      "DefinitionLine": 75
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "int",
                      "Assignment": "(int)(data.position.x - m_StartPos.x)",
                      "Kind": "Definition",
                      "DefinitionLine": 79
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "int",
                      "Assignment": "(int)(data.position.y - m_StartPos.y)",
                      "Kind": "Definition",
                      "DefinitionLine": 86
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "int",
                      "Assignment": "Mathf.Clamp(delta, - MovementRange, MovementRange)",
                      "Kind": "Assignment",
                      "AssignmentLine": 80,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newPos.x",
                      "Type": "float",
                      "Assignment": "delta",
                      "Kind": "Assignment",
                      "AssignmentLine": 81,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "int",
                      "Assignment": "Mathf.Clamp(delta, -MovementRange, MovementRange)",
                      "Kind": "Assignment",
                      "AssignmentLine": 87,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newPos.y",
                      "Type": "float",
                      "Assignment": "delta",
                      "Kind": "Assignment",
                      "AssignmentLine": 88,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(m_StartPos.x + newPos.x, m_StartPos.y + newPos.y, m_StartPos.z + newPos.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 90,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(delta, - MovementRange, MovementRange)",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 80,
                      "UseKind": "Invocation",
                      "AssignedTo": "delta",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 81,
                      "UseKind": "LocalReference",
                      "AssignedTo": "newPos.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(delta, -MovementRange, MovementRange)",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 87,
                      "UseKind": "Invocation",
                      "AssignedTo": "delta",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 88,
                      "UseKind": "LocalReference",
                      "AssignedTo": "newPos.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(m_StartPos.x + newPos.x, m_StartPos.y + newPos.y, m_StartPos.z + newPos.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 90,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 74
              },
              {
                "Name": "OnPointerUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.OnPointerUp(PointerEventData)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "data",
                    "Type": "PointerEventData",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "UpdateVirtualAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.UpdateVirtualAxes(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\Joystick.cs",
                    "DefinitionLine": 38,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_StartPos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 99
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_StartPos",
                      "Kind": "Assignment",
                      "AssignmentLine": 97,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_StartPos",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 97,
                      "UseKind": "FieldReference",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 96
              },
              {
                "Name": "OnPointerDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.OnPointerDown(PointerEventData)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "data",
                    "Type": "PointerEventData",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 103
              },
              {
                "Name": "OnDisable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Joystick.OnDisable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Remove",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Remove()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 215,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 110
                  },
                  {
                    "Name": "Remove",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Remove()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 215,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 114
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 105
              }
            ],
            "Fields": [
              {
                "Name": "MovementRange",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "100",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "axesToUse",
                "Type": "AxisOption",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "AxisOption.Both",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "horizontalAxisName",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "\"Horizontal\"",
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "verticalAxisName",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "\"Vertical\"",
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "m_StartPos",
                "Type": "Vector3",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "m_UseX",
                "Type": "bool",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "m_UseY",
                "Type": "bool",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "m_HorizontalVirtualAxis",
                "Type": "CrossPlatformInputManager.VirtualAxis",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "m_VerticalVirtualAxis",
                "Type": "CrossPlatformInputManager.VirtualAxis",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.EventSystems",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "MobileControlRig",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\MobileControlRig.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "MobileControlRig",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.MobileControlRig.OnEnable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckEnableControlRig",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.MobileControlRig.CheckEnableControlRig()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\MobileControlRig.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 26
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.CrossPlatformInput.MobileControlRig.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindObjectOfType",
                    "FullName": "UnityEngine.Object.FindObjectOfType<UnityEngine.EventSystems.EventSystem>()",
                    "ReturnType": "EventSystem",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 44
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent<UnityEngine.EventSystems.EventSystem>()",
                    "ReturnType": "EventSystem",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 50
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent<UnityEngine.EventSystems.StandaloneInputModule>()",
                    "ReturnType": "StandaloneInputModule",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 51
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "system",
                      "Type": "UnityEngine.EventSystems.EventSystem",
                      "Assignment": "GameObject.FindObjectOfType<UnityEngine.EventSystems.EventSystem>()",
                      "Kind": "Definition",
                      "DefinitionLine": 43
                    }
                  },
                  {
                    "Variable": {
                      "Name": "o",
                      "Type": "GameObject",
                      "Assignment": "new GameObject(\"EventSystem\")",
                      "Kind": "Definition",
                      "DefinitionLine": 47
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 38
              },
              {
                "Name": "CheckEnableControlRig",
                "FullName": "UnityStandardAssets.CrossPlatformInput.MobileControlRig.CheckEnableControlRig()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "EnableControlRig",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.MobileControlRig.EnableControlRig(bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\MobileControlRig.cs",
                    "DefinitionLine": 87,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 82
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 77
              },
              {
                "Name": "EnableControlRig",
                "FullName": "UnityStandardAssets.CrossPlatformInput.MobileControlRig.EnableControlRig(bool)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "enabled",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "enabled",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 91
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 87
              }
            ],
            "Fields": [],
            "Line": 10
          }
        ],
        "Usings": [],
        "Line": 8
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "TiltInput",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\TiltInput.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "TiltInput",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TiltInput.OnEnable()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 57,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_SteerAxis",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 51
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_SteerAxis",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Assignment": "new CrossPlatformInputManager.VirtualAxis(mapping.axisName)",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new CrossPlatformInputManager.VirtualAxis(mapping.axisName)",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_SteerAxis",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TiltInput.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Input.acceleration.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-Input.acceleration.y",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Input.acceleration.z",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-Input.acceleration.y",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 68
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "-fullTiltAngle",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "fullTiltAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "angle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 74
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "axisValue",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 78
                  },
                  {
                    "Name": "SetVirtualMousePositionX",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetVirtualMousePositionX(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 173,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "axisValue*Screen.width",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 81
                  },
                  {
                    "Name": "SetVirtualMousePositionY",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetVirtualMousePositionY(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 179,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "axisValue*Screen.width",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 84
                  },
                  {
                    "Name": "SetVirtualMousePositionZ",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.SetVirtualMousePositionZ(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 185,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "axisValue*Screen.width",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 87
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "angle",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 57
                    }
                  },
                  {
                    "Variable": {
                      "Name": "axisValue",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(-fullTiltAngle, fullTiltAngle, angle)*2 - 1",
                      "Kind": "Definition",
                      "DefinitionLine": 73
                    }
                  },
                  {
                    "Variable": {
                      "Name": "angle",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(Input.acceleration.x, -Input.acceleration.y)*Mathf.Rad2Deg +\r\n                                centreAngleOffset",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "angle",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(Input.acceleration.z, -Input.acceleration.y)*Mathf.Rad2Deg +\r\n                                centreAngleOffset",
                      "Kind": "Assignment",
                      "AssignmentLine": 67,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Atan2(Input.acceleration.x, -Input.acceleration.y)*Mathf.Rad2Deg +\r\n                                centreAngleOffset",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "angle",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Mathf.Atan2(Input.acceleration.x, -Input.acceleration.y)*Mathf.Rad2Deg",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 63,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "angle",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "Mathf.Atan2(Input.acceleration.x, -Input.acceleration.y)",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 63,
                              "UseKind": "Invocation",
                              "AssignedTo": "angle",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "Mathf.Rad2Deg",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 63,
                              "UseKind": "FieldReference",
                              "AssignedTo": "angle",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "centreAngleOffset",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 63,
                          "UseKind": "FieldReference",
                          "AssignedTo": "angle",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Atan2(Input.acceleration.z, -Input.acceleration.y)*Mathf.Rad2Deg +\r\n                                centreAngleOffset",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 67,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "angle",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Mathf.Atan2(Input.acceleration.z, -Input.acceleration.y)*Mathf.Rad2Deg",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 67,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "angle",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "Mathf.Atan2(Input.acceleration.z, -Input.acceleration.y)",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 67,
                              "UseKind": "Invocation",
                              "AssignedTo": "angle",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "Mathf.Rad2Deg",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 67,
                              "UseKind": "FieldReference",
                              "AssignedTo": "angle",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "centreAngleOffset",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 67,
                          "UseKind": "FieldReference",
                          "AssignedTo": "angle",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 56
              },
              {
                "Name": "OnDisable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TiltInput.OnDisable()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Remove",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Remove()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 215,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 95
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 93
              }
            ],
            "Fields": [
              {
                "Name": "type",
                "Type": "MappingType",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 32
              },
              {
                "Name": "axisName",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 33
              },
              {
                "Name": "mapping",
                "Type": "AxisMapping",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "tiltAroundAxis",
                "Type": "AxisOptions",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "AxisOptions.ForwardAxis",
                "Attributes": [],
                "Line": 38
              },
              {
                "Name": "fullTiltAngle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "25",
                "Attributes": [],
                "Line": 39
              },
              {
                "Name": "centreAngleOffset",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 40
              },
              {
                "Name": "m_SteerAxis",
                "Type": "CrossPlatformInputManager.VirtualAxis",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 43
              }
            ],
            "Line": 10
          }
        ],
        "Usings": [],
        "Line": 7
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput.Inspector",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [],
        "Usings": [],
        "Line": 101
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "TouchPad",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\TouchPad.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "TouchPad",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [
              "IPointerDownHandler",
              "IPointerUpHandler"
            ],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.OnEnable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CreateVirtualAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.CreateVirtualAxes()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\TouchPad.cs",
                    "DefinitionLine": 67,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 56
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 54
              },
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.Start()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Image>()",
                    "ReturnType": "Image",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 62
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Image",
                      "Type": "Image",
                      "Assignment": "GetComponent<Image>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 61,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Center",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Image.transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Image>()",
                      "Type": "Image",
                      "Kind": "Use",
                      "UseLine": 61,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Image",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Image.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "Invalid",
                      "AssignedTo": "m_Center",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 59
              },
              {
                "Name": "CreateVirtualAxes",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.CreateVirtualAxes()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 57,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_HorizontalVirtualAxis",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 77
                  },
                  {
                    "Name": "RegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 57,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_VerticalVirtualAxis",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 82
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_UseX",
                      "Type": "bool",
                      "Assignment": "(axesToUse == AxisOption.Both || axesToUse == AxisOption.OnlyHorizontal)",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_UseY",
                      "Type": "bool",
                      "Assignment": "(axesToUse == AxisOption.Both || axesToUse == AxisOption.OnlyVertical)",
                      "Kind": "Assignment",
                      "AssignmentLine": 70,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HorizontalVirtualAxis",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Assignment": "new CrossPlatformInputManager.VirtualAxis(horizontalAxisName)",
                      "Kind": "Assignment",
                      "AssignmentLine": 75,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_VerticalVirtualAxis",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Assignment": "new CrossPlatformInputManager.VirtualAxis(verticalAxisName)",
                      "Kind": "Assignment",
                      "AssignmentLine": 80,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(axesToUse == AxisOption.Both || axesToUse == AxisOption.OnlyHorizontal)",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": null,
                      "AssignedTo": "m_UseX",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(axesToUse == AxisOption.Both || axesToUse == AxisOption.OnlyVertical)",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 70,
                      "UseKind": null,
                      "AssignedTo": "m_UseY",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new CrossPlatformInputManager.VirtualAxis(horizontalAxisName)",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Kind": "Use",
                      "UseLine": 75,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_HorizontalVirtualAxis",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new CrossPlatformInputManager.VirtualAxis(verticalAxisName)",
                      "Type": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis",
                      "Kind": "Use",
                      "UseLine": 80,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_VerticalVirtualAxis",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 67
              },
              {
                "Name": "UpdateVirtualAxes",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.UpdateVirtualAxes(UnityEngine.Vector3)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "value",
                    "Type": "Vector3",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "value.x",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 91
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "value.y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 96
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "value",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "value.normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 87,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "value.normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 87,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "value",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 86
              },
              {
                "Name": "OnPointerDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.OnPointerDown(PointerEventData)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "data",
                    "Type": "PointerEventData",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Dragging",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 102,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Id",
                      "Type": "int",
                      "Assignment": "data.pointerId",
                      "Kind": "Assignment",
                      "AssignmentLine": 103,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Center",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "data.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 106,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 102,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Dragging",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "data.pointerId",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 103,
                      "UseKind": "Invalid",
                      "AssignedTo": "m_Id",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "data.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 106,
                      "UseKind": "Invalid",
                      "AssignedTo": "m_Center",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 101
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.Update()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "UpdateVirtualAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.UpdateVirtualAxes(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\TouchPad.cs",
                    "DefinitionLine": 86,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "new Vector3(pointerDelta.x, pointerDelta.y, 0)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 135
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "pointerDelta",
                      "Type": "Vector2",
                      "Assignment": "new Vector2(Input.touches[m_Id].position.x - m_Center.x , Input.touches[m_Id].position.y - m_Center.y).normalized",
                      "Kind": "Definition",
                      "DefinitionLine": 125
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Center",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_PreviousTouchPos",
                      "Kind": "Assignment",
                      "AssignmentLine": 122,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PreviousTouchPos",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "Input.touches[m_Id].position",
                      "Kind": "Assignment",
                      "AssignmentLine": 123,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pointerDelta.x",
                      "Type": "float",
                      "Assignment": "Xsensitivity",
                      "Kind": "Assignment",
                      "AssignmentLine": 126,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pointerDelta.y",
                      "Type": "float",
                      "Assignment": "Ysensitivity",
                      "Kind": "Assignment",
                      "AssignmentLine": 127,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PreviousTouchPos",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 122,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_Center",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Input.touches[m_Id].position",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 123,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_PreviousTouchPos",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Xsensitivity",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 126,
                      "UseKind": "FieldReference",
                      "AssignedTo": "pointerDelta.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Ysensitivity",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 127,
                      "UseKind": "FieldReference",
                      "AssignedTo": "pointerDelta.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 111
              },
              {
                "Name": "OnPointerUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.OnPointerUp(PointerEventData)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "data",
                    "Type": "PointerEventData",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "UpdateVirtualAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.UpdateVirtualAxes(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\TouchPad.cs",
                    "DefinitionLine": 86,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "Vector3.zero",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 144
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Dragging",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 141,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Id",
                      "Type": "int",
                      "Assignment": "-1",
                      "Kind": "Assignment",
                      "AssignmentLine": 142,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 141,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Dragging",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-1",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 142,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "m_Id",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 140
              },
              {
                "Name": "OnDisable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.TouchPad.OnDisable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "AxisExists",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.AxisExists(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 47,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "horizontalAxisName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 149
                  },
                  {
                    "Name": "UnRegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.UnRegisterVirtualAxis(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 69,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "horizontalAxisName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 150
                  },
                  {
                    "Name": "AxisExists",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.AxisExists(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 47,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "verticalAxisName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 152
                  },
                  {
                    "Name": "UnRegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.UnRegisterVirtualAxis(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 69,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "verticalAxisName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 153
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 147
              }
            ],
            "Fields": [
              {
                "Name": "axesToUse",
                "Type": "AxisOption",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "AxisOption.Both",
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "controlStyle",
                "Type": "ControlStyle",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "ControlStyle.Absolute",
                "Attributes": [],
                "Line": 29
              },
              {
                "Name": "horizontalAxisName",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "\"Horizontal\"",
                "Attributes": [],
                "Line": 30
              },
              {
                "Name": "verticalAxisName",
                "Type": "string",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "\"Vertical\"",
                "Attributes": [],
                "Line": 31
              },
              {
                "Name": "Xsensitivity",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 32
              },
              {
                "Name": "Ysensitivity",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 33
              },
              {
                "Name": "m_StartPos",
                "Type": "Vector3",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 35
              },
              {
                "Name": "m_PreviousDelta",
                "Type": "Vector2",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 36
              },
              {
                "Name": "m_JoytickOutput",
                "Type": "Vector3",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "m_UseX",
                "Type": "bool",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 38
              },
              {
                "Name": "m_UseY",
                "Type": "bool",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 39
              },
              {
                "Name": "m_HorizontalVirtualAxis",
                "Type": "CrossPlatformInputManager.VirtualAxis",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 40
              },
              {
                "Name": "m_VerticalVirtualAxis",
                "Type": "CrossPlatformInputManager.VirtualAxis",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 41
              },
              {
                "Name": "m_Dragging",
                "Type": "bool",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 42
              },
              {
                "Name": "m_Id",
                "Type": "int",
                "Modifiers": [],
                "Assignment": "-1",
                "Attributes": [],
                "Line": 43
              },
              {
                "Name": "m_PreviousTouchPos",
                "Type": "Vector2",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 44
              },
              {
                "Name": "m_Center",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 48
              },
              {
                "Name": "m_Image",
                "Type": "Image",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 49
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.EventSystems",
        "Line": 3
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "VirtualInput",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\VirtualInput.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "VirtualInput",
            "Modifiers": [
              "public",
              "abstract"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "virtualMousePosition",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Line": 10
              }
            ],
            "Methods": [
              {
                "Name": "AxisExists",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.AxisExists(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 24
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "ButtonExists",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.ButtonExists(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 29
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              },
              {
                "Name": "RegisterVirtualAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "axis",
                    "Type": "CrossPlatformInputManager.VirtualAxis",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "axis.name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 36
                  },
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"There is already a virtual axis named \" + axis.name + \" registered.\"",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.Add(string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "axis.name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "axis",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 43
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<string>.Add(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "axis.name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 48
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 33
              },
              {
                "Name": "RegisterVirtualButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.RegisterVirtualButton(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "button",
                    "Type": "CrossPlatformInputManager.VirtualButton",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "button.name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 57
                  },
                  {
                    "Name": "LogError",
                    "FullName": "UnityEngine.Debug.LogError(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"There is already a virtual button named \" + button.name + \" registered.\"",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.Add(string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "button.name",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "button",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<string>.Add(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "button.name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 69
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 54
              },
              {
                "Name": "UnRegisterVirtualAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.UnRegisterVirtualAxis(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 78
                  },
                  {
                    "Name": "Remove",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.Remove(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 80
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 75
              },
              {
                "Name": "UnRegisterVirtualButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.UnRegisterVirtualButton(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 88
                  },
                  {
                    "Name": "Remove",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.Remove(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 90
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 85
              },
              {
                "Name": "VirtualAxisReference",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.VirtualAxisReference(string)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "CrossPlatformInputManager.VirtualAxis",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 98
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 96
              },
              {
                "Name": "SetVirtualMousePositionX",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetVirtualMousePositionX(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "virtualMousePosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(f, virtualMousePosition.y, virtualMousePosition.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 103,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(f, virtualMousePosition.y, virtualMousePosition.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 103,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "virtualMousePosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 102
              },
              {
                "Name": "SetVirtualMousePositionY",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetVirtualMousePositionY(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "virtualMousePosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(virtualMousePosition.x, f, virtualMousePosition.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 109,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(virtualMousePosition.x, f, virtualMousePosition.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 109,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "virtualMousePosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 108
              },
              {
                "Name": "SetVirtualMousePositionZ",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetVirtualMousePositionZ(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "f",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "virtualMousePosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(virtualMousePosition.x, virtualMousePosition.y, f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 115,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(virtualMousePosition.x, virtualMousePosition.y, f)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 115,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "virtualMousePosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 114
              },
              {
                "Name": "GetAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.GetAxis(string, bool)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "raw",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 120
              },
              {
                "Name": "GetButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.GetButton(string)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 122
              },
              {
                "Name": "GetButtonDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.GetButtonDown(string)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 123
              },
              {
                "Name": "GetButtonUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.GetButtonUp(string)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 124
              },
              {
                "Name": "SetButtonDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetButtonDown(string)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 126
              },
              {
                "Name": "SetButtonUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetButtonUp(string)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 127
              },
              {
                "Name": "SetAxisPositive",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetAxisPositive(string)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 128
              },
              {
                "Name": "SetAxisNegative",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetAxisNegative(string)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 129
              },
              {
                "Name": "SetAxisZero",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetAxisZero(string)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 130
              },
              {
                "Name": "SetAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.SetAxis(string, float)",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "value",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 131
              },
              {
                "Name": "MousePosition",
                "FullName": "UnityStandardAssets.CrossPlatformInput.VirtualInput.MousePosition()",
                "Modifiers": [
                  "public",
                  "abstract"
                ],
                "ReturnType": "Vector3",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 132
              }
            ],
            "Fields": [
              {
                "Name": "m_VirtualAxes",
                "Type": "Dictionary<string, CrossPlatformInputManager.VirtualAxis>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, CrossPlatformInputManager.VirtualAxis>()",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "m_VirtualButtons",
                "Type": "Dictionary<string, CrossPlatformInputManager.VirtualButton>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new Dictionary<string, CrossPlatformInputManager.VirtualButton>()",
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_AlwaysUseVirtual",
                "Type": "List<string>",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": "new List<string>()",
                "Attributes": [],
                "Line": 18
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "MobileInput",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "MobileInput",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "VirtualInput",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "AddButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddButton(string)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "RegisterVirtualButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualButton(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 63,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "new CrossPlatformInputManager.VirtualButton(name)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 11
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 8
              },
              {
                "Name": "AddAxes",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddAxes(string)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "RegisterVirtualAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.RegisterVirtualAxis(UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 57,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "new CrossPlatformInputManager.VirtualAxis(name)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 18
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 15
              },
              {
                "Name": "GetAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.GetAxis(string, bool)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "raw",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 24
                  },
                  {
                    "Name": "AddAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddAxes(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "SetButtonDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.SetButtonDown(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  },
                  {
                    "Name": "AddButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddButton(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 8,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 36
                  },
                  {
                    "Name": "Pressed",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton.Pressed()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 267,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 38
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 32
              },
              {
                "Name": "SetButtonUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.SetButtonUp(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 44
                  },
                  {
                    "Name": "AddButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddButton(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 8,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "Released",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton.Released()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 279,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 48
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 42
              },
              {
                "Name": "SetAxisPositive",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.SetAxisPositive(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  },
                  {
                    "Name": "AddAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddAxes(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "1f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 58
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 52
              },
              {
                "Name": "SetAxisNegative",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.SetAxisNegative(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "AddAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddAxes(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 66
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "-1f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 68
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 62
              },
              {
                "Name": "SetAxisZero",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.SetAxisZero(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 74
                  },
                  {
                    "Name": "AddAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddAxes(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 76
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 78
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 72
              },
              {
                "Name": "SetAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.SetAxis(string, float)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "value",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 84
                  },
                  {
                    "Name": "AddAxes",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddAxes(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 86
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualAxis.Update(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 222,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "value",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 88
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 82
              },
              {
                "Name": "GetButtonDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.GetButtonDown(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 94
                  },
                  {
                    "Name": "AddButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddButton(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 8,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 99
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 92
              },
              {
                "Name": "GetButtonUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.GetButtonUp(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 106
                  },
                  {
                    "Name": "AddButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddButton(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 8,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 111
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 104
              },
              {
                "Name": "GetButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.GetButton(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<string, UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.VirtualButton>.ContainsKey(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 118
                  },
                  {
                    "Name": "AddButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.AddButton(string)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\MobileInput.cs",
                    "DefinitionLine": 8,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 123
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 116
              },
              {
                "Name": "MousePosition",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.MobileInput.MousePosition()",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "Vector3",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 128
              }
            ],
            "Fields": [],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "StandaloneInput",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\PlatformSpecific\\StandaloneInput.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "StandaloneInput",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "VirtualInput",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "GetAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.GetAxis(string, bool)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "raw",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetAxisRaw",
                    "FullName": "UnityEngine.Input.GetAxisRaw(string)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 10
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityEngine.Input.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 10
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 8
              },
              {
                "Name": "GetButton",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.GetButton(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetButton",
                    "FullName": "UnityEngine.Input.GetButton(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 16
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "GetButtonDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.GetButtonDown(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetButtonDown",
                    "FullName": "UnityEngine.Input.GetButtonDown(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 22
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 20
              },
              {
                "Name": "GetButtonUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.GetButtonUp(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "bool",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetButtonUp",
                    "FullName": "UnityEngine.Input.GetButtonUp(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 26
              },
              {
                "Name": "SetButtonDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.SetButtonDown(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 32
              },
              {
                "Name": "SetButtonUp",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.SetButtonUp(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 39
              },
              {
                "Name": "SetAxisPositive",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.SetAxisPositive(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              },
              {
                "Name": "SetAxisNegative",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.SetAxisNegative(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 53
              },
              {
                "Name": "SetAxisZero",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.SetAxisZero(string)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 60
              },
              {
                "Name": "SetAxis",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.SetAxis(string, float)",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "value",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 67
              },
              {
                "Name": "MousePosition",
                "FullName": "UnityStandardAssets.CrossPlatformInput.PlatformSpecific.StandaloneInput.MousePosition()",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "Vector3",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 74
              }
            ],
            "Fields": [],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "CrossPlatformInputInitialize",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\CrossPlatformInput\\CrossPlatformInputInitialize.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.CrossPlatformInput.Inspector",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CrossPlatformInitialize",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Enable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.Enable()",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetEnabled",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.SetEnabled(string, bool, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\CrossPlatformInput\\CrossPlatformInputInitialize.cs",
                    "DefinitionLine": 97,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"MOBILE_INPUT\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 30
                  },
                  {
                    "Name": "DisplayDialog",
                    "FullName": "UnityEditor.EditorUtility.DisplayDialog(string, string, string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Mobile Input\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"You have enabled Mobile Input. You'll need to use the Unity Remote app on a connected device to control your game in the Editor.\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"OK\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 36
                  },
                  {
                    "Name": "DisplayDialog",
                    "FullName": "UnityEditor.EditorUtility.DisplayDialog(string, string, string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Mobile Input\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"You have enabled Mobile Input, but you have a non-mobile build target selected in your build settings. The mobile control rigs won't be active or visible on-screen until you switch the build target to a mobile platform.\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"OK\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 42
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              },
              {
                "Name": "EnableValidate",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.EnableValidate()",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "bool",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetDefinesList",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.GetDefinesList(UnityEditor.BuildTargetGroup)",
                    "ReturnType": "List",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\CrossPlatformInput\\CrossPlatformInputInitialize.cs",
                    "DefinitionLine": 128,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "mobileBuildTargetGroups[0]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  },
                  {
                    "Name": "Contains",
                    "FullName": "System.Collections.Generic.List<string>.Contains(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "\"MOBILE_INPUT\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "defines",
                      "Type": "var",
                      "Assignment": "GetDefinesList(mobileBuildTargetGroups[0])",
                      "Kind": "Definition",
                      "DefinitionLine": 52
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 50
              },
              {
                "Name": "Disable",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.Disable()",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetEnabled",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.SetEnabled(string, bool, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\CrossPlatformInput\\CrossPlatformInputInitialize.cs",
                    "DefinitionLine": 97,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"MOBILE_INPUT\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 61
                  },
                  {
                    "Name": "DisplayDialog",
                    "FullName": "UnityEditor.EditorUtility.DisplayDialog(string, string, string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Mobile Input\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"You have disabled Mobile Input. Mobile control rigs won't be visible, and the Cross Platform Input functions will always return standalone controls.\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "\"OK\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 66
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 58
              },
              {
                "Name": "DisableValidate",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.DisableValidate()",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "bool",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetDefinesList",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.GetDefinesList(UnityEditor.BuildTargetGroup)",
                    "ReturnType": "List",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\CrossPlatformInput\\CrossPlatformInputInitialize.cs",
                    "DefinitionLine": 128,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "mobileBuildTargetGroups[0]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 77
                  },
                  {
                    "Name": "Contains",
                    "FullName": "System.Collections.Generic.List<string>.Contains(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "\"MOBILE_INPUT\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 78
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "defines",
                      "Type": "var",
                      "Assignment": "GetDefinesList(mobileBuildTargetGroups[0])",
                      "Kind": "Definition",
                      "DefinitionLine": 76
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 74
              },
              {
                "Name": "SetEnabled",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.SetEnabled(string, bool, bool)",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "defineName",
                    "Type": "string",
                    "Assignment": null
                  },
                  {
                    "Name": "enable",
                    "Type": "bool",
                    "Assignment": null
                  },
                  {
                    "Name": "mobile",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetDefinesList",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.GetDefinesList(UnityEditor.BuildTargetGroup)",
                    "ReturnType": "List",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\CrossPlatformInput\\CrossPlatformInputInitialize.cs",
                    "DefinitionLine": 128,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "group",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 102
                  },
                  {
                    "Name": "Contains",
                    "FullName": "System.Collections.Generic.List<string>.Contains(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "defineName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 105
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<string>.Add(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "defineName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 109
                  },
                  {
                    "Name": "Contains",
                    "FullName": "System.Collections.Generic.List<string>.Contains(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "defineName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 113
                  },
                  {
                    "Name": "Contains",
                    "FullName": "System.Collections.Generic.List<string>.Contains(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "defineName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 117
                  },
                  {
                    "Name": "Remove",
                    "FullName": "System.Collections.Generic.List<string>.Remove(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "defineName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 119
                  },
                  {
                    "Name": "Join",
                    "FullName": "string.Join(string, params string[])",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "\";\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "defines.ToArray()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 122
                  },
                  {
                    "Name": "ToArray",
                    "FullName": "System.Collections.Generic.List<string>.ToArray()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 122
                  },
                  {
                    "Name": "SetScriptingDefineSymbolsForGroup",
                    "FullName": "UnityEditor.PlayerSettings.SetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup, string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "group",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "definesString",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 123
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "defines",
                      "Type": "var",
                      "Assignment": "GetDefinesList(group)",
                      "Kind": "Definition",
                      "DefinitionLine": 101
                    }
                  },
                  {
                    "Variable": {
                      "Name": "definesString",
                      "Type": "string",
                      "Assignment": "string.Join(\";\", defines.ToArray())",
                      "Kind": "Definition",
                      "DefinitionLine": 121
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 97
              },
              {
                "Name": "GetDefinesList",
                "FullName": "UnityStandardAssets.CrossPlatformInput.Inspector.CrossPlatformInitialize.GetDefinesList(UnityEditor.BuildTargetGroup)",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "List<string>",
                "Parameters": [
                  {
                    "Name": "group",
                    "Type": "BuildTargetGroup",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Split",
                    "FullName": "string.Split(params char[])",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "';'",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  },
                  {
                    "Name": "GetScriptingDefineSymbolsForGroup",
                    "FullName": "UnityEditor.PlayerSettings.GetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "group",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 128
              }
            ],
            "Fields": [
              {
                "Name": "buildTargetGroups",
                "Type": "BuildTargetGroup[]",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "Assignment": "new BuildTargetGroup[]\r\n            {\r\n                BuildTargetGroup.Standalone,\r\n                BuildTargetGroup.Android,\r\n                BuildTargetGroup.iOS\r\n            }",
                "Attributes": [],
                "Line": 82
              },
              {
                "Name": "mobileBuildTargetGroups",
                "Type": "BuildTargetGroup[]",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "Assignment": "new BuildTargetGroup[]\r\n            {\r\n                BuildTargetGroup.Android,\r\n                BuildTargetGroup.iOS,\r\n                BuildTargetGroup.WSA\r\n            }",
                "Attributes": [],
                "Line": 89
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEditor",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "GerstnerDisplaceEditor",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\GerstnerDisplaceEditor.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "GerstnerDisplaceEditor",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Editor",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Water.GerstnerDisplaceEditor.OnEnable()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "serObj",
                      "Type": "UnityEditor.SerializedObject",
                      "Assignment": "new SerializedObject(target)",
                      "Kind": "Assignment",
                      "AssignmentLine": 14,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new SerializedObject(target)",
                      "Type": "UnityEditor.SerializedObject",
                      "Kind": "Use",
                      "UseLine": 14,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "serObj",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              },
              {
                "Name": "OnInspectorGUI",
                "FullName": "UnityStandardAssets.Water.GerstnerDisplaceEditor.OnInspectorGUI()",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Update",
                    "FullName": "UnityEditor.SerializedObject.Update()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 20
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(WaterBase)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 23
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Animates vertices using up 4 generated waves\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.miniBoldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GAmplitude\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 30
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GFrequency\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 31
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GSteepness\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GSpeed\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GDirectionAB\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GDirectionCD\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 35
                  },
                  {
                    "Name": "Vector4Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector4Field(string, UnityEngine.Vector4, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Amplitude (Height offset)\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "amplitude",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": "Vector4Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector4Field(string, UnityEngine.Vector4, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Frequency (Tiling)\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "frequency",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "Vector4Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector4Field(string, UnityEngine.Vector4, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Steepness\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "steepness",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 39
                  },
                  {
                    "Name": "Vector4Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector4Field(string, UnityEngine.Vector4, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Speed\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "speed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "Vector4Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector4Field(string, UnityEngine.Vector4, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Direction scale (Wave 1 (X,Y) and 2 (Z,W))\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "directionAB",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 41
                  },
                  {
                    "Name": "Vector4Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector4Field(string, UnityEngine.Vector4, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Direction scale (Wave 3 (X,Y) and 4 (Z,W))\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "directionCD",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 42
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GAmplitude\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "amplitude",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GFrequency\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "frequency",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 47
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GSteepness\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "steepness",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 48
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GSpeed\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "speed",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 49
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GDirectionAB\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "directionAB",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 50
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GDirectionCD\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "directionCD",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "sharedWaterMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 51
                  },
                  {
                    "Name": "ApplyModifiedProperties",
                    "FullName": "UnityEditor.SerializedObject.ApplyModifiedProperties()",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 105
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "go",
                      "Type": "GameObject",
                      "Assignment": "((GerstnerDisplace)serObj.targetObject).gameObject",
                      "Kind": "Definition",
                      "DefinitionLine": 21
                    }
                  },
                  {
                    "Variable": {
                      "Name": "wb",
                      "Type": "WaterBase",
                      "Assignment": "(WaterBase)go.GetComponent(typeof(WaterBase))",
                      "Kind": "Definition",
                      "DefinitionLine": 22
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sharedWaterMaterial",
                      "Type": "Material",
                      "Assignment": "wb.sharedMaterial",
                      "Kind": "Definition",
                      "DefinitionLine": 23
                    }
                  },
                  {
                    "Variable": {
                      "Name": "amplitude",
                      "Type": "Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_GAmplitude\", sharedWaterMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 29
                    }
                  },
                  {
                    "Variable": {
                      "Name": "frequency",
                      "Type": "Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_GFrequency\", sharedWaterMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 30
                    }
                  },
                  {
                    "Variable": {
                      "Name": "steepness",
                      "Type": "Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_GSteepness\", sharedWaterMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 31
                    }
                  },
                  {
                    "Variable": {
                      "Name": "speed",
                      "Type": "Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_GSpeed\", sharedWaterMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 32
                    }
                  },
                  {
                    "Variable": {
                      "Name": "directionAB",
                      "Type": "Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_GDirectionAB\", sharedWaterMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 33
                    }
                  },
                  {
                    "Variable": {
                      "Name": "directionCD",
                      "Type": "Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_GDirectionCD\", sharedWaterMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 34
                    }
                  },
                  {
                    "Variable": {
                      "Name": "amplitude",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "EditorGUILayout.Vector4Field(\"Amplitude (Height offset)\", amplitude)",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "frequency",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "EditorGUILayout.Vector4Field(\"Frequency (Tiling)\", frequency)",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "steepness",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "EditorGUILayout.Vector4Field(\"Steepness\", steepness)",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "speed",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "EditorGUILayout.Vector4Field(\"Speed\", speed)",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "directionAB",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "EditorGUILayout.Vector4Field(\"Direction scale (Wave 1 (X,Y) and 2 (Z,W))\", directionAB)",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "directionCD",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "EditorGUILayout.Vector4Field(\"Direction scale (Wave 3 (X,Y) and 4 (Z,W))\", directionCD)",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector4Field(\"Amplitude (Height offset)\", amplitude)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "Invocation",
                      "AssignedTo": "amplitude",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector4Field(\"Frequency (Tiling)\", frequency)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "Invocation",
                      "AssignedTo": "frequency",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector4Field(\"Steepness\", steepness)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "Invocation",
                      "AssignedTo": "steepness",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector4Field(\"Speed\", speed)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Invocation",
                      "AssignedTo": "speed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector4Field(\"Direction scale (Wave 1 (X,Y) and 2 (Z,W))\", directionAB)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "Invocation",
                      "AssignedTo": "directionAB",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector4Field(\"Direction scale (Wave 3 (X,Y) and 4 (Z,W))\", directionCD)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Invocation",
                      "AssignedTo": "directionCD",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              }
            ],
            "Fields": [
              {
                "Name": "serObj",
                "Type": "SerializedObject",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      },
      {
        "Name": "System",
        "Line": 2
      },
      {
        "Name": "UnityEditor",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlanarReflectionEditor",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\PlanarReflectionEditor.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PlanarReflectionEditor",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Editor",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Water.PlanarReflectionEditor.OnEnable()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindProperty",
                    "FullName": "UnityEditor.SerializedObject.FindProperty(string)",
                    "ReturnType": "SerializedProperty",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"reflectionMask\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "FindProperty",
                    "FullName": "UnityEditor.SerializedObject.FindProperty(string)",
                    "ReturnType": "SerializedProperty",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"reflectSkybox\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  },
                  {
                    "Name": "FindProperty",
                    "FullName": "UnityEditor.SerializedObject.FindProperty(string)",
                    "ReturnType": "SerializedProperty",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"clearColor\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 27
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "serObj",
                      "Type": "UnityEditor.SerializedObject",
                      "Assignment": "new SerializedObject(target)",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMask",
                      "Type": "UnityEditor.SerializedProperty",
                      "Assignment": "serObj.FindProperty(\"reflectionMask\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectSkybox",
                      "Type": "UnityEditor.SerializedProperty",
                      "Assignment": "serObj.FindProperty(\"reflectSkybox\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "clearColor",
                      "Type": "UnityEditor.SerializedProperty",
                      "Assignment": "serObj.FindProperty(\"clearColor\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new SerializedObject(target)",
                      "Type": "UnityEditor.SerializedObject",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "serObj",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "serObj.FindProperty(\"reflectionMask\")",
                      "Type": "UnityEditor.SerializedProperty",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "Invocation",
                      "AssignedTo": "reflectionMask",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "serObj.FindProperty(\"reflectSkybox\")",
                      "Type": "UnityEditor.SerializedProperty",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "Invocation",
                      "AssignedTo": "reflectSkybox",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "serObj.FindProperty(\"clearColor\")",
                      "Type": "UnityEditor.SerializedProperty",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "Invocation",
                      "AssignedTo": "clearColor",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "OnInspectorGUI",
                "FullName": "UnityStandardAssets.Water.PlanarReflectionEditor.OnInspectorGUI()",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Render planar reflections and use GrabPass for refractions\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.miniBoldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityEditor.SerializedObject.Update()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 34
                  },
                  {
                    "Name": "PropertyField",
                    "FullName": "UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty, UnityEngine.GUIContent, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "reflectionMask",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new GUIContent(\"Reflection layers\")",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 36
                  },
                  {
                    "Name": "PropertyField",
                    "FullName": "UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty, UnityEngine.GUIContent, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "reflectSkybox",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new GUIContent(\"Use skybox\")",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": "PropertyField",
                    "FullName": "UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty, UnityEngine.GUIContent, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "clearColor",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new GUIContent(\"Clear color\")",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "BeginToggleGroup",
                    "FullName": "UnityEditor.EditorGUILayout.BeginToggleGroup(string, bool)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Show all tiles\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "showKidsWithReflectionHint",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Water.WaterTile>()",
                    "ReturnType": "WaterTile",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 46
                  },
                  {
                    "Name": "BeginHorizontal",
                    "FullName": "UnityEditor.EditorGUILayout.BeginHorizontal(params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Rect",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 49
                  },
                  {
                    "Name": "ObjectField",
                    "FullName": "UnityEditor.EditorGUILayout.ObjectField(UnityEngine.Object, System.Type, bool, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Object",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "t",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "typeof(Transform)",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 50
                  },
                  {
                    "Name": "EndHorizontal",
                    "FullName": "UnityEditor.EditorGUILayout.EndHorizontal()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 52
                  },
                  {
                    "Name": "EndHorizontal",
                    "FullName": "UnityEditor.EditorGUILayout.EndHorizontal()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 57
                  },
                  {
                    "Name": "EndToggleGroup",
                    "FullName": "UnityEditor.EditorGUILayout.EndToggleGroup()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 59
                  },
                  {
                    "Name": "ApplyModifiedProperties",
                    "FullName": "UnityEditor.SerializedObject.ApplyModifiedProperties()",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 61
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 42
                    }
                  },
                  {
                    "Variable": {
                      "Name": "showKidsWithReflectionHint",
                      "Type": "bool",
                      "Assignment": "EditorGUILayout.BeginToggleGroup(\"Show all tiles\", showKidsWithReflectionHint)",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "(i + 1) % 2",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.BeginToggleGroup(\"Show all tiles\", showKidsWithReflectionHint)",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Invocation",
                      "AssignedTo": "showKidsWithReflectionHint",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(i + 1) % 2",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "i",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "i + 1",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 52,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "i",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "i",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 52,
                              "UseKind": "LocalReference",
                              "AssignedTo": "i",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": null,
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 52,
                              "UseKind": "Literal",
                              "AssignedTo": "i",
                              "Value": "1",
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 52,
                          "UseKind": "Literal",
                          "AssignedTo": "i",
                          "Value": "2",
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              }
            ],
            "Fields": [
              {
                "Name": "serObj",
                "Type": "SerializedObject",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "reflectionMask",
                "Type": "SerializedProperty",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "reflectSkybox",
                "Type": "SerializedProperty",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "clearColor",
                "Type": "SerializedProperty",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "showKidsWithReflectionHint",
                "Type": "bool",
                "Modifiers": [],
                "Assignment": "false",
                "Attributes": [],
                "Line": 19
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      },
      {
        "Name": "UnityEditor",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "SpecularLightingEditor",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\SpecularLightingEditor.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SpecularLightingEditor",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Editor",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Water.SpecularLightingEditor.OnEnable()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindProperty",
                    "FullName": "UnityEditor.SerializedObject.FindProperty(string)",
                    "ReturnType": "SerializedProperty",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"specularLight\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 15
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "serObj",
                      "Type": "UnityEditor.SerializedObject",
                      "Assignment": "new SerializedObject(target)",
                      "Kind": "Assignment",
                      "AssignmentLine": 13,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "specularLight",
                      "Type": "UnityEditor.SerializedProperty",
                      "Assignment": "serObj.FindProperty(\"specularLight\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 14,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new SerializedObject(target)",
                      "Type": "UnityEditor.SerializedObject",
                      "Kind": "Use",
                      "UseLine": 13,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "serObj",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "serObj.FindProperty(\"specularLight\")",
                      "Type": "UnityEditor.SerializedProperty",
                      "Kind": "Use",
                      "UseLine": 14,
                      "UseKind": "Invocation",
                      "AssignedTo": "specularLight",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 12
              },
              {
                "Name": "OnInspectorGUI",
                "FullName": "UnityStandardAssets.Water.SpecularLightingEditor.OnInspectorGUI()",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Update",
                    "FullName": "UnityEditor.SerializedObject.Update()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 20
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(WaterBase)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 23
                  },
                  {
                    "Name": "HasProperty",
                    "FullName": "UnityEngine.Material.HasProperty(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_WorldLightDir\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Transform casting specular highlights\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.miniBoldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 30
                  },
                  {
                    "Name": "PropertyField",
                    "FullName": "UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty, UnityEngine.GUIContent, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "specularLight",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new GUIContent(\"Specular light\")",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 31
                  },
                  {
                    "Name": "HasProperty",
                    "FullName": "UnityEngine.Material.HasProperty(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_SpecularColor\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "SetMaterialColor",
                    "FullName": "WaterEditorUtility.SetMaterialColor(string, UnityEngine.Color, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 18,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_SpecularColor\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorGUILayout.ColorField(\"Specular\",\r\n                        WaterEditorUtility.GetMaterialColor(\"_SpecularColor\", wb.sharedMaterial))",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "wb.sharedMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  },
                  {
                    "Name": "ColorField",
                    "FullName": "UnityEditor.EditorGUILayout.ColorField(string, UnityEngine.Color, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Color",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Specular\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "WaterEditorUtility.GetMaterialColor(\"_SpecularColor\", wb.sharedMaterial)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 36
                  },
                  {
                    "Name": "GetMaterialColor",
                    "FullName": "WaterEditorUtility.GetMaterialColor(string, UnityEngine.Material)",
                    "ReturnType": "Color",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_SpecularColor\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "wb.sharedMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": "HasProperty",
                    "FullName": "UnityEngine.Material.HasProperty(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_Shininess\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 39
                  },
                  {
                    "Name": "SetMaterialFloat",
                    "FullName": "WaterEditorUtility.SetMaterialFloat(string, float, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 11,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_Shininess\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorGUILayout.Slider(\r\n                        \"Specular power\",\r\n                        WaterEditorUtility.GetMaterialFloat(\"_Shininess\", wb.sharedMaterial),\r\n                        0.0F, 500.0F)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "wb.sharedMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Specular power\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "WaterEditorUtility.GetMaterialFloat(\"_Shininess\", wb.sharedMaterial)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0.0F",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "500.0F",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "GetMaterialFloat",
                    "FullName": "WaterEditorUtility.GetMaterialFloat(string, UnityEngine.Material)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 8,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_Shininess\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "wb.sharedMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 42
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"The shader doesn't have the needed _WorldLightDir property.\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.miniBoldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "ApplyModifiedProperties",
                    "FullName": "UnityEditor.SerializedObject.ApplyModifiedProperties()",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 48
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "go",
                      "Type": "GameObject",
                      "Assignment": "((SpecularLighting)serObj.targetObject).gameObject",
                      "Kind": "Definition",
                      "DefinitionLine": 21
                    }
                  },
                  {
                    "Variable": {
                      "Name": "wb",
                      "Type": "WaterBase",
                      "Assignment": "(WaterBase)go.GetComponent(typeof(WaterBase))",
                      "Kind": "Definition",
                      "DefinitionLine": 22
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              }
            ],
            "Fields": [
              {
                "Name": "serObj",
                "Type": "SerializedObject",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "specularLight",
                "Type": "SerializedProperty",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      },
      {
        "Name": "UnityEditor",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "WaterBaseEditor",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterBaseEditor.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WaterBaseEditor",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Editor",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Water.WaterBaseEditor.OnEnable()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindProperty",
                    "FullName": "UnityEditor.SerializedObject.FindProperty(string)",
                    "ReturnType": "SerializedProperty",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"sharedMaterial\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 24
                  },
                  {
                    "Name": "FindProperty",
                    "FullName": "UnityEditor.SerializedObject.FindProperty(string)",
                    "ReturnType": "SerializedProperty",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"waterQuality\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "FindProperty",
                    "FullName": "UnityEditor.SerializedObject.FindProperty(string)",
                    "ReturnType": "SerializedProperty",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"edgeBlend\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "serObj",
                      "Type": "UnityEditor.SerializedObject",
                      "Assignment": "new SerializedObject(target)",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sharedMaterial",
                      "Type": "UnityEditor.SerializedProperty",
                      "Assignment": "serObj.FindProperty(\"sharedMaterial\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waterQuality",
                      "Type": "UnityEditor.SerializedProperty",
                      "Assignment": "serObj.FindProperty(\"waterQuality\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "edgeBlend",
                      "Type": "UnityEditor.SerializedProperty",
                      "Assignment": "serObj.FindProperty(\"edgeBlend\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new SerializedObject(target)",
                      "Type": "UnityEditor.SerializedObject",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "serObj",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "serObj.FindProperty(\"sharedMaterial\")",
                      "Type": "UnityEditor.SerializedProperty",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "Invocation",
                      "AssignedTo": "sharedMaterial",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "serObj.FindProperty(\"waterQuality\")",
                      "Type": "UnityEditor.SerializedProperty",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "Invocation",
                      "AssignedTo": "waterQuality",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "serObj.FindProperty(\"edgeBlend\")",
                      "Type": "UnityEditor.SerializedProperty",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "Invocation",
                      "AssignedTo": "edgeBlend",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "OnInspectorGUI",
                "FullName": "UnityStandardAssets.Water.WaterBaseEditor.OnInspectorGUI()",
                "Modifiers": [
                  "public",
                  "override"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Update",
                    "FullName": "UnityEditor.SerializedObject.Update()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 31
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"This script helps adjusting water material properties\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.miniBoldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "PropertyField",
                    "FullName": "UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty, UnityEngine.GUIContent, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "sharedMaterial",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new GUIContent(\"Material\")",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "LocateValidWaterMaterial",
                    "FullName": "WaterEditorUtility.LocateValidWaterMaterial(UnityEngine.Transform)",
                    "ReturnType": "Material",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 34,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "oceanBase.transform",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 45
                  },
                  {
                    "Name": "ApplyModifiedProperties",
                    "FullName": "UnityEditor.SerializedObject.ApplyModifiedProperties()",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 46
                  },
                  {
                    "Name": "Separator",
                    "FullName": "UnityEditor.EditorGUILayout.Separator()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 52
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Overall Quality\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.boldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  },
                  {
                    "Name": "PropertyField",
                    "FullName": "UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty, UnityEngine.GUIContent, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "waterQuality",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new GUIContent(\"Quality\")",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 55
                  },
                  {
                    "Name": "PropertyField",
                    "FullName": "UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty, UnityEngine.GUIContent, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "edgeBlend",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new GUIContent(\"Edge blend?\")",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "HelpBox",
                    "FullName": "UnityEditor.EditorGUILayout.HelpBox(string, UnityEditor.MessageType)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Water features not supported\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "MessageType.Warning",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "SupportsRenderTextureFormat",
                    "FullName": "UnityEngine.SystemInfo.SupportsRenderTextureFormat(UnityEngine.RenderTextureFormat)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "RenderTextureFormat.Depth",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 60
                  },
                  {
                    "Name": "HelpBox",
                    "FullName": "UnityEditor.EditorGUILayout.HelpBox(string, UnityEditor.MessageType)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Edge blend not supported\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "MessageType.Warning",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 61
                  },
                  {
                    "Name": "Separator",
                    "FullName": "UnityEditor.EditorGUILayout.Separator()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 63
                  },
                  {
                    "Name": "HasProperty",
                    "FullName": "UnityEngine.Material.HasProperty(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_ShoreTex\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 65
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Main Colors\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.boldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 67
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Alpha values define blending with realtime textures\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.miniBoldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 68
                  },
                  {
                    "Name": "SetMaterialColor",
                    "FullName": "WaterEditorUtility.SetMaterialColor(string, UnityEngine.Color, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 18,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_BaseColor\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorGUILayout.ColorField(\"Refraction\", WaterEditorUtility.GetMaterialColor(\"_BaseColor\", oceanMaterial))",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 70
                  },
                  {
                    "Name": "ColorField",
                    "FullName": "UnityEditor.EditorGUILayout.ColorField(string, UnityEngine.Color, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Color",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Refraction\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "WaterEditorUtility.GetMaterialColor(\"_BaseColor\", oceanMaterial)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 70
                  },
                  {
                    "Name": "GetMaterialColor",
                    "FullName": "WaterEditorUtility.GetMaterialColor(string, UnityEngine.Material)",
                    "ReturnType": "Color",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_BaseColor\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 70
                  },
                  {
                    "Name": "SetMaterialColor",
                    "FullName": "WaterEditorUtility.SetMaterialColor(string, UnityEngine.Color, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 18,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_ReflectionColor\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorGUILayout.ColorField(\"Reflection\", WaterEditorUtility.GetMaterialColor(\"_ReflectionColor\", oceanMaterial))",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 71
                  },
                  {
                    "Name": "ColorField",
                    "FullName": "UnityEditor.EditorGUILayout.ColorField(string, UnityEngine.Color, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Color",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Reflection\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "WaterEditorUtility.GetMaterialColor(\"_ReflectionColor\", oceanMaterial)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 71
                  },
                  {
                    "Name": "GetMaterialColor",
                    "FullName": "WaterEditorUtility.GetMaterialColor(string, UnityEngine.Material)",
                    "ReturnType": "Color",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 15,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_ReflectionColor\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 71
                  },
                  {
                    "Name": "Separator",
                    "FullName": "UnityEditor.EditorGUILayout.Separator()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 73
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Main Textures\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.boldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 75
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Used for small waves (bumps), foam and white caps\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.miniBoldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 76
                  },
                  {
                    "Name": "SetMaterialTexture",
                    "FullName": "WaterEditorUtility.SetMaterialTexture(string, UnityEngine.Texture, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 30,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_BumpMap\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "(Texture)EditorGUILayout.ObjectField(\"Normals\", WaterEditorUtility.GetMaterialTexture(\"_BumpMap\", waterBase.sharedMaterial), typeof(Texture), false)",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "waterBase.sharedMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 78
                  },
                  {
                    "Name": "ObjectField",
                    "FullName": "UnityEditor.EditorGUILayout.ObjectField(string, UnityEngine.Object, System.Type, bool, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Object",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Normals\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "WaterEditorUtility.GetMaterialTexture(\"_BumpMap\", waterBase.sharedMaterial)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "typeof(Texture)",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 78
                  },
                  {
                    "Name": "GetMaterialTexture",
                    "FullName": "WaterEditorUtility.GetMaterialTexture(string, UnityEngine.Material)",
                    "ReturnType": "Texture",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 27,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_BumpMap\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "waterBase.sharedMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 78
                  },
                  {
                    "Name": "SetMaterialTexture",
                    "FullName": "WaterEditorUtility.SetMaterialTexture(string, UnityEngine.Texture, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 30,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_ShoreTex\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "(Texture)EditorGUILayout.ObjectField(\"Shore & Foam\", WaterEditorUtility.GetMaterialTexture(\"_ShoreTex\", waterBase.sharedMaterial), typeof(Texture), false)",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "waterBase.sharedMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 80
                  },
                  {
                    "Name": "ObjectField",
                    "FullName": "UnityEditor.EditorGUILayout.ObjectField(string, UnityEngine.Object, System.Type, bool, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Object",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Shore & Foam\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "WaterEditorUtility.GetMaterialTexture(\"_ShoreTex\", waterBase.sharedMaterial)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "typeof(Texture)",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 80
                  },
                  {
                    "Name": "GetMaterialTexture",
                    "FullName": "WaterEditorUtility.GetMaterialTexture(string, UnityEngine.Material)",
                    "ReturnType": "Texture",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 27,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_ShoreTex\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "waterBase.sharedMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 80
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_BumpTiling\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 90
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_BumpDirection\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 91
                  },
                  {
                    "Name": "Vector2Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector2Field(string, UnityEngine.Vector2, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector2",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Tiling 1\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "firstTiling",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 96
                  },
                  {
                    "Name": "Vector2Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector2Field(string, UnityEngine.Vector2, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector2",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Tiling 2\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "secondTiling",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 97
                  },
                  {
                    "Name": "Vector2Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector2Field(string, UnityEngine.Vector2, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector2",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Direction 1\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "firstDirection",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 112
                  },
                  {
                    "Name": "Vector2Field",
                    "FullName": "UnityEditor.EditorGUILayout.Vector2Field(string, UnityEngine.Vector2, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Vector2",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Direction 2\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "secondDirection",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 113
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_BumpTiling\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "animationTiling",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 118
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_BumpDirection\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "animationDirection",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 119
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_DistortParams\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 121
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_InvFadeParemeter\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 122
                  },
                  {
                    "Name": "Separator",
                    "FullName": "UnityEditor.EditorGUILayout.Separator()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 124
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Normals\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.boldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 126
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Displacement for fresnel, specular and reflection/refraction\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.miniBoldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 127
                  },
                  {
                    "Name": "GetMaterialFloat",
                    "FullName": "WaterEditorUtility.GetMaterialFloat(string, UnityEngine.Material)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 8,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GerstnerIntensity\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 129
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Per Vertex\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "gerstnerNormalIntensity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-2.5F",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "2.5F",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  },
                  {
                    "Name": "SetMaterialFloat",
                    "FullName": "WaterEditorUtility.SetMaterialFloat(string, float, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 11,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_GerstnerIntensity\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "gerstnerNormalIntensity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 131
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Per Pixel\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "displacementParameter.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-4.0F",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "4.0F",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 133
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Distortion\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "displacementParameter.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-0.5F",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0.5F",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 134
                  },
                  {
                    "Name": "Separator",
                    "FullName": "UnityEditor.EditorGUILayout.Separator()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 137
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Fresnel\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.boldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 139
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Defines reflection to refraction relation\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.miniBoldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 140
                  },
                  {
                    "Name": "HasProperty",
                    "FullName": "UnityEngine.Material.HasProperty(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_Fresnel\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 142
                  },
                  {
                    "Name": "HasProperty",
                    "FullName": "UnityEngine.Material.HasProperty(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_FresnelScale\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 144
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Intensity\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "WaterEditorUtility.GetMaterialFloat(\"_FresnelScale\", oceanMaterial)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0.1F",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "4.0F",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 146
                  },
                  {
                    "Name": "GetMaterialFloat",
                    "FullName": "WaterEditorUtility.GetMaterialFloat(string, UnityEngine.Material)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 8,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_FresnelScale\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 146
                  },
                  {
                    "Name": "SetMaterialFloat",
                    "FullName": "WaterEditorUtility.SetMaterialFloat(string, float, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 11,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_FresnelScale\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fresnelScale",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 147
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Power\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "displacementParameter.z",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.1F",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "10.0F",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 149
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Bias\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "displacementParameter.w",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-3.0F",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "3.0F",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 150
                  },
                  {
                    "Name": "ObjectField",
                    "FullName": "UnityEditor.EditorGUILayout.ObjectField(string, UnityEngine.Object, System.Type, bool, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Object",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Ramp\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "(Texture)WaterEditorUtility.GetMaterialTexture(\"_Fresnel\",\r\n                        oceanMaterial)",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "typeof(Texture)",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 154
                  },
                  {
                    "Name": "GetMaterialTexture",
                    "FullName": "WaterEditorUtility.GetMaterialTexture(string, UnityEngine.Material)",
                    "ReturnType": "Texture",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 27,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_Fresnel\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 156
                  },
                  {
                    "Name": "SetMaterialTexture",
                    "FullName": "WaterEditorUtility.SetMaterialTexture(string, UnityEngine.Texture, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 30,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_Fresnel\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fresnelTex",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 160
                  },
                  {
                    "Name": "Separator",
                    "FullName": "UnityEditor.EditorGUILayout.Separator()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 163
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_DistortParams\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "displacementParameter",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 165
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Fading\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.boldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 169
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Edge fade\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fade.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.001f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "3.0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 171
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Shore fade\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fade.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.001f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "3.0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 173
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Extinction fade\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fade.w",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "2.5f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 174
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_InvFadeParemeter\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fade",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 176
                  },
                  {
                    "Name": "Separator",
                    "FullName": "UnityEditor.EditorGUILayout.Separator()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 178
                  },
                  {
                    "Name": "HasProperty",
                    "FullName": "UnityEngine.Material.HasProperty(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_Foam\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 180
                  },
                  {
                    "Name": "Label",
                    "FullName": "UnityEngine.GUILayout.Label(string, UnityEngine.GUIStyle, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.IMGUIModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Foam\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "EditorStyles.boldLabel",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 182
                  },
                  {
                    "Name": "GetMaterialVector",
                    "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_Foam\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 184
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Intensity\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "foam.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.0F",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1.0F",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 186
                  },
                  {
                    "Name": "Slider",
                    "FullName": "UnityEditor.EditorGUILayout.Slider(string, float, float, float, params UnityEngine.GUILayoutOption[])",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Cutoff\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "foam.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.0F",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1.0F",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 187
                  },
                  {
                    "Name": "SetMaterialVector",
                    "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
                    "DefinitionLine": 24,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"_Foam\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "foam",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "oceanMaterial",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 189
                  },
                  {
                    "Name": "ApplyModifiedProperties",
                    "FullName": "UnityEditor.SerializedObject.ApplyModifiedProperties()",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEditor.CoreModule.dll",
                    "Arguments": [],
                    "Line": 192
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "hasShore",
                      "Type": "bool",
                      "Assignment": "oceanMaterial.HasProperty(\"_ShoreTex\")",
                      "Kind": "Definition",
                      "DefinitionLine": 64
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animationTiling",
                      "Type": "Vector4",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 81
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animationDirection",
                      "Type": "Vector4",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 82
                    }
                  },
                  {
                    "Variable": {
                      "Name": "firstTiling",
                      "Type": "Vector2",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 84
                    }
                  },
                  {
                    "Variable": {
                      "Name": "secondTiling",
                      "Type": "Vector2",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 85
                    }
                  },
                  {
                    "Variable": {
                      "Name": "firstDirection",
                      "Type": "Vector2",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 86
                    }
                  },
                  {
                    "Variable": {
                      "Name": "secondDirection",
                      "Type": "Vector2",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 87
                    }
                  },
                  {
                    "Variable": {
                      "Name": "displacementParameter",
                      "Type": "Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_DistortParams\", oceanMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 120
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fade",
                      "Type": "Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_InvFadeParemeter\", oceanMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 121
                    }
                  },
                  {
                    "Variable": {
                      "Name": "gerstnerNormalIntensity",
                      "Type": "float",
                      "Assignment": "WaterEditorUtility.GetMaterialFloat(\"_GerstnerIntensity\", oceanMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 128
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fresnelScale",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Intensity\", WaterEditorUtility.GetMaterialFloat(\"_FresnelScale\", oceanMaterial), 0.1F, 4.0F)",
                      "Kind": "Definition",
                      "DefinitionLine": 145
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fresnelTex",
                      "Type": "Texture",
                      "Assignment": "(Texture)EditorGUILayout.ObjectField(\r\n                        \"Ramp\",\r\n                        (Texture)WaterEditorUtility.GetMaterialTexture(\"_Fresnel\",\r\n                        oceanMaterial),\r\n                        typeof(Texture),\r\n                        false)",
                      "Kind": "Definition",
                      "DefinitionLine": 153
                    }
                  },
                  {
                    "Variable": {
                      "Name": "foam",
                      "Type": "Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_Foam\", oceanMaterial)",
                      "Kind": "Definition",
                      "DefinitionLine": 183
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waterBase",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Assignment": "(WaterBase)serObj.targetObject",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oceanBase",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "((WaterBase)serObj.targetObject).gameObject",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oceanMaterial",
                      "Type": "UnityEngine.Material",
                      "Assignment": "(Material)sharedMaterial.objectReferenceValue",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sharedMaterial.objectReferenceValue",
                      "Type": "UnityEngine.Object",
                      "Assignment": "(Object)WaterEditorUtility.LocateValidWaterMaterial(oceanBase.transform)",
                      "Kind": "Assignment",
                      "AssignmentLine": 44,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oceanMaterial",
                      "Type": "UnityEngine.Material",
                      "Assignment": "(Material)sharedMaterial.objectReferenceValue",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animationTiling",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_BumpTiling\", oceanMaterial)",
                      "Kind": "Assignment",
                      "AssignmentLine": 89,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animationDirection",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "WaterEditorUtility.GetMaterialVector(\"_BumpDirection\", oceanMaterial)",
                      "Kind": "Assignment",
                      "AssignmentLine": 90,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "firstTiling",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "new Vector2(animationTiling.x * 100.0F, animationTiling.y * 100.0F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 92,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "secondTiling",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "new Vector2(animationTiling.z * 100.0F, animationTiling.w * 100.0F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "firstTiling",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "EditorGUILayout.Vector2Field(\"Tiling 1\", firstTiling)",
                      "Kind": "Assignment",
                      "AssignmentLine": 95,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "secondTiling",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "EditorGUILayout.Vector2Field(\"Tiling 2\", secondTiling)",
                      "Kind": "Assignment",
                      "AssignmentLine": 96,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "firstDirection",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "new Vector2(animationDirection.x, animationDirection.y)",
                      "Kind": "Assignment",
                      "AssignmentLine": 103,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "secondDirection",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "new Vector2(animationDirection.z, animationDirection.w)",
                      "Kind": "Assignment",
                      "AssignmentLine": 104,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "firstDirection",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "EditorGUILayout.Vector2Field(\"Direction 1\", firstDirection)",
                      "Kind": "Assignment",
                      "AssignmentLine": 111,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "secondDirection",
                      "Type": "UnityEngine.Vector2",
                      "Assignment": "EditorGUILayout.Vector2Field(\"Direction 2\", secondDirection)",
                      "Kind": "Assignment",
                      "AssignmentLine": 112,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animationTiling",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "new Vector4(firstTiling.x / 100.0F, firstTiling.y / 100.0F, secondTiling.x / 100.0F, secondTiling.y / 100.0F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 114,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "animationDirection",
                      "Type": "UnityEngine.Vector4",
                      "Assignment": "new Vector4(firstDirection.x, firstDirection.y, secondDirection.x, secondDirection.y)",
                      "Kind": "Assignment",
                      "AssignmentLine": 115,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "gerstnerNormalIntensity",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Per Vertex\", gerstnerNormalIntensity, -2.5F, 2.5F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 129,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "displacementParameter.x",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Per Pixel\", displacementParameter.x, -4.0F, 4.0F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 132,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "displacementParameter.y",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Distortion\", displacementParameter.y, -0.5F, 0.5F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 133,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "displacementParameter.z",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Power\", displacementParameter.z, 0.1F, 10.0F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 148,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "displacementParameter.w",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Bias\", displacementParameter.w, -3.0F, 3.0F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 149,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fade.x",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Edge fade\", fade.x, 0.001f, 3.0f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 170,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fade.y",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Shore fade\", fade.y, 0.001f, 3.0f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 172,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fade.w",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Extinction fade\", fade.w, 0.0f, 2.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 173,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "foam.x",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Intensity\", foam.x, 0.0F, 1.0F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 185,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "foam.y",
                      "Type": "float",
                      "Assignment": "EditorGUILayout.Slider(\"Cutoff\", foam.y, 0.0F, 1.0F)",
                      "Kind": "Assignment",
                      "AssignmentLine": 186,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(WaterBase)serObj.targetObject",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "Conversion",
                      "AssignedTo": "waterBase",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "((WaterBase)serObj.targetObject).gameObject",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "oceanBase",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(Material)sharedMaterial.objectReferenceValue",
                      "Type": "UnityEngine.Material",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "Conversion",
                      "AssignedTo": "oceanMaterial",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(Object)WaterEditorUtility.LocateValidWaterMaterial(oceanBase.transform)",
                      "Type": "UnityEngine.Object",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "Conversion",
                      "AssignedTo": "sharedMaterial.objectReferenceValue",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(Material)sharedMaterial.objectReferenceValue",
                      "Type": "UnityEngine.Material",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "Conversion",
                      "AssignedTo": "oceanMaterial",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "WaterEditorUtility.GetMaterialVector(\"_BumpTiling\", oceanMaterial)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 89,
                      "UseKind": "Invocation",
                      "AssignedTo": "animationTiling",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "WaterEditorUtility.GetMaterialVector(\"_BumpDirection\", oceanMaterial)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 90,
                      "UseKind": "Invocation",
                      "AssignedTo": "animationDirection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector2(animationTiling.x * 100.0F, animationTiling.y * 100.0F)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 92,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "firstTiling",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector2(animationTiling.z * 100.0F, animationTiling.w * 100.0F)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "secondTiling",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector2Field(\"Tiling 1\", firstTiling)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 95,
                      "UseKind": "Invocation",
                      "AssignedTo": "firstTiling",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector2Field(\"Tiling 2\", secondTiling)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 96,
                      "UseKind": "Invocation",
                      "AssignedTo": "secondTiling",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector2(animationDirection.x, animationDirection.y)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 103,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "firstDirection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector2(animationDirection.z, animationDirection.w)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 104,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "secondDirection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector2Field(\"Direction 1\", firstDirection)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 111,
                      "UseKind": "Invocation",
                      "AssignedTo": "firstDirection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Vector2Field(\"Direction 2\", secondDirection)",
                      "Type": "UnityEngine.Vector2",
                      "Kind": "Use",
                      "UseLine": 112,
                      "UseKind": "Invocation",
                      "AssignedTo": "secondDirection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector4(firstTiling.x / 100.0F, firstTiling.y / 100.0F, secondTiling.x / 100.0F, secondTiling.y / 100.0F)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 114,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "animationTiling",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector4(firstDirection.x, firstDirection.y, secondDirection.x, secondDirection.y)",
                      "Type": "UnityEngine.Vector4",
                      "Kind": "Use",
                      "UseLine": 115,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "animationDirection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Per Vertex\", gerstnerNormalIntensity, -2.5F, 2.5F)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 129,
                      "UseKind": "Invocation",
                      "AssignedTo": "gerstnerNormalIntensity",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Per Pixel\", displacementParameter.x, -4.0F, 4.0F)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 132,
                      "UseKind": "Invocation",
                      "AssignedTo": "displacementParameter.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Distortion\", displacementParameter.y, -0.5F, 0.5F)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 133,
                      "UseKind": "Invocation",
                      "AssignedTo": "displacementParameter.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Power\", displacementParameter.z, 0.1F, 10.0F)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 148,
                      "UseKind": "Invocation",
                      "AssignedTo": "displacementParameter.z",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Bias\", displacementParameter.w, -3.0F, 3.0F)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 149,
                      "UseKind": "Invocation",
                      "AssignedTo": "displacementParameter.w",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Edge fade\", fade.x, 0.001f, 3.0f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 170,
                      "UseKind": "Invocation",
                      "AssignedTo": "fade.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Shore fade\", fade.y, 0.001f, 3.0f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 172,
                      "UseKind": "Invocation",
                      "AssignedTo": "fade.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Extinction fade\", fade.w, 0.0f, 2.5f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 173,
                      "UseKind": "Invocation",
                      "AssignedTo": "fade.w",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Intensity\", foam.x, 0.0F, 1.0F)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 185,
                      "UseKind": "Invocation",
                      "AssignedTo": "foam.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EditorGUILayout.Slider(\"Cutoff\", foam.y, 0.0F, 1.0F)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 186,
                      "UseKind": "Invocation",
                      "AssignedTo": "foam.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 29
              }
            ],
            "Fields": [
              {
                "Name": "oceanBase",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "waterBase",
                "Type": "WaterBase",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "oceanMaterial",
                "Type": "Material",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "null",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "serObj",
                "Type": "SerializedObject",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "sharedMaterial",
                "Type": "SerializedProperty",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "waterQuality",
                "Type": "SerializedProperty",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "edgeBlend",
                "Type": "SerializedProperty",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      },
      {
        "Name": "UnityEditor",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "WaterEditorUtility",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Editor\\Water\\Water4\\WaterEditorUtility.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "WaterEditorUtility",
        "Modifiers": [],
        "Inheritance": "Object",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "GetMaterialFloat",
            "FullName": "WaterEditorUtility.GetMaterialFloat(string, UnityEngine.Material)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "float",
            "Parameters": [
              {
                "Name": "name",
                "Type": "System.String",
                "Assignment": null
              },
              {
                "Name": "mat",
                "Type": "Material",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "GetFloat",
                "FullName": "UnityEngine.Material.GetFloat(string)",
                "ReturnType": "Single",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "name",
                    "IsInvocation": false
                  }
                ],
                "Line": 9
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 8
          },
          {
            "Name": "SetMaterialFloat",
            "FullName": "WaterEditorUtility.SetMaterialFloat(string, float, UnityEngine.Material)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "name",
                "Type": "System.String",
                "Assignment": null
              },
              {
                "Name": "f",
                "Type": "float",
                "Assignment": null
              },
              {
                "Name": "mat",
                "Type": "Material",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "SetFloat",
                "FullName": "UnityEngine.Material.SetFloat(string, float)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "name",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "f",
                    "IsInvocation": false
                  }
                ],
                "Line": 12
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 11
          },
          {
            "Name": "GetMaterialColor",
            "FullName": "WaterEditorUtility.GetMaterialColor(string, UnityEngine.Material)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "Color",
            "Parameters": [
              {
                "Name": "name",
                "Type": "System.String",
                "Assignment": null
              },
              {
                "Name": "mat",
                "Type": "Material",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "GetColor",
                "FullName": "UnityEngine.Material.GetColor(string)",
                "ReturnType": "Color",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "name",
                    "IsInvocation": false
                  }
                ],
                "Line": 16
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 15
          },
          {
            "Name": "SetMaterialColor",
            "FullName": "WaterEditorUtility.SetMaterialColor(string, UnityEngine.Color, UnityEngine.Material)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "name",
                "Type": "System.String",
                "Assignment": null
              },
              {
                "Name": "color",
                "Type": "Color",
                "Assignment": null
              },
              {
                "Name": "mat",
                "Type": "Material",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "SetColor",
                "FullName": "UnityEngine.Material.SetColor(string, UnityEngine.Color)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "name",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "color",
                    "IsInvocation": false
                  }
                ],
                "Line": 19
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 18
          },
          {
            "Name": "GetMaterialVector",
            "FullName": "WaterEditorUtility.GetMaterialVector(string, UnityEngine.Material)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "Vector4",
            "Parameters": [
              {
                "Name": "name",
                "Type": "System.String",
                "Assignment": null
              },
              {
                "Name": "mat",
                "Type": "Material",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "GetVector",
                "FullName": "UnityEngine.Material.GetVector(string)",
                "ReturnType": "Vector4",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "name",
                    "IsInvocation": false
                  }
                ],
                "Line": 22
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 21
          },
          {
            "Name": "SetMaterialVector",
            "FullName": "WaterEditorUtility.SetMaterialVector(string, UnityEngine.Vector4, UnityEngine.Material)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "name",
                "Type": "System.String",
                "Assignment": null
              },
              {
                "Name": "vector",
                "Type": "Vector4",
                "Assignment": null
              },
              {
                "Name": "mat",
                "Type": "Material",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "SetVector",
                "FullName": "UnityEngine.Material.SetVector(string, UnityEngine.Vector4)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "name",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "vector",
                    "IsInvocation": false
                  }
                ],
                "Line": 25
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 24
          },
          {
            "Name": "GetMaterialTexture",
            "FullName": "WaterEditorUtility.GetMaterialTexture(string, UnityEngine.Material)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "Texture",
            "Parameters": [
              {
                "Name": "theName",
                "Type": "System.String",
                "Assignment": null
              },
              {
                "Name": "mat",
                "Type": "Material",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "GetTexture",
                "FullName": "UnityEngine.Material.GetTexture(string)",
                "ReturnType": "Texture",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "theName",
                    "IsInvocation": false
                  }
                ],
                "Line": 28
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 27
          },
          {
            "Name": "SetMaterialTexture",
            "FullName": "WaterEditorUtility.SetMaterialTexture(string, UnityEngine.Texture, UnityEngine.Material)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "theName",
                "Type": "System.String",
                "Assignment": null
              },
              {
                "Name": "parameter",
                "Type": "Texture",
                "Assignment": null
              },
              {
                "Name": "mat",
                "Type": "Material",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "SetTexture",
                "FullName": "UnityEngine.Material.SetTexture(string, UnityEngine.Texture)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "theName",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "parameter",
                    "IsInvocation": false
                  }
                ],
                "Line": 31
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 30
          },
          {
            "Name": "LocateValidWaterMaterial",
            "FullName": "WaterEditorUtility.LocateValidWaterMaterial(UnityEngine.Transform)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "Material",
            "Parameters": [
              {
                "Name": "parent",
                "Type": "Transform",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                "ReturnType": "Renderer",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 36
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                "ReturnType": "Renderer",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 36
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                "ReturnType": "Renderer",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 37
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                "ReturnType": "Renderer",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 40
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                "ReturnType": "Renderer",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 40
              },
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                "ReturnType": "Renderer",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 41
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 34
          },
          {
            "Name": "CurveGui",
            "FullName": "WaterEditorUtility.CurveGui(string, UnityEditor.SerializedObject, UnityEngine.Color)",
            "Modifiers": [
              "public",
              "static"
            ],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "name",
                "Type": "System.String",
                "Assignment": null
              },
              {
                "Name": "serObj",
                "Type": "SerializedObject",
                "Assignment": null
              },
              {
                "Name": "color",
                "Type": "Color",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": "CurveField",
                "FullName": "UnityEditor.EditorGUILayout.CurveField(UnityEngine.GUIContent, UnityEngine.AnimationCurve, UnityEngine.Color, UnityEngine.Rect, params UnityEngine.GUILayoutOption[])",
                "ReturnType": "AnimationCurve",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEditor.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "new GUIContent (name)",
                    "IsInvocation": true
                  },
                  {
                    "Argument": "curve",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "color",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "new Rect (0.0f,0.0f,1.0f,1.0f)",
                    "IsInvocation": true
                  }
                ],
                "Line": 49
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "curve",
                  "Type": "AnimationCurve",
                  "Assignment": "new AnimationCurve(new Keyframe(0, 0.0f, 1.0f, 1.0f), new Keyframe(1, 1.0f, 1.0f, 1.0f))",
                  "Kind": "Definition",
                  "DefinitionLine": 47
                }
              },
              {
                "Variable": {
                  "Name": "curve",
                  "Type": "UnityEngine.AnimationCurve",
                  "Assignment": "EditorGUILayout.CurveField(new GUIContent (name), curve, color, new Rect (0.0f,0.0f,1.0f,1.0f))",
                  "Kind": "Assignment",
                  "AssignmentLine": 48,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "EditorGUILayout.CurveField(new GUIContent (name), curve, color, new Rect (0.0f,0.0f,1.0f,1.0f))",
                  "Type": "UnityEngine.AnimationCurve",
                  "Kind": "Use",
                  "UseLine": 48,
                  "UseKind": "Invocation",
                  "AssignedTo": "curve",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 46
          }
        ],
        "Fields": [],
        "Line": 4
      }
    ],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      },
      {
        "Name": "UnityEditor",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "Displace",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Displace.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Displace",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Water.Displace.Awake()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "OnEnable",
                    "FullName": "UnityStandardAssets.Water.Displace.OnEnable()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Displace.cs",
                    "DefinitionLine": 23,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 14
                  },
                  {
                    "Name": "OnDisable",
                    "FullName": "UnityStandardAssets.Water.Displace.OnDisable()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Displace.cs",
                    "DefinitionLine": 30,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 18
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 10
              },
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Water.Displace.OnEnable()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "EnableKeyword",
                    "FullName": "UnityEngine.Shader.EnableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_VERTEX_DISPLACEMENT_ON\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_VERTEX_DISPLACEMENT_OFF\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 23
              },
              {
                "Name": "OnDisable",
                "FullName": "UnityStandardAssets.Water.Displace.OnDisable()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "EnableKeyword",
                    "FullName": "UnityEngine.Shader.EnableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_VERTEX_DISPLACEMENT_OFF\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_VERTEX_DISPLACEMENT_ON\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              }
            ],
            "Fields": [],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "GerstnerDisplace",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\GerstnerDisplace.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "GerstnerDisplace",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Displace",
            "Interfaces": [],
            "Properties": [],
            "Methods": [],
            "Fields": [],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "MeshContainer",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\MeshContainer.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "MeshContainer",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Water.MeshContainer.Update()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "mesh.vertices",
                      "Type": "UnityEngine.Vector3[]",
                      "Assignment": "vertices",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mesh.normals",
                      "Type": "UnityEngine.Vector3[]",
                      "Assignment": "normals",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "vertices",
                      "Type": "UnityEngine.Vector3[]",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "FieldReference",
                      "AssignedTo": "mesh.vertices",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "normals",
                      "Type": "UnityEngine.Vector3[]",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "FieldReference",
                      "AssignedTo": "mesh.normals",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              }
            ],
            "Fields": [
              {
                "Name": "mesh",
                "Type": "Mesh",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 8
              },
              {
                "Name": "vertices",
                "Type": "Vector3[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "normals",
                "Type": "Vector3[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlanarReflection",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PlanarReflection",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.Start()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(WaterBase)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_SharedMaterial",
                      "Type": "UnityEngine.Material",
                      "Assignment": "((WaterBase)gameObject.GetComponent(typeof(WaterBase))).sharedMaterial",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "((WaterBase)gameObject.GetComponent(typeof(WaterBase))).sharedMaterial",
                      "Type": "UnityEngine.Material",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_SharedMaterial",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "CreateReflectionCameraFor",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.CreateReflectionCameraFor(UnityEngine.Camera)",
                "Modifiers": [],
                "ReturnType": "Camera",
                "Parameters": [
                  {
                    "Name": "cam",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Find",
                    "FullName": "UnityEngine.GameObject.Find(string)",
                    "ReturnType": "GameObject",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "reflName",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(Camera)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 39
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(Camera)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 41
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<UnityEngine.Camera>()",
                    "ReturnType": "Camera",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 43
                  },
                  {
                    "Name": "SetStandardCameraParameter",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.SetStandardCameraParameter(UnityEngine.Camera, UnityEngine.LayerMask)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 59,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "reflectCamera",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "reflectionMask",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 48
                  },
                  {
                    "Name": "CreateTextureFor",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.CreateTextureFor(UnityEngine.Camera)",
                    "ReturnType": "RenderTexture",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 67,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "cam",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "reflName",
                      "Type": "String",
                      "Assignment": "gameObject.name + \"Reflection\" + cam.name",
                      "Kind": "Definition",
                      "DefinitionLine": 31
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go",
                      "Type": "GameObject",
                      "Assignment": "GameObject.Find(reflName)",
                      "Kind": "Definition",
                      "DefinitionLine": 32
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera",
                      "Type": "Camera",
                      "Assignment": "go.GetComponent<Camera>()",
                      "Kind": "Definition",
                      "DefinitionLine": 42
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "new GameObject(reflName, typeof(Camera))",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.backgroundColor",
                      "Type": "UnityEngine.Color",
                      "Assignment": "clearColor",
                      "Kind": "Assignment",
                      "AssignmentLine": 44,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.clearFlags",
                      "Type": "UnityEngine.CameraClearFlags",
                      "Assignment": "reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.targetTexture",
                      "Type": "UnityEngine.RenderTexture",
                      "Assignment": "CreateTextureFor(cam)",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new GameObject(reflName, typeof(Camera))",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "go",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "clearColor",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "FieldReference",
                      "AssignedTo": "reflectCamera.backgroundColor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor",
                      "Type": "UnityEngine.CameraClearFlags",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "Conditional",
                      "AssignedTo": "reflectCamera.clearFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CreateTextureFor(cam)",
                      "Type": "UnityEngine.RenderTexture",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "Invocation",
                      "AssignedTo": "reflectCamera.targetTexture",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              },
              {
                "Name": "SetStandardCameraParameter",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.SetStandardCameraParameter(UnityEngine.Camera, UnityEngine.LayerMask)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "cam",
                    "Type": "Camera",
                    "Assignment": null
                  },
                  {
                    "Name": "mask",
                    "Type": "LayerMask",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "NameToLayer",
                    "FullName": "UnityEngine.LayerMask.NameToLayer(string)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Water\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 61
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "cam.cullingMask",
                      "Type": "int",
                      "Assignment": "mask & ~(1 << LayerMask.NameToLayer(\"Water\"))",
                      "Kind": "Assignment",
                      "AssignmentLine": 60,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.backgroundColor",
                      "Type": "UnityEngine.Color",
                      "Assignment": "Color.black",
                      "Kind": "Assignment",
                      "AssignmentLine": 61,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mask & ~(1 << LayerMask.NameToLayer(\"Water\"))",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 60,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "cam.cullingMask",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "mask",
                          "Type": "UnityEngine.LayerMask",
                          "Kind": "Use",
                          "UseLine": 60,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "cam.cullingMask",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "~(1 << LayerMask.NameToLayer(\"Water\"))",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 60,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "cam.cullingMask",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Color.black",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 61,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "cam.backgroundColor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "Literal",
                      "AssignedTo": "cam.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 59
              },
              {
                "Name": "CreateTextureFor",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.CreateTextureFor(UnityEngine.Camera)",
                "Modifiers": [],
                "ReturnType": "RenderTexture",
                "Parameters": [
                  {
                    "Name": "cam",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "FloorToInt",
                    "FullName": "UnityEngine.Mathf.FloorToInt(float)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "cam.pixelWidth * 0.5F",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 69
                  },
                  {
                    "Name": "FloorToInt",
                    "FullName": "UnityEngine.Mathf.FloorToInt(float)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "cam.pixelHeight * 0.5F",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 70
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "rt",
                      "Type": "RenderTexture",
                      "Assignment": "new RenderTexture(Mathf.FloorToInt(cam.pixelWidth * 0.5F),\r\n                Mathf.FloorToInt(cam.pixelHeight * 0.5F), 24)",
                      "Kind": "Definition",
                      "DefinitionLine": 68
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rt.hideFlags",
                      "Type": "UnityEngine.HideFlags",
                      "Assignment": "HideFlags.DontSave",
                      "Kind": "Assignment",
                      "AssignmentLine": 70,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "HideFlags.DontSave",
                      "Type": "UnityEngine.HideFlags",
                      "Kind": "Use",
                      "UseLine": 70,
                      "UseKind": "FieldReference",
                      "AssignedTo": "rt.hideFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 67
              },
              {
                "Name": "RenderHelpCameras",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.RenderHelpCameras(UnityEngine.Camera)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "currentCam",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ContainsKey",
                    "FullName": "System.Collections.Generic.Dictionary<UnityEngine.Camera, bool>.ContainsKey(UnityEngine.Camera)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "currentCam",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 83
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.Dictionary<UnityEngine.Camera, bool>.Add(UnityEngine.Camera, bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "currentCam",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 85
                  },
                  {
                    "Name": "CreateReflectionCameraFor",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.CreateReflectionCameraFor(UnityEngine.Camera)",
                    "ReturnType": "Camera",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 30,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "currentCam",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 94
                  },
                  {
                    "Name": "RenderReflectionFor",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.RenderReflectionFor(UnityEngine.Camera, UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 137,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "currentCam",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_ReflectionCamera",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 97
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_HelperCameras",
                      "Type": "System.Collections.Generic.Dictionary<UnityEngine.Camera, bool>",
                      "Assignment": "new Dictionary<Camera, bool>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 79,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ReflectionCamera",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "CreateReflectionCameraFor(currentCam)",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HelperCameras[currentCam]",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 98,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Dictionary<Camera, bool>()",
                      "Type": "System.Collections.Generic.Dictionary<UnityEngine.Camera, bool>",
                      "Kind": "Use",
                      "UseLine": 79,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_HelperCameras",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CreateReflectionCameraFor(currentCam)",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_ReflectionCamera",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 98,
                      "UseKind": "Literal",
                      "AssignedTo": "m_HelperCameras[currentCam]",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 76
              },
              {
                "Name": "LateUpdate",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.LateUpdate()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Clear",
                    "FullName": "System.Collections.Generic.Dictionary<UnityEngine.Camera, bool>.Clear()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 107
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 103
              },
              {
                "Name": "WaterTileBeingRendered",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.WaterTileBeingRendered(UnityEngine.Transform, UnityEngine.Camera)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "tr",
                    "Type": "Transform",
                    "Assignment": null
                  },
                  {
                    "Name": "currentCam",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "RenderHelpCameras",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.RenderHelpCameras(UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 76,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "currentCam",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 114
                  },
                  {
                    "Name": "SetTexture",
                    "FullName": "UnityEngine.Material.SetTexture(string, UnityEngine.Texture)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "reflectionSampler",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_ReflectionCamera.targetTexture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 118
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 112
              },
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.OnEnable()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "EnableKeyword",
                    "FullName": "UnityEngine.Shader.EnableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_REFLECTIVE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 125
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_SIMPLE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 126
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 123
              },
              {
                "Name": "OnDisable",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.OnDisable()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "EnableKeyword",
                    "FullName": "UnityEngine.Shader.EnableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_SIMPLE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 132
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_REFLECTIVE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 133
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 130
              },
              {
                "Name": "RenderReflectionFor",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.RenderReflectionFor(UnityEngine.Camera, UnityEngine.Camera)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "cam",
                    "Type": "Camera",
                    "Assignment": null
                  },
                  {
                    "Name": "reflectCamera",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "HasProperty",
                    "FullName": "UnityEngine.Material.HasProperty(string)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "reflectionSampler",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 144
                  },
                  {
                    "Name": "NameToLayer",
                    "FullName": "UnityEngine.LayerMask.NameToLayer(string)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Water\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 149
                  },
                  {
                    "Name": "SaneCameraSettings",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.SaneCameraSettings(UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 206,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "reflectCamera",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 151
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(Skybox)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 157
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(Skybox)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 159
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(Skybox)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 162
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(Skybox)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 164
                  },
                  {
                    "Name": "Dot",
                    "FullName": "UnityEngine.Vector3.Dot(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "normal",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 180
                  },
                  {
                    "Name": "CalculateReflectionMatrix",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.CalculateReflectionMatrix(UnityEngine.Matrix4x4, UnityEngine.Vector4)",
                    "ReturnType": "Matrix4x4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 234,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "reflection",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "reflectionPlane",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 184
                  },
                  {
                    "Name": "MultiplyPoint",
                    "FullName": "UnityEngine.Matrix4x4.MultiplyPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Oldpos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 186
                  },
                  {
                    "Name": "CameraSpacePlane",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.CameraSpacePlane(UnityEngine.Camera, UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 274,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "reflectCamera",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "normal",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1.0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 190
                  },
                  {
                    "Name": "CalculateObliqueMatrix",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.CalculateObliqueMatrix(UnityEngine.Matrix4x4, UnityEngine.Vector4)",
                    "ReturnType": "Matrix4x4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 215,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "projection",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "clipPlane",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 193
                  },
                  {
                    "Name": "Render",
                    "FullName": "UnityEngine.Camera.Render()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 200
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "sb",
                      "Type": "Skybox",
                      "Assignment": "(Skybox)reflectCamera.gameObject.GetComponent(typeof(Skybox))",
                      "Kind": "Definition",
                      "DefinitionLine": 158
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectiveSurface",
                      "Type": "Transform",
                      "Assignment": "transform",
                      "Kind": "Definition",
                      "DefinitionLine": 169
                    }
                  },
                  {
                    "Variable": {
                      "Name": "eulerA",
                      "Type": "Vector3",
                      "Assignment": "cam.transform.eulerAngles",
                      "Kind": "Definition",
                      "DefinitionLine": 171
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pos",
                      "Type": "Vector3",
                      "Assignment": "reflectiveSurface.transform.position",
                      "Kind": "Definition",
                      "DefinitionLine": 176
                    }
                  },
                  {
                    "Variable": {
                      "Name": "normal",
                      "Type": "Vector3",
                      "Assignment": "reflectiveSurface.transform.up",
                      "Kind": "Definition",
                      "DefinitionLine": 178
                    }
                  },
                  {
                    "Variable": {
                      "Name": "d",
                      "Type": "float",
                      "Assignment": "-Vector3.Dot(normal, pos) - clipPlaneOffset",
                      "Kind": "Definition",
                      "DefinitionLine": 179
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionPlane",
                      "Type": "Vector4",
                      "Assignment": "new Vector4(normal.x, normal.y, normal.z, d)",
                      "Kind": "Definition",
                      "DefinitionLine": 180
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflection",
                      "Type": "Matrix4x4",
                      "Assignment": "Matrix4x4.zero",
                      "Kind": "Definition",
                      "DefinitionLine": 182
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newpos",
                      "Type": "Vector3",
                      "Assignment": "reflection.MultiplyPoint(m_Oldpos)",
                      "Kind": "Definition",
                      "DefinitionLine": 185
                    }
                  },
                  {
                    "Variable": {
                      "Name": "clipPlane",
                      "Type": "Vector4",
                      "Assignment": "CameraSpacePlane(reflectCamera, pos, normal, 1.0f)",
                      "Kind": "Definition",
                      "DefinitionLine": 189
                    }
                  },
                  {
                    "Variable": {
                      "Name": "projection",
                      "Type": "Matrix4x4",
                      "Assignment": "cam.projectionMatrix",
                      "Kind": "Definition",
                      "DefinitionLine": 191
                    }
                  },
                  {
                    "Variable": {
                      "Name": "euler",
                      "Type": "Vector3",
                      "Assignment": "cam.transform.eulerAngles",
                      "Kind": "Definition",
                      "DefinitionLine": 196
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.cullingMask",
                      "Type": "int",
                      "Assignment": "reflectionMask & ~(1 << LayerMask.NameToLayer(\"Water\"))",
                      "Kind": "Assignment",
                      "AssignmentLine": 148,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.backgroundColor",
                      "Type": "UnityEngine.Color",
                      "Assignment": "clearColor",
                      "Kind": "Assignment",
                      "AssignmentLine": 152,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.clearFlags",
                      "Type": "UnityEngine.CameraClearFlags",
                      "Assignment": "reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor",
                      "Kind": "Assignment",
                      "AssignmentLine": 153,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sb",
                      "Type": "UnityEngine.Skybox",
                      "Assignment": "(Skybox)reflectCamera.gameObject.AddComponent(typeof(Skybox))",
                      "Kind": "Assignment",
                      "AssignmentLine": 161,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sb.material",
                      "Type": "UnityEngine.Material",
                      "Assignment": "((Skybox)cam.GetComponent(typeof(Skybox))).material",
                      "Kind": "Assignment",
                      "AssignmentLine": 163,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GL.invertCulling",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 167,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.transform.eulerAngles",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(-eulerA.x, eulerA.y, eulerA.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 173,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "cam.transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 174,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pos.y",
                      "Type": "float",
                      "Assignment": "reflectiveSurface.position.y",
                      "Kind": "Assignment",
                      "AssignmentLine": 177,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflection",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "CalculateReflectionMatrix(reflection, reflectionPlane)",
                      "Kind": "Assignment",
                      "AssignmentLine": 183,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Oldpos",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "cam.transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 184,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.worldToCameraMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "cam.worldToCameraMatrix * reflection",
                      "Kind": "Assignment",
                      "AssignmentLine": 187,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "projection",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "CalculateObliqueMatrix(projection, clipPlane)",
                      "Kind": "Assignment",
                      "AssignmentLine": 192,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.projectionMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "projection",
                      "Kind": "Assignment",
                      "AssignmentLine": 193,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "newpos",
                      "Kind": "Assignment",
                      "AssignmentLine": 195,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectCamera.transform.eulerAngles",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(-euler.x, euler.y, euler.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 197,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GL.invertCulling",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 201,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMask & ~(1 << LayerMask.NameToLayer(\"Water\"))",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 148,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "reflectCamera.cullingMask",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "reflectionMask",
                          "Type": "UnityEngine.LayerMask",
                          "Kind": "Use",
                          "UseLine": 148,
                          "UseKind": "FieldReference",
                          "AssignedTo": "reflectCamera.cullingMask",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "~(1 << LayerMask.NameToLayer(\"Water\"))",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 148,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "reflectCamera.cullingMask",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "clearColor",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 152,
                      "UseKind": "FieldReference",
                      "AssignedTo": "reflectCamera.backgroundColor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectSkybox ? CameraClearFlags.Skybox : CameraClearFlags.SolidColor",
                      "Type": "UnityEngine.CameraClearFlags",
                      "Kind": "Use",
                      "UseLine": 153,
                      "UseKind": "Conditional",
                      "AssignedTo": "reflectCamera.clearFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(Skybox)reflectCamera.gameObject.AddComponent(typeof(Skybox))",
                      "Type": "UnityEngine.Skybox",
                      "Kind": "Use",
                      "UseLine": 161,
                      "UseKind": "Conversion",
                      "AssignedTo": "sb",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "((Skybox)cam.GetComponent(typeof(Skybox))).material",
                      "Type": "UnityEngine.Material",
                      "Kind": "Use",
                      "UseLine": 163,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "sb.material",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 167,
                      "UseKind": "Literal",
                      "AssignedTo": "GL.invertCulling",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(-eulerA.x, eulerA.y, eulerA.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 173,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "reflectCamera.transform.eulerAngles",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 174,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "reflectCamera.transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectiveSurface.position.y",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 177,
                      "UseKind": "FieldReference",
                      "AssignedTo": "pos.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CalculateReflectionMatrix(reflection, reflectionPlane)",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 183,
                      "UseKind": "Invocation",
                      "AssignedTo": "reflection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 184,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Oldpos",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.worldToCameraMatrix * reflection",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 187,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "reflectCamera.worldToCameraMatrix",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "cam.worldToCameraMatrix",
                          "Type": "UnityEngine.Matrix4x4",
                          "Kind": "Use",
                          "UseLine": 187,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "reflectCamera.worldToCameraMatrix",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "reflection",
                          "Type": "UnityEngine.Matrix4x4",
                          "Kind": "Use",
                          "UseLine": 187,
                          "UseKind": "LocalReference",
                          "AssignedTo": "reflectCamera.worldToCameraMatrix",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CalculateObliqueMatrix(projection, clipPlane)",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 192,
                      "UseKind": "Invocation",
                      "AssignedTo": "projection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "projection",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 193,
                      "UseKind": "LocalReference",
                      "AssignedTo": "reflectCamera.projectionMatrix",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newpos",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 195,
                      "UseKind": "LocalReference",
                      "AssignedTo": "reflectCamera.transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(-euler.x, euler.y, euler.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 197,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "reflectCamera.transform.eulerAngles",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 201,
                      "UseKind": "Literal",
                      "AssignedTo": "GL.invertCulling",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 137
              },
              {
                "Name": "SaneCameraSettings",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.SaneCameraSettings(UnityEngine.Camera)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "helperCam",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "helperCam.depthTextureMode",
                      "Type": "UnityEngine.DepthTextureMode",
                      "Assignment": "DepthTextureMode.None",
                      "Kind": "Assignment",
                      "AssignmentLine": 207,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "helperCam.backgroundColor",
                      "Type": "UnityEngine.Color",
                      "Assignment": "Color.black",
                      "Kind": "Assignment",
                      "AssignmentLine": 208,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "helperCam.clearFlags",
                      "Type": "UnityEngine.CameraClearFlags",
                      "Assignment": "CameraClearFlags.SolidColor",
                      "Kind": "Assignment",
                      "AssignmentLine": 209,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "helperCam.renderingPath",
                      "Type": "UnityEngine.RenderingPath",
                      "Assignment": "RenderingPath.Forward",
                      "Kind": "Assignment",
                      "AssignmentLine": 210,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "DepthTextureMode.None",
                      "Type": "UnityEngine.DepthTextureMode",
                      "Kind": "Use",
                      "UseLine": 207,
                      "UseKind": "FieldReference",
                      "AssignedTo": "helperCam.depthTextureMode",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Color.black",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 208,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "helperCam.backgroundColor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CameraClearFlags.SolidColor",
                      "Type": "UnityEngine.CameraClearFlags",
                      "Kind": "Use",
                      "UseLine": 209,
                      "UseKind": "FieldReference",
                      "AssignedTo": "helperCam.clearFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "RenderingPath.Forward",
                      "Type": "UnityEngine.RenderingPath",
                      "Kind": "Use",
                      "UseLine": 210,
                      "UseKind": "FieldReference",
                      "AssignedTo": "helperCam.renderingPath",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 206
              },
              {
                "Name": "CalculateObliqueMatrix",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.CalculateObliqueMatrix(UnityEngine.Matrix4x4, UnityEngine.Vector4)",
                "Modifiers": [
                  "static"
                ],
                "ReturnType": "Matrix4x4",
                "Parameters": [
                  {
                    "Name": "projection",
                    "Type": "Matrix4x4",
                    "Assignment": null
                  },
                  {
                    "Name": "clipPlane",
                    "Type": "Vector4",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Sgn",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.Sgn(float)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 260,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "clipPlane.x",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 218
                  },
                  {
                    "Name": "Sgn",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.Sgn(float)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 260,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "clipPlane.y",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 219
                  },
                  {
                    "Name": "Dot",
                    "FullName": "UnityEngine.Vector4.Dot(UnityEngine.Vector4, UnityEngine.Vector4)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "clipPlane",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "q",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 223
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "q",
                      "Type": "Vector4",
                      "Assignment": "projection.inverse * new Vector4(\r\n                Sgn(clipPlane.x),\r\n                Sgn(clipPlane.y),\r\n                1.0F,\r\n                1.0F\r\n                )",
                      "Kind": "Definition",
                      "DefinitionLine": 216
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c",
                      "Type": "Vector4",
                      "Assignment": "clipPlane * (2.0F / (Vector4.Dot(clipPlane, q)))",
                      "Kind": "Definition",
                      "DefinitionLine": 222
                    }
                  },
                  {
                    "Variable": {
                      "Name": "projection[2]",
                      "Type": "float",
                      "Assignment": "c.x - projection[3]",
                      "Kind": "Assignment",
                      "AssignmentLine": 224,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "projection[6]",
                      "Type": "float",
                      "Assignment": "c.y - projection[7]",
                      "Kind": "Assignment",
                      "AssignmentLine": 225,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "projection[10]",
                      "Type": "float",
                      "Assignment": "c.z - projection[11]",
                      "Kind": "Assignment",
                      "AssignmentLine": 226,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "projection[14]",
                      "Type": "float",
                      "Assignment": "c.w - projection[15]",
                      "Kind": "Assignment",
                      "AssignmentLine": 227,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c.x - projection[3]",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 224,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "projection[2]",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "c.x",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 224,
                          "UseKind": "FieldReference",
                          "AssignedTo": "projection[2]",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "projection[3]",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 224,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "projection[2]",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c.y - projection[7]",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 225,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "projection[6]",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "c.y",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 225,
                          "UseKind": "FieldReference",
                          "AssignedTo": "projection[6]",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "projection[7]",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 225,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "projection[6]",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c.z - projection[11]",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 226,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "projection[10]",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "c.z",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 226,
                          "UseKind": "FieldReference",
                          "AssignedTo": "projection[10]",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "projection[11]",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 226,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "projection[10]",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "c.w - projection[15]",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 227,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "projection[14]",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "c.w",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 227,
                          "UseKind": "FieldReference",
                          "AssignedTo": "projection[14]",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "projection[15]",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 227,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "projection[14]",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 215
              },
              {
                "Name": "CalculateReflectionMatrix",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.CalculateReflectionMatrix(UnityEngine.Matrix4x4, UnityEngine.Vector4)",
                "Modifiers": [
                  "static"
                ],
                "ReturnType": "Matrix4x4",
                "Parameters": [
                  {
                    "Name": "reflectionMat",
                    "Type": "Matrix4x4",
                    "Assignment": null
                  },
                  {
                    "Name": "plane",
                    "Type": "Vector4",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "reflectionMat.m00",
                      "Type": "float",
                      "Assignment": "(1.0F - 2.0F * plane[0] * plane[0])",
                      "Kind": "Assignment",
                      "AssignmentLine": 235,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m01",
                      "Type": "float",
                      "Assignment": "(- 2.0F * plane[0] * plane[1])",
                      "Kind": "Assignment",
                      "AssignmentLine": 236,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m02",
                      "Type": "float",
                      "Assignment": "(- 2.0F * plane[0] * plane[2])",
                      "Kind": "Assignment",
                      "AssignmentLine": 237,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m03",
                      "Type": "float",
                      "Assignment": "(- 2.0F * plane[3] * plane[0])",
                      "Kind": "Assignment",
                      "AssignmentLine": 238,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m10",
                      "Type": "float",
                      "Assignment": "(- 2.0F * plane[1] * plane[0])",
                      "Kind": "Assignment",
                      "AssignmentLine": 240,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m11",
                      "Type": "float",
                      "Assignment": "(1.0F - 2.0F * plane[1] * plane[1])",
                      "Kind": "Assignment",
                      "AssignmentLine": 241,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m12",
                      "Type": "float",
                      "Assignment": "(- 2.0F * plane[1] * plane[2])",
                      "Kind": "Assignment",
                      "AssignmentLine": 242,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m13",
                      "Type": "float",
                      "Assignment": "(- 2.0F * plane[3] * plane[1])",
                      "Kind": "Assignment",
                      "AssignmentLine": 243,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m20",
                      "Type": "float",
                      "Assignment": "(- 2.0F * plane[2] * plane[0])",
                      "Kind": "Assignment",
                      "AssignmentLine": 245,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m21",
                      "Type": "float",
                      "Assignment": "(- 2.0F * plane[2] * plane[1])",
                      "Kind": "Assignment",
                      "AssignmentLine": 246,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m22",
                      "Type": "float",
                      "Assignment": "(1.0F - 2.0F * plane[2] * plane[2])",
                      "Kind": "Assignment",
                      "AssignmentLine": 247,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m23",
                      "Type": "float",
                      "Assignment": "(- 2.0F * plane[3] * plane[2])",
                      "Kind": "Assignment",
                      "AssignmentLine": 248,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m30",
                      "Type": "float",
                      "Assignment": "0.0F",
                      "Kind": "Assignment",
                      "AssignmentLine": 250,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m31",
                      "Type": "float",
                      "Assignment": "0.0F",
                      "Kind": "Assignment",
                      "AssignmentLine": 251,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m32",
                      "Type": "float",
                      "Assignment": "0.0F",
                      "Kind": "Assignment",
                      "AssignmentLine": 252,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m33",
                      "Type": "float",
                      "Assignment": "1.0F",
                      "Kind": "Assignment",
                      "AssignmentLine": 253,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(1.0F - 2.0F * plane[0] * plane[0])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 235,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m00",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2.0F * plane[0] * plane[1])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 236,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m01",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2.0F * plane[0] * plane[2])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 237,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m02",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2.0F * plane[3] * plane[0])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 238,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m03",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2.0F * plane[1] * plane[0])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 240,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m10",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(1.0F - 2.0F * plane[1] * plane[1])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 241,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m11",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2.0F * plane[1] * plane[2])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 242,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m12",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2.0F * plane[3] * plane[1])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 243,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m13",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2.0F * plane[2] * plane[0])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 245,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m20",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2.0F * plane[2] * plane[1])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 246,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m21",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(1.0F - 2.0F * plane[2] * plane[2])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 247,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m22",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2.0F * plane[3] * plane[2])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 248,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m23",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 250,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionMat.m30",
                      "Value": "0.0F",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 251,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionMat.m31",
                      "Value": "0.0F",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 252,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionMat.m32",
                      "Value": "0.0F",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 253,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionMat.m33",
                      "Value": "1.0F",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 234
              },
              {
                "Name": "Sgn",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.Sgn(float)",
                "Modifiers": [
                  "static"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "a",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 260
              },
              {
                "Name": "CameraSpacePlane",
                "FullName": "UnityStandardAssets.Water.PlanarReflection.CameraSpacePlane(UnityEngine.Camera, UnityEngine.Vector3, UnityEngine.Vector3, float)",
                "Modifiers": [],
                "ReturnType": "Vector4",
                "Parameters": [
                  {
                    "Name": "cam",
                    "Type": "Camera",
                    "Assignment": null
                  },
                  {
                    "Name": "pos",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "normal",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "sideSign",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "MultiplyPoint",
                    "FullName": "UnityEngine.Matrix4x4.MultiplyPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "offsetPos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 278
                  },
                  {
                    "Name": "MultiplyVector",
                    "FullName": "UnityEngine.Matrix4x4.MultiplyVector(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "normal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 279
                  },
                  {
                    "Name": "Dot",
                    "FullName": "UnityEngine.Vector3.Dot(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "cpos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "cnormal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 281
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "offsetPos",
                      "Type": "Vector3",
                      "Assignment": "pos + normal * clipPlaneOffset",
                      "Kind": "Definition",
                      "DefinitionLine": 275
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m",
                      "Type": "Matrix4x4",
                      "Assignment": "cam.worldToCameraMatrix",
                      "Kind": "Definition",
                      "DefinitionLine": 276
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cpos",
                      "Type": "Vector3",
                      "Assignment": "m.MultiplyPoint(offsetPos)",
                      "Kind": "Definition",
                      "DefinitionLine": 277
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cnormal",
                      "Type": "Vector3",
                      "Assignment": "m.MultiplyVector(normal).normalized * sideSign",
                      "Kind": "Definition",
                      "DefinitionLine": 278
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 274
              }
            ],
            "Fields": [
              {
                "Name": "reflectionMask",
                "Type": "LayerMask",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "reflectSkybox",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "clearColor",
                "Type": "Color",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "Color.grey",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "reflectionSampler",
                "Type": "String",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "\"_ReflectionTex\"",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "clipPlaneOffset",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.07F",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "m_Oldpos",
                "Type": "Vector3",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "m_ReflectionCamera",
                "Type": "Camera",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "m_SharedMaterial",
                "Type": "Material",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "m_HelperCameras",
                "Type": "Dictionary<Camera, bool>",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "SpecularLighting",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\SpecularLighting.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SpecularLighting",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Water.SpecularLighting.Start()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(WaterBase)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 16
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_WaterBase",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Assignment": "(WaterBase)gameObject.GetComponent(typeof(WaterBase))",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(WaterBase)gameObject.GetComponent(typeof(WaterBase))",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "Conversion",
                      "AssignedTo": "m_WaterBase",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Water.SpecularLighting.Update()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent(System.Type)",
                    "ReturnType": "Component",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "typeof(WaterBase)",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 24
                  },
                  {
                    "Name": "SetVector",
                    "FullName": "UnityEngine.Material.SetVector(string, UnityEngine.Vector4)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_WorldLightDir\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "specularLight.transform.forward",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 29
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_WaterBase",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Assignment": "(WaterBase)gameObject.GetComponent(typeof(WaterBase))",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(WaterBase)gameObject.GetComponent(typeof(WaterBase))",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "Conversion",
                      "AssignedTo": "m_WaterBase",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 20
              }
            ],
            "Fields": [
              {
                "Name": "specularLight",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "m_WaterBase",
                "Type": "WaterBase",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "Water",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Water",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnWillRenderObject",
                "FullName": "UnityStandardAssets.Water.Water.OnWillRenderObject()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 42
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 42
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 43
                  },
                  {
                    "Name": "FindHardwareWaterSupport",
                    "FullName": "UnityStandardAssets.Water.Water.FindHardwareWaterSupport()",
                    "ReturnType": "WaterMode",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
                    "DefinitionLine": 343,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 64
                  },
                  {
                    "Name": "GetWaterMode",
                    "FullName": "UnityStandardAssets.Water.Water.GetWaterMode()",
                    "ReturnType": "WaterMode",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
                    "DefinitionLine": 334,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 65
                  },
                  {
                    "Name": "CreateWaterObjects",
                    "FullName": "UnityStandardAssets.Water.Water.CreateWaterObjects(UnityEngine.Camera, out UnityEngine.Camera, out UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
                    "DefinitionLine": 262,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "cam",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "reflectionCamera",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "refractionCamera",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 68
                  },
                  {
                    "Name": "UpdateCameraModes",
                    "FullName": "UnityStandardAssets.Water.Water.UpdateCameraModes(UnityEngine.Camera, UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
                    "DefinitionLine": 226,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "cam",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "reflectionCamera",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 81
                  },
                  {
                    "Name": "UpdateCameraModes",
                    "FullName": "UnityStandardAssets.Water.Water.UpdateCameraModes(UnityEngine.Camera, UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
                    "DefinitionLine": 226,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "cam",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "refractionCamera",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 82
                  },
                  {
                    "Name": "Dot",
                    "FullName": "UnityEngine.Vector3.Dot(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "normal",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 88
                  },
                  {
                    "Name": "CalculateReflectionMatrix",
                    "FullName": "UnityStandardAssets.Water.Water.CalculateReflectionMatrix(ref UnityEngine.Matrix4x4, UnityEngine.Vector4)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
                    "DefinitionLine": 380,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "reflection",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "reflectionPlane",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 92
                  },
                  {
                    "Name": "MultiplyPoint",
                    "FullName": "UnityEngine.Matrix4x4.MultiplyPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "oldpos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 94
                  },
                  {
                    "Name": "CameraSpacePlane",
                    "FullName": "UnityStandardAssets.Water.Water.CameraSpacePlane(UnityEngine.Camera, UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
                    "DefinitionLine": 370,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "reflectionCamera",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "normal",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1.0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 99
                  },
                  {
                    "Name": "CalculateObliqueMatrix",
                    "FullName": "UnityEngine.Camera.CalculateObliqueMatrix(UnityEngine.Vector4)",
                    "ReturnType": "Matrix4x4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "clipPlane",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 100
                  },
                  {
                    "Name": "Render",
                    "FullName": "UnityEngine.Camera.Render()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 112
                  },
                  {
                    "Name": "SetTexture",
                    "FullName": "UnityEngine.Material.SetTexture(string, UnityEngine.Texture)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_ReflectionTex\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_ReflectionTexture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 115
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 115
                  },
                  {
                    "Name": "CameraSpacePlane",
                    "FullName": "UnityStandardAssets.Water.Water.CameraSpacePlane(UnityEngine.Camera, UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector4",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
                    "DefinitionLine": 370,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "refractionCamera",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "normal",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-1.0f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 125
                  },
                  {
                    "Name": "CalculateObliqueMatrix",
                    "FullName": "UnityEngine.Camera.CalculateObliqueMatrix(UnityEngine.Vector4)",
                    "ReturnType": "Matrix4x4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "clipPlane",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 126
                  },
                  {
                    "Name": "Render",
                    "FullName": "UnityEngine.Camera.Render()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 135
                  },
                  {
                    "Name": "SetTexture",
                    "FullName": "UnityEngine.Material.SetTexture(string, UnityEngine.Texture)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_RefractionTex\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_RefractionTexture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 136
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 136
                  },
                  {
                    "Name": "EnableKeyword",
                    "FullName": "UnityEngine.Shader.EnableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_SIMPLE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 149
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_REFLECTIVE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 150
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_REFRACTIVE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 151
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_SIMPLE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 154
                  },
                  {
                    "Name": "EnableKeyword",
                    "FullName": "UnityEngine.Shader.EnableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_REFLECTIVE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 155
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_REFRACTIVE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 156
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_SIMPLE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 159
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_REFLECTIVE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 160
                  },
                  {
                    "Name": "EnableKeyword",
                    "FullName": "UnityEngine.Shader.EnableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_REFRACTIVE\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 161
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "cam",
                      "Type": "Camera",
                      "Assignment": "Camera.current",
                      "Kind": "Definition",
                      "DefinitionLine": 47
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mode",
                      "Type": "WaterMode",
                      "Assignment": "GetWaterMode()",
                      "Kind": "Definition",
                      "DefinitionLine": 64
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera",
                      "Type": "Camera",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 66
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera",
                      "Type": "Camera",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 66
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pos",
                      "Type": "Vector3",
                      "Assignment": "transform.position",
                      "Kind": "Definition",
                      "DefinitionLine": 70
                    }
                  },
                  {
                    "Variable": {
                      "Name": "normal",
                      "Type": "Vector3",
                      "Assignment": "transform.up",
                      "Kind": "Definition",
                      "DefinitionLine": 71
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oldPixelLightCount",
                      "Type": "int",
                      "Assignment": "QualitySettings.pixelLightCount",
                      "Kind": "Definition",
                      "DefinitionLine": 74
                    }
                  },
                  {
                    "Variable": {
                      "Name": "d",
                      "Type": "float",
                      "Assignment": "-Vector3.Dot(normal, pos) - clipPlaneOffset",
                      "Kind": "Definition",
                      "DefinitionLine": 87
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionPlane",
                      "Type": "Vector4",
                      "Assignment": "new Vector4(normal.x, normal.y, normal.z, d)",
                      "Kind": "Definition",
                      "DefinitionLine": 88
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflection",
                      "Type": "Matrix4x4",
                      "Assignment": "Matrix4x4.zero",
                      "Kind": "Definition",
                      "DefinitionLine": 90
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oldpos",
                      "Type": "Vector3",
                      "Assignment": "cam.transform.position",
                      "Kind": "Definition",
                      "DefinitionLine": 92
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newpos",
                      "Type": "Vector3",
                      "Assignment": "reflection.MultiplyPoint(oldpos)",
                      "Kind": "Definition",
                      "DefinitionLine": 93
                    }
                  },
                  {
                    "Variable": {
                      "Name": "clipPlane",
                      "Type": "Vector4",
                      "Assignment": "CameraSpacePlane(reflectionCamera, pos, normal, 1.0f)",
                      "Kind": "Definition",
                      "DefinitionLine": 98
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oldCulling",
                      "Type": "bool",
                      "Assignment": "GL.invertCulling",
                      "Kind": "Definition",
                      "DefinitionLine": 106
                    }
                  },
                  {
                    "Variable": {
                      "Name": "euler",
                      "Type": "Vector3",
                      "Assignment": "cam.transform.eulerAngles",
                      "Kind": "Definition",
                      "DefinitionLine": 109
                    }
                  },
                  {
                    "Variable": {
                      "Name": "clipPlane",
                      "Type": "Vector4",
                      "Assignment": "CameraSpacePlane(refractionCamera, pos, normal, -1.0f)",
                      "Kind": "Definition",
                      "DefinitionLine": 124
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s_InsideWater",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HardwareWaterSupport",
                      "Type": "UnityStandardAssets.Water.Water.WaterMode",
                      "Assignment": "FindHardwareWaterSupport()",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "QualitySettings.pixelLightCount",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 77,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.worldToCameraMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "cam.worldToCameraMatrix * reflection",
                      "Kind": "Assignment",
                      "AssignmentLine": 94,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.projectionMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "cam.CalculateObliqueMatrix(clipPlane)",
                      "Kind": "Assignment",
                      "AssignmentLine": 99,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.cullingMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "cam.projectionMatrix * cam.worldToCameraMatrix",
                      "Kind": "Assignment",
                      "AssignmentLine": 102,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.cullingMask",
                      "Type": "int",
                      "Assignment": "~(1 << 4) & reflectLayers.value",
                      "Kind": "Assignment",
                      "AssignmentLine": 104,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.targetTexture",
                      "Type": "UnityEngine.RenderTexture",
                      "Assignment": "m_ReflectionTexture",
                      "Kind": "Assignment",
                      "AssignmentLine": 105,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GL.invertCulling",
                      "Type": "bool",
                      "Assignment": "!oldCulling",
                      "Kind": "Assignment",
                      "AssignmentLine": 107,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "newpos",
                      "Kind": "Assignment",
                      "AssignmentLine": 108,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.transform.eulerAngles",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(-euler.x, euler.y, euler.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 110,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "oldpos",
                      "Kind": "Assignment",
                      "AssignmentLine": 112,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GL.invertCulling",
                      "Type": "bool",
                      "Assignment": "oldCulling",
                      "Kind": "Assignment",
                      "AssignmentLine": 113,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.worldToCameraMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "cam.worldToCameraMatrix",
                      "Kind": "Assignment",
                      "AssignmentLine": 120,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.projectionMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "cam.CalculateObliqueMatrix(clipPlane)",
                      "Kind": "Assignment",
                      "AssignmentLine": 125,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.cullingMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Assignment": "cam.projectionMatrix * cam.worldToCameraMatrix",
                      "Kind": "Assignment",
                      "AssignmentLine": 128,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.cullingMask",
                      "Type": "int",
                      "Assignment": "~(1 << 4) & refractLayers.value",
                      "Kind": "Assignment",
                      "AssignmentLine": 130,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.targetTexture",
                      "Type": "UnityEngine.RenderTexture",
                      "Assignment": "m_RefractionTexture",
                      "Kind": "Assignment",
                      "AssignmentLine": 131,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "cam.transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 132,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "cam.transform.rotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 133,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "QualitySettings.pixelLightCount",
                      "Type": "int",
                      "Assignment": "oldPixelLightCount",
                      "Kind": "Assignment",
                      "AssignmentLine": 141,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "s_InsideWater",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 164,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Literal",
                      "AssignedTo": "s_InsideWater",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "FindHardwareWaterSupport()",
                      "Type": "UnityStandardAssets.Water.Water.WaterMode",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_HardwareWaterSupport",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 77,
                      "UseKind": "Literal",
                      "AssignedTo": "QualitySettings.pixelLightCount",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.worldToCameraMatrix * reflection",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 94,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "reflectionCamera.worldToCameraMatrix",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "cam.worldToCameraMatrix",
                          "Type": "UnityEngine.Matrix4x4",
                          "Kind": "Use",
                          "UseLine": 94,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "reflectionCamera.worldToCameraMatrix",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "reflection",
                          "Type": "UnityEngine.Matrix4x4",
                          "Kind": "Use",
                          "UseLine": 94,
                          "UseKind": "LocalReference",
                          "AssignedTo": "reflectionCamera.worldToCameraMatrix",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.CalculateObliqueMatrix(clipPlane)",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 99,
                      "UseKind": "Invocation",
                      "AssignedTo": "reflectionCamera.projectionMatrix",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.projectionMatrix * cam.worldToCameraMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 102,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "reflectionCamera.cullingMatrix",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "cam.projectionMatrix",
                          "Type": "UnityEngine.Matrix4x4",
                          "Kind": "Use",
                          "UseLine": 102,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "reflectionCamera.cullingMatrix",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "cam.worldToCameraMatrix",
                          "Type": "UnityEngine.Matrix4x4",
                          "Kind": "Use",
                          "UseLine": 102,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "reflectionCamera.cullingMatrix",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "~(1 << 4) & reflectLayers.value",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 104,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "reflectionCamera.cullingMask",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "~(1 << 4)",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 104,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "reflectionCamera.cullingMask",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "reflectLayers.value",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 104,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "reflectionCamera.cullingMask",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ReflectionTexture",
                      "Type": "UnityEngine.RenderTexture",
                      "Kind": "Use",
                      "UseLine": 105,
                      "UseKind": "FieldReference",
                      "AssignedTo": "reflectionCamera.targetTexture",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "!oldCulling",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 107,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "GL.invertCulling",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newpos",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 108,
                      "UseKind": "LocalReference",
                      "AssignedTo": "reflectionCamera.transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(-euler.x, euler.y, euler.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 110,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "reflectionCamera.transform.eulerAngles",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oldpos",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 112,
                      "UseKind": "LocalReference",
                      "AssignedTo": "reflectionCamera.transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oldCulling",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 113,
                      "UseKind": "LocalReference",
                      "AssignedTo": "GL.invertCulling",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.worldToCameraMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 120,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "refractionCamera.worldToCameraMatrix",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.CalculateObliqueMatrix(clipPlane)",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 125,
                      "UseKind": "Invocation",
                      "AssignedTo": "refractionCamera.projectionMatrix",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.projectionMatrix * cam.worldToCameraMatrix",
                      "Type": "UnityEngine.Matrix4x4",
                      "Kind": "Use",
                      "UseLine": 128,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "refractionCamera.cullingMatrix",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "cam.projectionMatrix",
                          "Type": "UnityEngine.Matrix4x4",
                          "Kind": "Use",
                          "UseLine": 128,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "refractionCamera.cullingMatrix",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "cam.worldToCameraMatrix",
                          "Type": "UnityEngine.Matrix4x4",
                          "Kind": "Use",
                          "UseLine": 128,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "refractionCamera.cullingMatrix",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "~(1 << 4) & refractLayers.value",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 130,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "refractionCamera.cullingMask",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "~(1 << 4)",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 130,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "refractionCamera.cullingMask",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "refractLayers.value",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 130,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "refractionCamera.cullingMask",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RefractionTexture",
                      "Type": "UnityEngine.RenderTexture",
                      "Kind": "Use",
                      "UseLine": 131,
                      "UseKind": "FieldReference",
                      "AssignedTo": "refractionCamera.targetTexture",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 132,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "refractionCamera.transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cam.transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 133,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "refractionCamera.transform.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oldPixelLightCount",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 141,
                      "UseKind": "LocalReference",
                      "AssignedTo": "QualitySettings.pixelLightCount",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 164,
                      "UseKind": "Literal",
                      "AssignedTo": "s_InsideWater",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 40
              },
              {
                "Name": "OnDisable",
                "FullName": "UnityStandardAssets.Water.Water.OnDisable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DestroyImmediate",
                    "FullName": "UnityEngine.Object.DestroyImmediate(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_ReflectionTexture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 174
                  },
                  {
                    "Name": "DestroyImmediate",
                    "FullName": "UnityEngine.Object.DestroyImmediate(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_RefractionTexture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 179
                  },
                  {
                    "Name": "DestroyImmediate",
                    "FullName": "UnityEngine.Object.DestroyImmediate(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "(kvp.Value).gameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 184
                  },
                  {
                    "Name": "Clear",
                    "FullName": "System.Collections.Generic.Dictionary<UnityEngine.Camera, UnityEngine.Camera>.Clear()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 186
                  },
                  {
                    "Name": "DestroyImmediate",
                    "FullName": "UnityEngine.Object.DestroyImmediate(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "(kvp.Value).gameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 189
                  },
                  {
                    "Name": "Clear",
                    "FullName": "System.Collections.Generic.Dictionary<UnityEngine.Camera, UnityEngine.Camera>.Clear()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [],
                    "Line": 191
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_ReflectionTexture",
                      "Type": "UnityEngine.RenderTexture",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 174,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RefractionTexture",
                      "Type": "UnityEngine.RenderTexture",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 179,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "UnityEngine.RenderTexture",
                      "Kind": "Use",
                      "UseLine": 174,
                      "UseKind": "Literal",
                      "AssignedTo": "m_ReflectionTexture",
                      "Value": "null",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "UnityEngine.RenderTexture",
                      "Kind": "Use",
                      "UseLine": 179,
                      "UseKind": "Literal",
                      "AssignedTo": "m_RefractionTexture",
                      "Value": "null",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 170
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Water.Water.Update()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 199
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 203
                  },
                  {
                    "Name": "GetVector",
                    "FullName": "UnityEngine.Material.GetVector(string)",
                    "ReturnType": "Vector4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WaveSpeed\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 209
                  },
                  {
                    "Name": "GetFloat",
                    "FullName": "UnityEngine.Material.GetFloat(string)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_WaveScale\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 210
                  },
                  {
                    "Name": "IEEERemainder",
                    "FullName": "System.Math.IEEERemainder(double, double)",
                    "ReturnType": "Double",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "waveSpeed.x * waveScale4.x * t",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1.0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 216
                  },
                  {
                    "Name": "IEEERemainder",
                    "FullName": "System.Math.IEEERemainder(double, double)",
                    "ReturnType": "Double",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "waveSpeed.y * waveScale4.y * t",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1.0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 217
                  },
                  {
                    "Name": "IEEERemainder",
                    "FullName": "System.Math.IEEERemainder(double, double)",
                    "ReturnType": "Double",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "waveSpeed.z * waveScale4.z * t",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1.0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 218
                  },
                  {
                    "Name": "IEEERemainder",
                    "FullName": "System.Math.IEEERemainder(double, double)",
                    "ReturnType": "Double",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "waveSpeed.w * waveScale4.w * t",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1.0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 219
                  },
                  {
                    "Name": "SetVector",
                    "FullName": "UnityEngine.Material.SetVector(string, UnityEngine.Vector4)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_WaveOffset\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "offsetClamped",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 222
                  },
                  {
                    "Name": "SetVector",
                    "FullName": "UnityEngine.Material.SetVector(string, UnityEngine.Vector4)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_WaveScale4\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "waveScale4",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 223
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "mat",
                      "Type": "Material",
                      "Assignment": "GetComponent<Renderer>().sharedMaterial",
                      "Kind": "Definition",
                      "DefinitionLine": 202
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waveSpeed",
                      "Type": "Vector4",
                      "Assignment": "mat.GetVector(\"WaveSpeed\")",
                      "Kind": "Definition",
                      "DefinitionLine": 208
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waveScale",
                      "Type": "float",
                      "Assignment": "mat.GetFloat(\"_WaveScale\")",
                      "Kind": "Definition",
                      "DefinitionLine": 209
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waveScale4",
                      "Type": "Vector4",
                      "Assignment": "new Vector4(waveScale, waveScale, waveScale * 0.4f, waveScale * 0.45f)",
                      "Kind": "Definition",
                      "DefinitionLine": 210
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "double",
                      "Assignment": "Time.timeSinceLevelLoad / 20.0",
                      "Kind": "Definition",
                      "DefinitionLine": 213
                    }
                  },
                  {
                    "Variable": {
                      "Name": "offsetClamped",
                      "Type": "Vector4",
                      "Assignment": "new Vector4(\r\n                (float)Math.IEEERemainder(waveSpeed.x * waveScale4.x * t, 1.0),\r\n                (float)Math.IEEERemainder(waveSpeed.y * waveScale4.y * t, 1.0),\r\n                (float)Math.IEEERemainder(waveSpeed.z * waveScale4.z * t, 1.0),\r\n                (float)Math.IEEERemainder(waveSpeed.w * waveScale4.w * t, 1.0)\r\n                )",
                      "Kind": "Definition",
                      "DefinitionLine": 214
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 197
              },
              {
                "Name": "UpdateCameraModes",
                "FullName": "UnityStandardAssets.Water.Water.UpdateCameraModes(UnityEngine.Camera, UnityEngine.Camera)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "src",
                    "Type": "Camera",
                    "Assignment": null
                  },
                  {
                    "Name": "dest",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Skybox>()",
                    "ReturnType": "Skybox",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 237
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Skybox>()",
                    "ReturnType": "Skybox",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 238
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "sky",
                      "Type": "Skybox",
                      "Assignment": "src.GetComponent<Skybox>()",
                      "Kind": "Definition",
                      "DefinitionLine": 236
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mysky",
                      "Type": "Skybox",
                      "Assignment": "dest.GetComponent<Skybox>()",
                      "Kind": "Definition",
                      "DefinitionLine": 237
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dest.clearFlags",
                      "Type": "UnityEngine.CameraClearFlags",
                      "Assignment": "src.clearFlags",
                      "Kind": "Assignment",
                      "AssignmentLine": 232,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dest.backgroundColor",
                      "Type": "UnityEngine.Color",
                      "Assignment": "src.backgroundColor",
                      "Kind": "Assignment",
                      "AssignmentLine": 233,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mysky.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 240,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mysky.enabled",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 244,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mysky.material",
                      "Type": "UnityEngine.Material",
                      "Assignment": "sky.material",
                      "Kind": "Assignment",
                      "AssignmentLine": 245,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dest.farClipPlane",
                      "Type": "float",
                      "Assignment": "src.farClipPlane",
                      "Kind": "Assignment",
                      "AssignmentLine": 251,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dest.nearClipPlane",
                      "Type": "float",
                      "Assignment": "src.nearClipPlane",
                      "Kind": "Assignment",
                      "AssignmentLine": 252,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dest.orthographic",
                      "Type": "bool",
                      "Assignment": "src.orthographic",
                      "Kind": "Assignment",
                      "AssignmentLine": 253,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dest.fieldOfView",
                      "Type": "float",
                      "Assignment": "src.fieldOfView",
                      "Kind": "Assignment",
                      "AssignmentLine": 254,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dest.aspect",
                      "Type": "float",
                      "Assignment": "src.aspect",
                      "Kind": "Assignment",
                      "AssignmentLine": 255,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dest.orthographicSize",
                      "Type": "float",
                      "Assignment": "src.orthographicSize",
                      "Kind": "Assignment",
                      "AssignmentLine": 256,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "src.clearFlags",
                      "Type": "UnityEngine.CameraClearFlags",
                      "Kind": "Use",
                      "UseLine": 232,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "dest.clearFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "src.backgroundColor",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 233,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "dest.backgroundColor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 240,
                      "UseKind": "Literal",
                      "AssignedTo": "mysky.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 244,
                      "UseKind": "Literal",
                      "AssignedTo": "mysky.enabled",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sky.material",
                      "Type": "UnityEngine.Material",
                      "Kind": "Use",
                      "UseLine": 245,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "mysky.material",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "src.farClipPlane",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 251,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "dest.farClipPlane",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "src.nearClipPlane",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 252,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "dest.nearClipPlane",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "src.orthographic",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 253,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "dest.orthographic",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "src.fieldOfView",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 254,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "dest.fieldOfView",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "src.aspect",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 255,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "dest.aspect",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "src.orthographicSize",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 256,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "dest.orthographicSize",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 226
              },
              {
                "Name": "CreateWaterObjects",
                "FullName": "UnityStandardAssets.Water.Water.CreateWaterObjects(UnityEngine.Camera, out UnityEngine.Camera, out UnityEngine.Camera)",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "currentCamera",
                    "Type": "Camera",
                    "Assignment": null
                  },
                  {
                    "Name": "reflectionCamera",
                    "Type": "Camera",
                    "Assignment": null
                  },
                  {
                    "Name": "refractionCamera",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetWaterMode",
                    "FullName": "UnityStandardAssets.Water.Water.GetWaterMode()",
                    "ReturnType": "WaterMode",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\Water.cs",
                    "DefinitionLine": 334,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 264
                  },
                  {
                    "Name": "DestroyImmediate",
                    "FullName": "UnityEngine.Object.DestroyImmediate(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_ReflectionTexture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 276
                  },
                  {
                    "Name": "GetInstanceID",
                    "FullName": "UnityEngine.Object.GetInstanceID()",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 279
                  },
                  {
                    "Name": "TryGetValue",
                    "FullName": "System.Collections.Generic.Dictionary<UnityEngine.Camera, UnityEngine.Camera>.TryGetValue(UnityEngine.Camera, out UnityEngine.Camera)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "currentCamera",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "reflectionCamera",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 286
                  },
                  {
                    "Name": "GetInstanceID",
                    "FullName": "UnityEngine.Object.GetInstanceID()",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 289
                  },
                  {
                    "Name": "GetInstanceID",
                    "FullName": "UnityEngine.Object.GetInstanceID()",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 289
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<UnityEngine.Camera>()",
                    "ReturnType": "Camera",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 290
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent<UnityEngine.FlareLayer>()",
                    "ReturnType": "FlareLayer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 294
                  },
                  {
                    "Name": "DestroyImmediate",
                    "FullName": "UnityEngine.Object.DestroyImmediate(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_RefractionTexture",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 307
                  },
                  {
                    "Name": "GetInstanceID",
                    "FullName": "UnityEngine.Object.GetInstanceID()",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 310
                  },
                  {
                    "Name": "TryGetValue",
                    "FullName": "System.Collections.Generic.Dictionary<UnityEngine.Camera, UnityEngine.Camera>.TryGetValue(UnityEngine.Camera, out UnityEngine.Camera)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "currentCamera",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "refractionCamera",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 317
                  },
                  {
                    "Name": "GetInstanceID",
                    "FullName": "UnityEngine.Object.GetInstanceID()",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 321
                  },
                  {
                    "Name": "GetInstanceID",
                    "FullName": "UnityEngine.Object.GetInstanceID()",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 321
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<UnityEngine.Camera>()",
                    "ReturnType": "Camera",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 323
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent<UnityEngine.FlareLayer>()",
                    "ReturnType": "FlareLayer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 327
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "mode",
                      "Type": "WaterMode",
                      "Assignment": "GetWaterMode()",
                      "Kind": "Definition",
                      "DefinitionLine": 263
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go",
                      "Type": "GameObject",
                      "Assignment": "new GameObject(\"Water Refl Camera id\" + GetInstanceID() + \" for \" + currentCamera.GetInstanceID(), typeof(Camera), typeof(Skybox))",
                      "Kind": "Definition",
                      "DefinitionLine": 288
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go",
                      "Type": "GameObject",
                      "Assignment": "new GameObject(\"Water Refr Camera id\" + GetInstanceID() + \" for \" + currentCamera.GetInstanceID(),\r\n                            typeof(Camera), typeof(Skybox))",
                      "Kind": "Definition",
                      "DefinitionLine": 319
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 265,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 266,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ReflectionTexture",
                      "Type": "UnityEngine.RenderTexture",
                      "Assignment": "new RenderTexture(textureSize, textureSize, 16)",
                      "Kind": "Assignment",
                      "AssignmentLine": 277,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ReflectionTexture.name",
                      "Type": "string",
                      "Assignment": "\"__WaterReflection\" + GetInstanceID()",
                      "Kind": "Assignment",
                      "AssignmentLine": 278,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ReflectionTexture.isPowerOfTwo",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 279,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ReflectionTexture.hideFlags",
                      "Type": "UnityEngine.HideFlags",
                      "Assignment": "HideFlags.DontSave",
                      "Kind": "Assignment",
                      "AssignmentLine": 280,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OldReflectionTextureSize",
                      "Type": "int",
                      "Assignment": "textureSize",
                      "Kind": "Assignment",
                      "AssignmentLine": 281,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "go.GetComponent<Camera>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 289,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 290,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 291,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera.transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "transform.rotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 292,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go.hideFlags",
                      "Type": "UnityEngine.HideFlags",
                      "Assignment": "HideFlags.HideAndDontSave",
                      "Kind": "Assignment",
                      "AssignmentLine": 294,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_ReflectionCameras[currentCamera]",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "reflectionCamera",
                      "Kind": "Assignment",
                      "AssignmentLine": 295,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RefractionTexture",
                      "Type": "UnityEngine.RenderTexture",
                      "Assignment": "new RenderTexture(textureSize, textureSize, 16)",
                      "Kind": "Assignment",
                      "AssignmentLine": 308,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RefractionTexture.name",
                      "Type": "string",
                      "Assignment": "\"__WaterRefraction\" + GetInstanceID()",
                      "Kind": "Assignment",
                      "AssignmentLine": 309,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RefractionTexture.isPowerOfTwo",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 310,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RefractionTexture.hideFlags",
                      "Type": "UnityEngine.HideFlags",
                      "Assignment": "HideFlags.DontSave",
                      "Kind": "Assignment",
                      "AssignmentLine": 311,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OldRefractionTextureSize",
                      "Type": "int",
                      "Assignment": "textureSize",
                      "Kind": "Assignment",
                      "AssignmentLine": 312,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "go.GetComponent<Camera>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 322,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 323,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 324,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera.transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "transform.rotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 325,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go.hideFlags",
                      "Type": "UnityEngine.HideFlags",
                      "Assignment": "HideFlags.HideAndDontSave",
                      "Kind": "Assignment",
                      "AssignmentLine": 327,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RefractionCameras[currentCamera]",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "refractionCamera",
                      "Kind": "Assignment",
                      "AssignmentLine": 328,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 265,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionCamera",
                      "Value": "null",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 266,
                      "UseKind": "Literal",
                      "AssignedTo": "refractionCamera",
                      "Value": "null",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new RenderTexture(textureSize, textureSize, 16)",
                      "Type": "UnityEngine.RenderTexture",
                      "Kind": "Use",
                      "UseLine": 277,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_ReflectionTexture",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "\"__WaterReflection\" + GetInstanceID()",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 278,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_ReflectionTexture.name",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "string",
                          "Kind": "Use",
                          "UseLine": 278,
                          "UseKind": "Literal",
                          "AssignedTo": "m_ReflectionTexture.name",
                          "Value": "\"__WaterReflection\"",
                          "VariablesList": []
                        },
                        {
                          "Name": "GetInstanceID()",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 278,
                          "UseKind": "Invocation",
                          "AssignedTo": "m_ReflectionTexture.name",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 279,
                      "UseKind": "Literal",
                      "AssignedTo": "m_ReflectionTexture.isPowerOfTwo",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "HideFlags.DontSave",
                      "Type": "UnityEngine.HideFlags",
                      "Kind": "Use",
                      "UseLine": 280,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_ReflectionTexture.hideFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "textureSize",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 281,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_OldReflectionTextureSize",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go.GetComponent<Camera>()",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 289,
                      "UseKind": "Invocation",
                      "AssignedTo": "reflectionCamera",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 290,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionCamera.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 291,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "reflectionCamera.transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 292,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "reflectionCamera.transform.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "HideFlags.HideAndDontSave",
                      "Type": "UnityEngine.HideFlags",
                      "Kind": "Use",
                      "UseLine": 294,
                      "UseKind": "FieldReference",
                      "AssignedTo": "go.hideFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionCamera",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 295,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "m_ReflectionCameras[currentCamera]",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new RenderTexture(textureSize, textureSize, 16)",
                      "Type": "UnityEngine.RenderTexture",
                      "Kind": "Use",
                      "UseLine": 308,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_RefractionTexture",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "\"__WaterRefraction\" + GetInstanceID()",
                      "Type": "string",
                      "Kind": "Use",
                      "UseLine": 309,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_RefractionTexture.name",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "string",
                          "Kind": "Use",
                          "UseLine": 309,
                          "UseKind": "Literal",
                          "AssignedTo": "m_RefractionTexture.name",
                          "Value": "\"__WaterRefraction\"",
                          "VariablesList": []
                        },
                        {
                          "Name": "GetInstanceID()",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 309,
                          "UseKind": "Invocation",
                          "AssignedTo": "m_RefractionTexture.name",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 310,
                      "UseKind": "Literal",
                      "AssignedTo": "m_RefractionTexture.isPowerOfTwo",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "HideFlags.DontSave",
                      "Type": "UnityEngine.HideFlags",
                      "Kind": "Use",
                      "UseLine": 311,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_RefractionTexture.hideFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "textureSize",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 312,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_OldRefractionTextureSize",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go.GetComponent<Camera>()",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 322,
                      "UseKind": "Invocation",
                      "AssignedTo": "refractionCamera",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 323,
                      "UseKind": "Literal",
                      "AssignedTo": "refractionCamera.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 324,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "refractionCamera.transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 325,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "refractionCamera.transform.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "HideFlags.HideAndDontSave",
                      "Type": "UnityEngine.HideFlags",
                      "Kind": "Use",
                      "UseLine": 327,
                      "UseKind": "FieldReference",
                      "AssignedTo": "go.hideFlags",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "refractionCamera",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 328,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "m_RefractionCameras[currentCamera]",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 262
              },
              {
                "Name": "GetWaterMode",
                "FullName": "UnityStandardAssets.Water.Water.GetWaterMode()",
                "Modifiers": [],
                "ReturnType": "WaterMode",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 334
              },
              {
                "Name": "FindHardwareWaterSupport",
                "FullName": "UnityStandardAssets.Water.Water.FindHardwareWaterSupport()",
                "Modifiers": [],
                "ReturnType": "WaterMode",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 345
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 350
                  },
                  {
                    "Name": "GetTag",
                    "FullName": "UnityEngine.Material.GetTag(string, bool)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATERMODE\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 356
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "mat",
                      "Type": "Material",
                      "Assignment": "GetComponent<Renderer>().sharedMaterial",
                      "Kind": "Definition",
                      "DefinitionLine": 349
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mode",
                      "Type": "string",
                      "Assignment": "mat.GetTag(\"WATERMODE\", false)",
                      "Kind": "Definition",
                      "DefinitionLine": 355
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 343
              },
              {
                "Name": "CameraSpacePlane",
                "FullName": "UnityStandardAssets.Water.Water.CameraSpacePlane(UnityEngine.Camera, UnityEngine.Vector3, UnityEngine.Vector3, float)",
                "Modifiers": [],
                "ReturnType": "Vector4",
                "Parameters": [
                  {
                    "Name": "cam",
                    "Type": "Camera",
                    "Assignment": null
                  },
                  {
                    "Name": "pos",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "normal",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "sideSign",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "MultiplyPoint",
                    "FullName": "UnityEngine.Matrix4x4.MultiplyPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "offsetPos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 374
                  },
                  {
                    "Name": "MultiplyVector",
                    "FullName": "UnityEngine.Matrix4x4.MultiplyVector(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "normal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 375
                  },
                  {
                    "Name": "Dot",
                    "FullName": "UnityEngine.Vector3.Dot(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "cpos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "cnormal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 376
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "offsetPos",
                      "Type": "Vector3",
                      "Assignment": "pos + normal * clipPlaneOffset",
                      "Kind": "Definition",
                      "DefinitionLine": 371
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m",
                      "Type": "Matrix4x4",
                      "Assignment": "cam.worldToCameraMatrix",
                      "Kind": "Definition",
                      "DefinitionLine": 372
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cpos",
                      "Type": "Vector3",
                      "Assignment": "m.MultiplyPoint(offsetPos)",
                      "Kind": "Definition",
                      "DefinitionLine": 373
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cnormal",
                      "Type": "Vector3",
                      "Assignment": "m.MultiplyVector(normal).normalized * sideSign",
                      "Kind": "Definition",
                      "DefinitionLine": 374
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 370
              },
              {
                "Name": "CalculateReflectionMatrix",
                "FullName": "UnityStandardAssets.Water.Water.CalculateReflectionMatrix(ref UnityEngine.Matrix4x4, UnityEngine.Vector4)",
                "Modifiers": [
                  "static"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "reflectionMat",
                    "Type": "Matrix4x4",
                    "Assignment": null
                  },
                  {
                    "Name": "plane",
                    "Type": "Vector4",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "reflectionMat.m00",
                      "Type": "float",
                      "Assignment": "(1F - 2F * plane[0] * plane[0])",
                      "Kind": "Assignment",
                      "AssignmentLine": 381,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m01",
                      "Type": "float",
                      "Assignment": "(- 2F * plane[0] * plane[1])",
                      "Kind": "Assignment",
                      "AssignmentLine": 382,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m02",
                      "Type": "float",
                      "Assignment": "(- 2F * plane[0] * plane[2])",
                      "Kind": "Assignment",
                      "AssignmentLine": 383,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m03",
                      "Type": "float",
                      "Assignment": "(- 2F * plane[3] * plane[0])",
                      "Kind": "Assignment",
                      "AssignmentLine": 384,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m10",
                      "Type": "float",
                      "Assignment": "(- 2F * plane[1] * plane[0])",
                      "Kind": "Assignment",
                      "AssignmentLine": 386,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m11",
                      "Type": "float",
                      "Assignment": "(1F - 2F * plane[1] * plane[1])",
                      "Kind": "Assignment",
                      "AssignmentLine": 387,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m12",
                      "Type": "float",
                      "Assignment": "(- 2F * plane[1] * plane[2])",
                      "Kind": "Assignment",
                      "AssignmentLine": 388,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m13",
                      "Type": "float",
                      "Assignment": "(- 2F * plane[3] * plane[1])",
                      "Kind": "Assignment",
                      "AssignmentLine": 389,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m20",
                      "Type": "float",
                      "Assignment": "(- 2F * plane[2] * plane[0])",
                      "Kind": "Assignment",
                      "AssignmentLine": 391,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m21",
                      "Type": "float",
                      "Assignment": "(- 2F * plane[2] * plane[1])",
                      "Kind": "Assignment",
                      "AssignmentLine": 392,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m22",
                      "Type": "float",
                      "Assignment": "(1F - 2F * plane[2] * plane[2])",
                      "Kind": "Assignment",
                      "AssignmentLine": 393,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m23",
                      "Type": "float",
                      "Assignment": "(- 2F * plane[3] * plane[2])",
                      "Kind": "Assignment",
                      "AssignmentLine": 394,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m30",
                      "Type": "float",
                      "Assignment": "0F",
                      "Kind": "Assignment",
                      "AssignmentLine": 396,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m31",
                      "Type": "float",
                      "Assignment": "0F",
                      "Kind": "Assignment",
                      "AssignmentLine": 397,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m32",
                      "Type": "float",
                      "Assignment": "0F",
                      "Kind": "Assignment",
                      "AssignmentLine": 398,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflectionMat.m33",
                      "Type": "float",
                      "Assignment": "1F",
                      "Kind": "Assignment",
                      "AssignmentLine": 399,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(1F - 2F * plane[0] * plane[0])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 381,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m00",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2F * plane[0] * plane[1])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 382,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m01",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2F * plane[0] * plane[2])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 383,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m02",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2F * plane[3] * plane[0])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 384,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m03",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2F * plane[1] * plane[0])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 386,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m10",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(1F - 2F * plane[1] * plane[1])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 387,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m11",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2F * plane[1] * plane[2])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 388,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m12",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2F * plane[3] * plane[1])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 389,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m13",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2F * plane[2] * plane[0])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 391,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m20",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2F * plane[2] * plane[1])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 392,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m21",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(1F - 2F * plane[2] * plane[2])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 393,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m22",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(- 2F * plane[3] * plane[2])",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 394,
                      "UseKind": null,
                      "AssignedTo": "reflectionMat.m23",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 396,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionMat.m30",
                      "Value": "0F",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 397,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionMat.m31",
                      "Value": "0F",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 398,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionMat.m32",
                      "Value": "0F",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 399,
                      "UseKind": "Literal",
                      "AssignedTo": "reflectionMat.m33",
                      "Value": "1F",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 380
              }
            ],
            "Fields": [
              {
                "Name": "waterMode",
                "Type": "WaterMode",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "WaterMode.Refractive",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "disablePixelLights",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "textureSize",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "256",
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "clipPlaneOffset",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.07f",
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "reflectLayers",
                "Type": "LayerMask",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "-1",
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "refractLayers",
                "Type": "LayerMask",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "-1",
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "m_ReflectionCameras",
                "Type": "Dictionary<Camera, Camera>",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new Dictionary<Camera, Camera>()",
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "m_RefractionCameras",
                "Type": "Dictionary<Camera, Camera>",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new Dictionary<Camera, Camera>()",
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "m_ReflectionTexture",
                "Type": "RenderTexture",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "m_RefractionTexture",
                "Type": "RenderTexture",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 29
              },
              {
                "Name": "m_HardwareWaterSupport",
                "Type": "WaterMode",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "WaterMode.Refractive",
                "Attributes": [],
                "Line": 30
              },
              {
                "Name": "m_OldReflectionTextureSize",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 31
              },
              {
                "Name": "m_OldRefractionTextureSize",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 32
              },
              {
                "Name": "s_InsideWater",
                "Type": "bool",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 33
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "WaterBase",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\WaterBase.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WaterBase",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "UpdateShader",
                "FullName": "UnityStandardAssets.Water.WaterBase.UpdateShader()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SupportsRenderTextureFormat",
                    "FullName": "UnityEngine.SystemInfo.SupportsRenderTextureFormat(UnityEngine.RenderTextureFormat)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "RenderTextureFormat.Depth",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "EnableKeyword",
                    "FullName": "UnityEngine.Shader.EnableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_EDGEBLEND_ON\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 45
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_EDGEBLEND_OFF\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "EnableKeyword",
                    "FullName": "UnityEngine.Shader.EnableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_EDGEBLEND_OFF\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 55
                  },
                  {
                    "Name": "DisableKeyword",
                    "FullName": "UnityEngine.Shader.DisableKeyword(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WATER_EDGEBLEND_ON\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "sharedMaterial.shader.maximumLOD",
                      "Type": "int",
                      "Assignment": "501",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sharedMaterial.shader.maximumLOD",
                      "Type": "int",
                      "Assignment": "301",
                      "Kind": "Assignment",
                      "AssignmentLine": 28,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sharedMaterial.shader.maximumLOD",
                      "Type": "int",
                      "Assignment": "201",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "edgeBlend",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.main.depthTextureMode",
                      "Type": "UnityEngine.DepthTextureMode",
                      "Assignment": "DepthTextureMode.Depth",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "OrAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "Literal",
                      "AssignedTo": "sharedMaterial.shader.maximumLOD",
                      "Value": "501",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 28,
                      "UseKind": "Literal",
                      "AssignedTo": "sharedMaterial.shader.maximumLOD",
                      "Value": "301",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "Literal",
                      "AssignedTo": "sharedMaterial.shader.maximumLOD",
                      "Value": "201",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Literal",
                      "AssignedTo": "edgeBlend",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "DepthTextureMode.Depth",
                      "Type": "UnityEngine.DepthTextureMode",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "FieldReference",
                      "AssignedTo": "Camera.main.depthTextureMode",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "WaterTileBeingRendered",
                "FullName": "UnityStandardAssets.Water.WaterBase.WaterTileBeingRendered(UnityEngine.Transform, UnityEngine.Camera)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "tr",
                    "Type": "Transform",
                    "Assignment": null
                  },
                  {
                    "Name": "currentCam",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "currentCam.depthTextureMode",
                      "Type": "UnityEngine.DepthTextureMode",
                      "Assignment": "DepthTextureMode.Depth",
                      "Kind": "Assignment",
                      "AssignmentLine": 64,
                      "AssignmentKind": "OrAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "DepthTextureMode.Depth",
                      "Type": "UnityEngine.DepthTextureMode",
                      "Kind": "Use",
                      "UseLine": 64,
                      "UseKind": "FieldReference",
                      "AssignedTo": "currentCam.depthTextureMode",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 61
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Water.WaterBase.Update()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "UpdateShader",
                    "FullName": "UnityStandardAssets.Water.WaterBase.UpdateShader()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\WaterBase.cs",
                    "DefinitionLine": 21,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 74
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 70
              }
            ],
            "Fields": [
              {
                "Name": "sharedMaterial",
                "Type": "Material",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "waterQuality",
                "Type": "WaterQuality",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "WaterQuality.High",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "edgeBlend",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 18
              }
            ],
            "Line": 13
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "WaterTile",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\WaterTile.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WaterTile",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Water.WaterTile.Start()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "AcquireComponents",
                    "FullName": "UnityStandardAssets.Water.WaterTile.AcquireComponents()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\WaterTile.cs",
                    "DefinitionLine": 19,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 15
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              },
              {
                "Name": "AcquireComponents",
                "FullName": "UnityStandardAssets.Water.WaterTile.AcquireComponents()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Water.PlanarReflection>()",
                    "ReturnType": "PlanarReflection",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 25
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Water.PlanarReflection>()",
                    "ReturnType": "PlanarReflection",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 29
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Water.WaterBase>()",
                    "ReturnType": "WaterBase",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 37
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Water.WaterBase>()",
                    "ReturnType": "WaterBase",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 41
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "reflection",
                      "Type": "UnityStandardAssets.Water.PlanarReflection",
                      "Assignment": "transform.parent.GetComponent<PlanarReflection>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "reflection",
                      "Type": "UnityStandardAssets.Water.PlanarReflection",
                      "Assignment": "transform.GetComponent<PlanarReflection>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 28,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waterBase",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Assignment": "transform.parent.GetComponent<WaterBase>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waterBase",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Assignment": "transform.GetComponent<WaterBase>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.parent.GetComponent<PlanarReflection>()",
                      "Type": "UnityStandardAssets.Water.PlanarReflection",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "Invocation",
                      "AssignedTo": "reflection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.GetComponent<PlanarReflection>()",
                      "Type": "UnityStandardAssets.Water.PlanarReflection",
                      "Kind": "Use",
                      "UseLine": 28,
                      "UseKind": "Invocation",
                      "AssignedTo": "reflection",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.parent.GetComponent<WaterBase>()",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "Invocation",
                      "AssignedTo": "waterBase",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.GetComponent<WaterBase>()",
                      "Type": "UnityStandardAssets.Water.WaterBase",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "Invocation",
                      "AssignedTo": "waterBase",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "OnWillRenderObject",
                "FullName": "UnityStandardAssets.Water.WaterTile.OnWillRenderObject()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "WaterTileBeingRendered",
                    "FullName": "UnityStandardAssets.Water.PlanarReflection.WaterTileBeingRendered(UnityEngine.Transform, UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\PlanarReflection.cs",
                    "DefinitionLine": 112,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "transform",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Camera.current",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "WaterTileBeingRendered",
                    "FullName": "UnityStandardAssets.Water.WaterBase.WaterTileBeingRendered(UnityEngine.Transform, UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water\\Water\\Scripts\\WaterBase.cs",
                    "DefinitionLine": 61,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "transform",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Camera.current",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 63
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 55
              }
            ],
            "Fields": [
              {
                "Name": "reflection",
                "Type": "PlanarReflection",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "waterBase",
                "Type": "WaterBase",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "WaterBasic",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Environment\\Water (Basic)\\Scripts\\WaterBasic.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Water",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WaterBasic",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Water.WaterBasic.Update()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 11
                  },
                  {
                    "Name": "GetVector",
                    "FullName": "UnityEngine.Material.GetVector(string)",
                    "ReturnType": "Vector4",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"WaveSpeed\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 22
                  },
                  {
                    "Name": "GetFloat",
                    "FullName": "UnityEngine.Material.GetFloat(string)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_WaveScale\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 23
                  },
                  {
                    "Name": "Repeat",
                    "FullName": "UnityEngine.Mathf.Repeat(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "offset4.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1.0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 27
                  },
                  {
                    "Name": "Repeat",
                    "FullName": "UnityEngine.Mathf.Repeat(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "offset4.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1.0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 27
                  },
                  {
                    "Name": "Repeat",
                    "FullName": "UnityEngine.Mathf.Repeat(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "offset4.z",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1.0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  },
                  {
                    "Name": "Repeat",
                    "FullName": "UnityEngine.Mathf.Repeat(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "offset4.w",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1.0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  },
                  {
                    "Name": "SetVector",
                    "FullName": "UnityEngine.Material.SetVector(string, UnityEngine.Vector4)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"_WaveOffset\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "offsetClamped",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 29
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "r",
                      "Type": "Renderer",
                      "Assignment": "GetComponent<Renderer>()",
                      "Kind": "Definition",
                      "DefinitionLine": 10
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mat",
                      "Type": "Material",
                      "Assignment": "r.sharedMaterial",
                      "Kind": "Definition",
                      "DefinitionLine": 15
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waveSpeed",
                      "Type": "Vector4",
                      "Assignment": "mat.GetVector(\"WaveSpeed\")",
                      "Kind": "Definition",
                      "DefinitionLine": 21
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waveScale",
                      "Type": "float",
                      "Assignment": "mat.GetFloat(\"_WaveScale\")",
                      "Kind": "Definition",
                      "DefinitionLine": 22
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "float",
                      "Assignment": "Time.time / 20.0f",
                      "Kind": "Definition",
                      "DefinitionLine": 23
                    }
                  },
                  {
                    "Variable": {
                      "Name": "offset4",
                      "Type": "Vector4",
                      "Assignment": "waveSpeed * (t * waveScale)",
                      "Kind": "Definition",
                      "DefinitionLine": 25
                    }
                  },
                  {
                    "Variable": {
                      "Name": "offsetClamped",
                      "Type": "Vector4",
                      "Assignment": "new Vector4(Mathf.Repeat(offset4.x, 1.0f), Mathf.Repeat(offset4.y, 1.0f),\r\n                Mathf.Repeat(offset4.z, 1.0f), Mathf.Repeat(offset4.w, 1.0f))",
                      "Kind": "Definition",
                      "DefinitionLine": 26
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 9
              }
            ],
            "Fields": [],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "AfterburnerPhysicsForce",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\AfterburnerPhysicsForce.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AfterburnerPhysicsForce",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Effects.AfterburnerPhysicsForce.OnEnable()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Collider>()",
                    "ReturnType": "Collider",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 20
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Sphere",
                      "Type": "UnityEngine.SphereCollider",
                      "Assignment": "(GetComponent<Collider>() as SphereCollider)",
                      "Kind": "Assignment",
                      "AssignmentLine": 19,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(GetComponent<Collider>() as SphereCollider)",
                      "Type": "UnityEngine.SphereCollider",
                      "Kind": "Use",
                      "UseLine": 19,
                      "UseKind": null,
                      "AssignedTo": "m_Sphere",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Effects.AfterburnerPhysicsForce.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "OverlapSphere",
                    "FullName": "UnityEngine.Physics.OverlapSphere(UnityEngine.Vector3, float)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position + m_Sphere.center",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_Sphere.radius",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  },
                  {
                    "Name": "InverseTransformPoint",
                    "FullName": "UnityEngine.Transform.InverseTransformPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Cols[n].transform.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 31
                  },
                  {
                    "Name": "MoveTowards",
                    "FullName": "UnityEngine.Vector3.MoveTowards(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "localPos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "new Vector3(0, 0, localPos.z)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "effectWidth*0.5f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Mathf.Atan2(localPos.x, localPos.z)*Mathf.Rad2Deg",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "localPos.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localPos.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "effectDistance",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localPos.magnitude",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "effectAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "angle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 35
                  },
                  {
                    "Name": "AddForceAtPosition",
                    "FullName": "UnityEngine.Rigidbody.AddForceAtPosition(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "delta.normalized*force*falloff",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Vector3.Lerp(m_Cols[n].transform.position,\r\n                                                                              transform.TransformPoint(0, 0, localPos.z),\r\n                                                                              0.1f)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Vector3.Lerp(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Cols[n].transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "transform.TransformPoint(0, 0, localPos.z)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0.1f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "TransformPoint",
                    "FullName": "UnityEngine.Transform.TransformPoint(float, float, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localPos.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 39
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "n",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 26
                    }
                  },
                  {
                    "Variable": {
                      "Name": "localPos",
                      "Type": "Vector3",
                      "Assignment": "transform.InverseTransformPoint(m_Cols[n].transform.position)",
                      "Kind": "Definition",
                      "DefinitionLine": 30
                    }
                  },
                  {
                    "Variable": {
                      "Name": "angle",
                      "Type": "float",
                      "Assignment": "Mathf.Abs(Mathf.Atan2(localPos.x, localPos.z)*Mathf.Rad2Deg)",
                      "Kind": "Definition",
                      "DefinitionLine": 32
                    }
                  },
                  {
                    "Variable": {
                      "Name": "falloff",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(effectDistance, 0, localPos.magnitude)",
                      "Kind": "Definition",
                      "DefinitionLine": 33
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "Vector3",
                      "Assignment": "m_Cols[n].transform.position - transform.position",
                      "Kind": "Definition",
                      "DefinitionLine": 35
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Cols",
                      "Type": "UnityEngine.Collider[]",
                      "Assignment": "Physics.OverlapSphere(transform.position + m_Sphere.center, m_Sphere.radius)",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "localPos",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.MoveTowards(localPos, new Vector3(0, 0, localPos.z), effectWidth*0.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "falloff",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(effectAngle, 0, angle)",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Physics.OverlapSphere(transform.position + m_Sphere.center, m_Sphere.radius)",
                      "Type": "UnityEngine.Collider[]",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Cols",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.MoveTowards(localPos, new Vector3(0, 0, localPos.z), effectWidth*0.5f)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "Invocation",
                      "AssignedTo": "localPos",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.InverseLerp(effectAngle, 0, angle)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "Invocation",
                      "AssignedTo": "falloff",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "OnDrawGizmosSelected",
                "FullName": "UnityStandardAssets.Effects.AfterburnerPhysicsForce.OnDrawGizmosSelected()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Collider>()",
                    "ReturnType": "Collider",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 50
                  },
                  {
                    "Name": "TransformDirection",
                    "FullName": "UnityEngine.Transform.TransformDirection(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Quaternion.AngleAxis(effectAngle, perpDirections[n])*Vector3.forward",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 62
                  },
                  {
                    "Name": "AngleAxis",
                    "FullName": "UnityEngine.Quaternion.AngleAxis(float, UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "effectAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "perpDirections[n]",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 62
                  },
                  {
                    "Name": "DrawLine",
                    "FullName": "UnityEngine.Gizmos.DrawLine(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "origin",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "origin + direction*m_Sphere.radius*2",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 64
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "directions",
                      "Type": "var",
                      "Assignment": "new Vector3[] {Vector3.up, -Vector3.up, Vector3.right, -Vector3.right}",
                      "Kind": "Definition",
                      "DefinitionLine": 53
                    }
                  },
                  {
                    "Variable": {
                      "Name": "perpDirections",
                      "Type": "var",
                      "Assignment": "new Vector3[] {-Vector3.right, Vector3.right, Vector3.up, -Vector3.up}",
                      "Kind": "Definition",
                      "DefinitionLine": 54
                    }
                  },
                  {
                    "Variable": {
                      "Name": "n",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 56
                    }
                  },
                  {
                    "Variable": {
                      "Name": "origin",
                      "Type": "Vector3",
                      "Assignment": "transform.position + transform.rotation*directions[n]*effectWidth*0.5f",
                      "Kind": "Definition",
                      "DefinitionLine": 58
                    }
                  },
                  {
                    "Variable": {
                      "Name": "direction",
                      "Type": "Vector3",
                      "Assignment": "transform.TransformDirection(Quaternion.AngleAxis(effectAngle, perpDirections[n])*Vector3.forward)",
                      "Kind": "Definition",
                      "DefinitionLine": 60
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Sphere",
                      "Type": "UnityEngine.SphereCollider",
                      "Assignment": "(GetComponent<Collider>() as SphereCollider)",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Sphere.radius",
                      "Type": "float",
                      "Assignment": "effectDistance*.5f",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Sphere.center",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(0, 0, effectDistance*.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Gizmos.color",
                      "Type": "UnityEngine.Color",
                      "Assignment": "new Color(0, 1, 0, 0.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 55,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(GetComponent<Collider>() as SphereCollider)",
                      "Type": "UnityEngine.SphereCollider",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": null,
                      "AssignedTo": "m_Sphere",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "effectDistance*.5f",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Sphere.radius",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "effectDistance",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 51,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_Sphere.radius",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 51,
                          "UseKind": "Literal",
                          "AssignedTo": "m_Sphere.radius",
                          "Value": ".5f",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(0, 0, effectDistance*.5f)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "m_Sphere.center",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Color(0, 1, 0, 0.5f)",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 55,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "Gizmos.color",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              }
            ],
            "Fields": [
              {
                "Name": "effectAngle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "15",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "effectWidth",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "effectDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "10",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "force",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "10",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "m_Cols",
                "Type": "Collider[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "m_Sphere",
                "Type": "SphereCollider",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "ExplosionFireAndDebris",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\ExplosionFireAndDebris.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ExplosionFireAndDebris",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Effects.ExplosionFireAndDebris.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Effects.ParticleSystemMultiplier>()",
                    "ReturnType": "ParticleSystemMultiplier",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 18
                  },
                  {
                    "Name": "Range",
                    "FullName": "UnityEngine.Random.Range(int, int)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "debrisPrefabs.Length",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 22
                  },
                  {
                    "Name": "Instantiate",
                    "FullName": "UnityEngine.Object.Instantiate<UnityEngine.Transform>(UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Quaternion)",
                    "ReturnType": "Transform",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "prefab",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rot",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "OverlapSphere",
                    "FullName": "UnityEngine.Physics.OverlapSphere(UnityEngine.Vector3, float)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "r",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Collider.Raycast(UnityEngine.Ray, out UnityEngine.RaycastHit, float)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "fireRay",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fireHit",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "r",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 39
                  },
                  {
                    "Name": "AddFire",
                    "FullName": "UnityStandardAssets.Effects.ExplosionFireAndDebris.AddFire(UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\ExplosionFireAndDebris.cs",
                    "DefinitionLine": 62,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "col.transform",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fireHit.point",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fireHit.normal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 41
                  },
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Ray, out UnityEngine.RaycastHit, float)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "fireRay",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fireHit",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "testR",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  },
                  {
                    "Name": "AddFire",
                    "FullName": "UnityStandardAssets.Effects.ExplosionFireAndDebris.AddFire(UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\ExplosionFireAndDebris.cs",
                    "DefinitionLine": 62,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "null",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fireHit.point",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fireHit.normal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "multiplier",
                      "Type": "float",
                      "Assignment": "GetComponent<ParticleSystemMultiplier>().multiplier",
                      "Kind": "Definition",
                      "DefinitionLine": 17
                    }
                  },
                  {
                    "Variable": {
                      "Name": "n",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 19
                    }
                  },
                  {
                    "Variable": {
                      "Name": "prefab",
                      "Type": "var",
                      "Assignment": "debrisPrefabs[Random.Range(0, debrisPrefabs.Length)]",
                      "Kind": "Definition",
                      "DefinitionLine": 21
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pos",
                      "Type": "Vector3",
                      "Assignment": "transform.position + Random.insideUnitSphere*3*multiplier",
                      "Kind": "Definition",
                      "DefinitionLine": 22
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rot",
                      "Type": "Quaternion",
                      "Assignment": "Random.rotation",
                      "Kind": "Definition",
                      "DefinitionLine": 23
                    }
                  },
                  {
                    "Variable": {
                      "Name": "r",
                      "Type": "float",
                      "Assignment": "10*multiplier",
                      "Kind": "Definition",
                      "DefinitionLine": 30
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cols",
                      "Type": "var",
                      "Assignment": "Physics.OverlapSphere(transform.position, r)",
                      "Kind": "Definition",
                      "DefinitionLine": 31
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fireHit",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 36
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fireRay",
                      "Type": "Ray",
                      "Assignment": "new Ray(transform.position, col.transform.position - transform.position)",
                      "Kind": "Definition",
                      "DefinitionLine": 37
                    }
                  },
                  {
                    "Variable": {
                      "Name": "testR",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 46
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fireHit",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 49
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fireRay",
                      "Type": "Ray",
                      "Assignment": "new Ray(transform.position + Vector3.up, Random.onUnitSphere)",
                      "Kind": "Definition",
                      "DefinitionLine": 50
                    }
                  },
                  {
                    "Variable": {
                      "Name": "testR",
                      "Type": "float",
                      "Assignment": "r*.1f",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "r*.1f",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "testR",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "r",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 56,
                          "UseKind": "LocalReference",
                          "AssignedTo": "testR",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 56,
                          "UseKind": "Literal",
                          "AssignedTo": "testR",
                          "Value": ".1f",
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 16
              },
              {
                "Name": "AddFire",
                "FullName": "UnityStandardAssets.Effects.ExplosionFireAndDebris.AddFire(UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "t",
                    "Type": "Transform",
                    "Assignment": null
                  },
                  {
                    "Name": "pos",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "normal",
                    "Type": "Vector3",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Instantiate",
                    "FullName": "UnityEngine.Object.Instantiate<UnityEngine.Transform>(UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Quaternion)",
                    "ReturnType": "Transform",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "firePrefab",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pos",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Quaternion.identity",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 65
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "fire",
                      "Type": "Transform",
                      "Assignment": "(Transform) Instantiate(firePrefab, pos, Quaternion.identity)",
                      "Kind": "Definition",
                      "DefinitionLine": 64
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pos",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "normal*0.5f",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fire.parent",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "t",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "normal*0.5f",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "pos",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "normal",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 63,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "pos",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 63,
                          "UseKind": "Literal",
                          "AssignedTo": "pos",
                          "Value": "0.5f",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "fire.parent",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 62
              }
            ],
            "Fields": [
              {
                "Name": "debrisPrefabs",
                "Type": "Transform[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "firePrefab",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "numDebrisPieces",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "numFires",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 13
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.Random",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "ExplosionPhysicsForce",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\ExplosionPhysicsForce.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ExplosionPhysicsForce",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Effects.ExplosionPhysicsForce.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Effects.ParticleSystemMultiplier>()",
                    "ReturnType": "ParticleSystemMultiplier",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 19
                  },
                  {
                    "Name": "OverlapSphere",
                    "FullName": "UnityEngine.Physics.OverlapSphere(UnityEngine.Vector3, float)",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "r",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 22
                  },
                  {
                    "Name": "Contains",
                    "FullName": "System.Collections.Generic.List<UnityEngine.Rigidbody>.Contains(UnityEngine.Rigidbody)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "col.attachedRigidbody",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  },
                  {
                    "Name": "Add",
                    "FullName": "System.Collections.Generic.List<UnityEngine.Rigidbody>.Add(UnityEngine.Rigidbody)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "col.attachedRigidbody",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  },
                  {
                    "Name": "AddExplosionForce",
                    "FullName": "UnityEngine.Rigidbody.AddExplosionForce(float, UnityEngine.Vector3, float, float, UnityEngine.ForceMode)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "explosionForce*multiplier",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "r",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1*multiplier",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "ForceMode.Impulse",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "multiplier",
                      "Type": "float",
                      "Assignment": "GetComponent<ParticleSystemMultiplier>().multiplier",
                      "Kind": "Definition",
                      "DefinitionLine": 18
                    }
                  },
                  {
                    "Variable": {
                      "Name": "r",
                      "Type": "float",
                      "Assignment": "10*multiplier",
                      "Kind": "Definition",
                      "DefinitionLine": 20
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cols",
                      "Type": "var",
                      "Assignment": "Physics.OverlapSphere(transform.position, r)",
                      "Kind": "Definition",
                      "DefinitionLine": 21
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rigidbodies",
                      "Type": "var",
                      "Assignment": "new List<Rigidbody>()",
                      "Kind": "Definition",
                      "DefinitionLine": 22
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              }
            ],
            "Fields": [
              {
                "Name": "explosionForce",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "4",
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 3
      },
      {
        "Name": "UnityEngine",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "Explosive",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\Explosive.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Explosive",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Effects.Explosive.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Utility.ObjectResetter>()",
                    "ReturnType": "ObjectResetter",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 23
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_ObjectResetter",
                      "Type": "UnityStandardAssets.Utility.ObjectResetter",
                      "Assignment": "GetComponent<ObjectResetter>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<ObjectResetter>()",
                      "Type": "UnityStandardAssets.Utility.ObjectResetter",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_ObjectResetter",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "OnCollisionEnter",
                "FullName": "UnityStandardAssets.Effects.Explosive.OnCollisionEnter(UnityEngine.Collision)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [
                  {
                    "Name": "col",
                    "Type": "Collision",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Project",
                    "FullName": "UnityEngine.Vector3.Project(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "col.relativeVelocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "col.contacts[0].normal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 35
                  },
                  {
                    "Name": "Instantiate",
                    "FullName": "UnityEngine.Object.Instantiate<UnityEngine.Transform>(UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Quaternion)",
                    "ReturnType": "Transform",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "explosionPrefab",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "col.contacts[0].point",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Quaternion.LookRotation(col.contacts[0].normal)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 41
                  },
                  {
                    "Name": "LookRotation",
                    "FullName": "UnityEngine.Quaternion.LookRotation(UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "col.contacts[0].normal",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 42
                  },
                  {
                    "Name": "SendMessage",
                    "FullName": "UnityEngine.Component.SendMessage(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Immobilize\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 45
                  },
                  {
                    "Name": "DelayedReset",
                    "FullName": "UnityStandardAssets.Utility.ObjectResetter.DelayedReset(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\ObjectResetter.cs",
                    "DefinitionLine": 27,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "resetTimeDelay",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 49
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "velocityAlongCollisionNormal",
                      "Type": "float",
                      "Assignment": "Vector3.Project(col.relativeVelocity, col.contacts[0].normal).magnitude",
                      "Kind": "Definition",
                      "DefinitionLine": 33
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Exploded",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 42,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 42,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Exploded",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              },
              {
                "Name": "Reset",
                "FullName": "UnityStandardAssets.Effects.Explosive.Reset()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Exploded",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 61,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 61,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Exploded",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 60
              }
            ],
            "Fields": [
              {
                "Name": "explosionPrefab",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "detonationImpactVelocity",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "10",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "sizeMultiplier",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "reset",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "resetTimeDelay",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "10",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "m_Exploded",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_ObjectResetter",
                "Type": "ObjectResetter",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityStandardAssets.Utility",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "ExtinguishableParticleSystem",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\ExtinguishableParticleSystem.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ExtinguishableParticleSystem",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Effects.ExtinguishableParticleSystem.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponentsInChildren",
                    "FullName": "UnityEngine.Component.GetComponentsInChildren<UnityEngine.ParticleSystem>()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 16
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Systems",
                      "Type": "UnityEngine.ParticleSystem[]",
                      "Assignment": "GetComponentsInChildren<ParticleSystem>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponentsInChildren<ParticleSystem>()",
                      "Type": "UnityEngine.ParticleSystem[]",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Systems",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "Extinguish",
                "FullName": "UnityStandardAssets.Effects.ExtinguishableParticleSystem.Extinguish()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "emission",
                      "Type": "var",
                      "Assignment": "system.emission",
                      "Kind": "Definition",
                      "DefinitionLine": 23
                    }
                  },
                  {
                    "Variable": {
                      "Name": "emission.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "Literal",
                      "AssignedTo": "emission.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 20
              }
            ],
            "Fields": [
              {
                "Name": "multiplier",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "m_Systems",
                "Type": "ParticleSystem[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "FireLight",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\FireLight.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "FireLight",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Effects.FireLight.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Light>()",
                    "ReturnType": "Light",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 17
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Rnd",
                      "Type": "float",
                      "Assignment": "Random.value*100",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Light",
                      "Type": "UnityEngine.Light",
                      "Assignment": "GetComponent<Light>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 16,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Random.value*100",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Rnd",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Random.value",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 15,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Rnd",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 15,
                          "UseKind": "Literal",
                          "AssignedTo": "m_Rnd",
                          "Value": "100",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Light>()",
                      "Type": "UnityEngine.Light",
                      "Kind": "Use",
                      "UseLine": 16,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Light",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Effects.FireLight.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Rnd + Time.time",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_Rnd + 1 + Time.time*1",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Rnd + 0 + Time.time*2",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_Rnd + 1 + Time.time*2",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 26
                  },
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Rnd + 2 + Time.time*2",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_Rnd + 3 + Time.time*2",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 27
                  },
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Rnd + 4 + Time.time*2",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_Rnd + 5 + Time.time*2",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 28
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "x",
                      "Type": "float",
                      "Assignment": "Mathf.PerlinNoise(m_Rnd + 0 + Time.time*2, m_Rnd + 1 + Time.time*2) - 0.5f",
                      "Kind": "Definition",
                      "DefinitionLine": 25
                    }
                  },
                  {
                    "Variable": {
                      "Name": "y",
                      "Type": "float",
                      "Assignment": "Mathf.PerlinNoise(m_Rnd + 2 + Time.time*2, m_Rnd + 3 + Time.time*2) - 0.5f",
                      "Kind": "Definition",
                      "DefinitionLine": 26
                    }
                  },
                  {
                    "Variable": {
                      "Name": "z",
                      "Type": "float",
                      "Assignment": "Mathf.PerlinNoise(m_Rnd + 4 + Time.time*2, m_Rnd + 5 + Time.time*2) - 0.5f",
                      "Kind": "Definition",
                      "DefinitionLine": 27
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Light.intensity",
                      "Type": "float",
                      "Assignment": "2*Mathf.PerlinNoise(m_Rnd + Time.time, m_Rnd + 1 + Time.time*1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.up + new Vector3(x, y, z)*1",
                      "Kind": "Assignment",
                      "AssignmentLine": 28,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "2*Mathf.PerlinNoise(m_Rnd + Time.time, m_Rnd + 1 + Time.time*1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Light.intensity",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 24,
                          "UseKind": "Literal",
                          "AssignedTo": "m_Light.intensity",
                          "Value": "2",
                          "VariablesList": []
                        },
                        {
                          "Name": "Mathf.PerlinNoise(m_Rnd + Time.time, m_Rnd + 1 + Time.time*1)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 24,
                          "UseKind": "Invocation",
                          "AssignedTo": "m_Light.intensity",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.up + new Vector3(x, y, z)*1",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 28,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "transform.localPosition",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Vector3.up",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 28,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "transform.localPosition",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "new Vector3(x, y, z)*1",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 28,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "transform.localPosition",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "new Vector3(x, y, z)",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 28,
                              "UseKind": "ObjectCreation",
                              "AssignedTo": "transform.localPosition",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": null,
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 28,
                              "UseKind": "Literal",
                              "AssignedTo": "transform.localPosition",
                              "Value": "1",
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "Extinguish",
                "FullName": "UnityStandardAssets.Effects.FireLight.Extinguish()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Burning",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Light.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 36,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Burning",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 36,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Light.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 34
              }
            ],
            "Fields": [
              {
                "Name": "m_Rnd",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "m_Burning",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "m_Light",
                "Type": "Light",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.Random",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "Hose",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\Hose.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Hose",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Effects.Hose.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Power",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Input.GetMouseButton(0) ? maxPower : minPower",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Time.deltaTime*changeSpeed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 21
                  },
                  {
                    "Name": "GetMouseButton",
                    "FullName": "UnityEngine.Input.GetMouseButton(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 21
                  },
                  {
                    "Name": "GetKeyDown",
                    "FullName": "UnityEngine.Input.GetKeyDown(UnityEngine.KeyCode)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "KeyCode.Alpha1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 23
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "mainModule",
                      "Type": "ParticleSystem.MainModule",
                      "Assignment": "system.main",
                      "Kind": "Definition",
                      "DefinitionLine": 29
                    }
                  },
                  {
                    "Variable": {
                      "Name": "emission",
                      "Type": "var",
                      "Assignment": "system.emission",
                      "Kind": "Definition",
                      "DefinitionLine": 31
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Power",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(m_Power, Input.GetMouseButton(0) ? maxPower : minPower, Time.deltaTime*changeSpeed)",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "systemRenderer.enabled",
                      "Type": "bool",
                      "Assignment": "!systemRenderer.enabled",
                      "Kind": "Assignment",
                      "AssignmentLine": 24,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainModule.startSpeed",
                      "Type": "UnityEngine.ParticleSystem.MinMaxCurve",
                      "Assignment": "m_Power",
                      "Kind": "Assignment",
                      "AssignmentLine": 30,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "emission.enabled",
                      "Type": "bool",
                      "Assignment": "(m_Power > minPower*1.1f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(m_Power, Input.GetMouseButton(0) ? maxPower : minPower, Time.deltaTime*changeSpeed)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Power",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "!systemRenderer.enabled",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 24,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "systemRenderer.enabled",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Power",
                      "Type": "UnityEngine.ParticleSystem.MinMaxCurve",
                      "Kind": "Use",
                      "UseLine": 30,
                      "UseKind": "FieldReference",
                      "AssignedTo": "mainModule.startSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(m_Power > minPower*1.1f)",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": null,
                      "AssignedTo": "emission.enabled",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              }
            ],
            "Fields": [
              {
                "Name": "maxPower",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "20",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "minPower",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "5",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "changeSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "5",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "hoseWaterSystems",
                "Type": "ParticleSystem[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "systemRenderer",
                "Type": "Renderer",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "m_Power",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "ParticleSystemMultiplier",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\ParticleSystemMultiplier.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ParticleSystemMultiplier",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Effects.ParticleSystemMultiplier.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponentsInChildren",
                    "FullName": "UnityEngine.Component.GetComponentsInChildren<UnityEngine.ParticleSystem>()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 15
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "multiplier",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.5f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 21
                  },
                  {
                    "Name": "Clear",
                    "FullName": "UnityEngine.ParticleSystem.Clear()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.ParticleSystemModule.dll",
                    "Arguments": [],
                    "Line": 22
                  },
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.ParticleSystem.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.ParticleSystemModule.dll",
                    "Arguments": [],
                    "Line": 23
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "systems",
                      "Type": "var",
                      "Assignment": "GetComponentsInChildren<ParticleSystem>()",
                      "Kind": "Definition",
                      "DefinitionLine": 14
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainModule",
                      "Type": "ParticleSystem.MainModule",
                      "Assignment": "system.main",
                      "Kind": "Definition",
                      "DefinitionLine": 17
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainModule.startSizeMultiplier",
                      "Type": "float",
                      "Assignment": "multiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 18,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainModule.startSpeedMultiplier",
                      "Type": "float",
                      "Assignment": "multiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 19,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainModule.startLifetimeMultiplier",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(multiplier, 1, 0.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "multiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 18,
                      "UseKind": "FieldReference",
                      "AssignedTo": "mainModule.startSizeMultiplier",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "multiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 19,
                      "UseKind": "FieldReference",
                      "AssignedTo": "mainModule.startSpeedMultiplier",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(multiplier, 1, 0.5f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "Invocation",
                      "AssignedTo": "mainModule.startLifetimeMultiplier",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              }
            ],
            "Fields": [
              {
                "Name": "multiplier",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "SmokeParticles",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\SmokeParticles.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SmokeParticles",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Effects.SmokeParticles.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.AudioSource>()",
                    "ReturnType": "AudioSource",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 14
                  },
                  {
                    "Name": "Range",
                    "FullName": "UnityEngine.Random.Range(int, int)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "extinguishSounds.Length",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 14
                  },
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.AudioSource.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 15
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.AudioSource>()",
                    "ReturnType": "AudioSource",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 15
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "GetComponent<AudioSource>().clip",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "extinguishSounds[Random.Range(0, extinguishSounds.Length)]",
                      "Kind": "Assignment",
                      "AssignmentLine": 13,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "extinguishSounds[Random.Range(0, extinguishSounds.Length)]",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 13,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "GetComponent<AudioSource>().clip",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 12
              }
            ],
            "Fields": [
              {
                "Name": "extinguishSounds",
                "Type": "AudioClip[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.Random",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "WaterHoseParticles",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\ParticleSystems\\Scripts\\WaterHoseParticles.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Effects",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WaterHoseParticles",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Effects.WaterHoseParticles.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.ParticleSystem>()",
                    "ReturnType": "ParticleSystem",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 19
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_ParticleSystem",
                      "Type": "UnityEngine.ParticleSystem",
                      "Assignment": "GetComponent<ParticleSystem>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 18,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<ParticleSystem>()",
                      "Type": "UnityEngine.ParticleSystem",
                      "Kind": "Use",
                      "UseLine": 18,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_ParticleSystem",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 17
              },
              {
                "Name": "OnParticleCollision",
                "FullName": "UnityStandardAssets.Effects.WaterHoseParticles.OnParticleCollision(UnityEngine.GameObject)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "other",
                    "Type": "GameObject",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetCollisionEvents",
                    "FullName": "UnityEngine.ParticleSystem.GetCollisionEvents(UnityEngine.GameObject, System.Collections.Generic.List<UnityEngine.ParticleCollisionEvent>)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.ParticleSystemModule.dll",
                    "Arguments": [
                      {
                        "Argument": "other",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CollisionEvents",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 25
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 36
                  },
                  {
                    "Name": "AddForce",
                    "FullName": "UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3, UnityEngine.ForceMode)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "vel*force",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "ForceMode.Impulse",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "BroadcastMessage",
                    "FullName": "UnityEngine.GameObject.BroadcastMessage(string, UnityEngine.SendMessageOptions)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Extinguish\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "SendMessageOptions.DontRequireReceiver",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 43
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "numCollisionEvents",
                      "Type": "int",
                      "Assignment": "m_ParticleSystem.GetCollisionEvents(other, m_CollisionEvents)",
                      "Kind": "Definition",
                      "DefinitionLine": 24
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 25
                    }
                  },
                  {
                    "Variable": {
                      "Name": "col",
                      "Type": "var",
                      "Assignment": "m_CollisionEvents[i].colliderComponent",
                      "Kind": "Definition",
                      "DefinitionLine": 34
                    }
                  },
                  {
                    "Variable": {
                      "Name": "attachedRigidbody",
                      "Type": "var",
                      "Assignment": "col.GetComponent<Rigidbody>()",
                      "Kind": "Definition",
                      "DefinitionLine": 35
                    }
                  },
                  {
                    "Variable": {
                      "Name": "vel",
                      "Type": "Vector3",
                      "Assignment": "m_CollisionEvents[i].velocity",
                      "Kind": "Definition",
                      "DefinitionLine": 38
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lastSoundTime",
                      "Type": "float",
                      "Assignment": "Time.time",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.time",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "lastSoundTime",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 23
              }
            ],
            "Fields": [
              {
                "Name": "lastSoundTime",
                "Type": "float",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "force",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "m_CollisionEvents",
                "Type": "List<ParticleCollisionEvent>",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new List<ParticleCollisionEvent>()",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "m_ParticleSystem",
                "Type": "ParticleSystem",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "ActivateTrigger",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\ActivateTrigger.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ActivateTrigger",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "DoActivateTrigger",
                "FullName": "UnityStandardAssets.Utility.ActivateTrigger.DoActivateTrigger()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "BroadcastMessage",
                    "FullName": "UnityEngine.GameObject.BroadcastMessage(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"DoActivateTrigger\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 47
                  },
                  {
                    "Name": "Instantiate",
                    "FullName": "UnityEngine.Object.Instantiate<UnityEngine.GameObject>(UnityEngine.GameObject, UnityEngine.Vector3, UnityEngine.Quaternion)",
                    "ReturnType": "GameObject",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "source",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "targetGameObject.transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "targetGameObject.transform.rotation",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 55
                  },
                  {
                    "Name": "Destroy",
                    "FullName": "UnityEngine.Object.Destroy(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "targetGameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 57
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.Animation.Play()",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [],
                    "Line": 76
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.GameObject.GetComponent<UnityEngine.Animation>()",
                    "ReturnType": "Animation",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 76
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 82
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "currentTarget",
                      "Type": "Object",
                      "Assignment": "target ?? gameObject",
                      "Kind": "Definition",
                      "DefinitionLine": 33
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetBehaviour",
                      "Type": "Behaviour",
                      "Assignment": "currentTarget as Behaviour",
                      "Kind": "Definition",
                      "DefinitionLine": 34
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetGameObject",
                      "Type": "GameObject",
                      "Assignment": "currentTarget as GameObject",
                      "Kind": "Definition",
                      "DefinitionLine": 35
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetGameObject",
                      "Type": "UnityEngine.GameObject",
                      "Assignment": "targetBehaviour.gameObject",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetBehaviour.enabled",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetBehaviour.gameObject",
                      "Type": "UnityEngine.GameObject",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "targetGameObject",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": "Literal",
                      "AssignedTo": "targetBehaviour.enabled",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              },
              {
                "Name": "OnTriggerEnter",
                "FullName": "UnityStandardAssets.Utility.ActivateTrigger.OnTriggerEnter(UnityEngine.Collider)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "other",
                    "Type": "Collider",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "DoActivateTrigger",
                    "FullName": "UnityStandardAssets.Utility.ActivateTrigger.DoActivateTrigger()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\ActivateTrigger.cs",
                    "DefinitionLine": 28,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 92
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 90
              }
            ],
            "Fields": [
              {
                "Name": "action",
                "Type": "Mode",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "Mode.Activate",
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "target",
                "Type": "Object",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "source",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "triggerCount",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "repeatTrigger",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 25
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.Object",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AlphaButtonClickMask",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\AlphaButtonClickMask.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "AlphaButtonClickMask",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [
          "ICanvasRaycastFilter"
        ],
        "Properties": [],
        "Methods": [
          {
            "Name": "Start",
            "FullName": "AlphaButtonClickMask.Start()",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetComponent",
                "FullName": "UnityEngine.Component.GetComponent<Image>()",
                "ReturnType": "Image",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 11
              },
              {
                "Name": "GetPixels32",
                "FullName": "UnityEngine.Texture2D.GetPixels32()",
                "ReturnType": "",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 20
              },
              {
                "Name": "LogError",
                "FullName": "UnityEngine.Debug.LogError(object)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "e.Message",
                    "IsInvocation": false
                  }
                ],
                "Line": 24
              },
              {
                "Name": "LogError",
                "FullName": "UnityEngine.Debug.LogError(object)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "\"This script need an Image with a readbale Texture2D to work.\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 35
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "tex",
                  "Type": "Texture2D",
                  "Assignment": "_image.sprite.texture as Texture2D",
                  "Kind": "Definition",
                  "DefinitionLine": 12
                }
              },
              {
                "Variable": {
                  "Name": "isInvalid",
                  "Type": "bool",
                  "Assignment": "false",
                  "Kind": "Definition",
                  "DefinitionLine": 14
                }
              },
              {
                "Variable": {
                  "Name": "_image",
                  "Type": "Image",
                  "Assignment": "GetComponent<Image>()",
                  "Kind": "Assignment",
                  "AssignmentLine": 10,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "isInvalid",
                  "Type": "bool",
                  "Assignment": "true",
                  "Kind": "Assignment",
                  "AssignmentLine": 24,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "isInvalid",
                  "Type": "bool",
                  "Assignment": "true",
                  "Kind": "Assignment",
                  "AssignmentLine": 29,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "GetComponent<Image>()",
                  "Type": "Image",
                  "Kind": "Use",
                  "UseLine": 10,
                  "UseKind": "Invocation",
                  "AssignedTo": "_image",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 24,
                  "UseKind": "Literal",
                  "AssignedTo": "isInvalid",
                  "Value": "true",
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "bool",
                  "Kind": "Use",
                  "UseLine": 29,
                  "UseKind": "Literal",
                  "AssignedTo": "isInvalid",
                  "Value": "true",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 9
          },
          {
            "Name": "IsRaycastLocationValid",
            "FullName": "AlphaButtonClickMask.IsRaycastLocationValid(UnityEngine.Vector2, UnityEngine.Camera)",
            "Modifiers": [
              "public"
            ],
            "ReturnType": "bool",
            "Parameters": [
              {
                "Name": "sp",
                "Type": "Vector2",
                "Assignment": null
              },
              {
                "Name": "eventCamera",
                "Type": "Camera",
                "Assignment": null
              }
            ],
            "Invocations": [
              {
                "Name": null,
                "FullName": null,
                "ReturnType": null,
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": null,
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "_image.rectTransform",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "sp",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "eventCamera",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "localPoint",
                    "IsInvocation": false
                  }
                ],
                "Line": 42
              },
              {
                "Name": null,
                "FullName": null,
                "ReturnType": null,
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": null,
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "uv.x",
                    "IsInvocation": false
                  },
                  {
                    "Argument": "uv.y",
                    "IsInvocation": false
                  }
                ],
                "Line": 54
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "localPoint",
                  "Type": "Vector2",
                  "Assignment": null,
                  "Kind": "Definition",
                  "DefinitionLine": 40
                }
              },
              {
                "Variable": {
                  "Name": "pivot",
                  "Type": "Vector2",
                  "Assignment": "_image.rectTransform.pivot",
                  "Kind": "Definition",
                  "DefinitionLine": 43
                }
              },
              {
                "Variable": {
                  "Name": "normalizedLocal",
                  "Type": "Vector2",
                  "Assignment": "new Vector2(pivot.x + localPoint.x / _image.rectTransform.rect.width, pivot.y + localPoint.y / _image.rectTransform.rect.height)",
                  "Kind": "Definition",
                  "DefinitionLine": 44
                }
              },
              {
                "Variable": {
                  "Name": "uv",
                  "Type": "Vector2",
                  "Assignment": "new Vector2(\r\n            _image.sprite.rect.x + normalizedLocal.x * _image.sprite.rect.width, \r\n            _image.sprite.rect.y + normalizedLocal.y * _image.sprite.rect.height )",
                  "Kind": "Definition",
                  "DefinitionLine": 45
                }
              },
              {
                "Variable": {
                  "Name": "c",
                  "Type": "Color",
                  "Assignment": "_image.sprite.texture.GetPixelBilinear(uv.x, uv.y)",
                  "Kind": "Definition",
                  "DefinitionLine": 53
                }
              },
              {
                "Variable": {
                  "Name": "uv.x",
                  "Type": "?",
                  "Assignment": "_image.sprite.texture.width",
                  "Kind": "Assignment",
                  "AssignmentLine": 49,
                  "AssignmentKind": "DivideAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "uv.y",
                  "Type": "?",
                  "Assignment": "_image.sprite.texture.height",
                  "Kind": "Assignment",
                  "AssignmentLine": 50,
                  "AssignmentKind": "DivideAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": "_image.sprite.texture.width",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 49,
                  "UseKind": "Invalid",
                  "AssignedTo": "uv.x",
                  "Value": null,
                  "VariablesList": []
                }
              },
              {
                "Variable": {
                  "Name": "_image.sprite.texture.height",
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 50,
                  "UseKind": "Invalid",
                  "AssignedTo": "uv.y",
                  "Value": null,
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 39
          }
        ],
        "Fields": [
          {
            "Name": "_image",
            "Type": "Image",
            "Modifiers": [
              "protected"
            ],
            "Assignment": null,
            "Attributes": [],
            "Line": 7
          }
        ],
        "Line": 5
      }
    ],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 2
      },
      {
        "Name": "System.Collections",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AutoMobileShaderSwitch",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\AutoMobileShaderSwitch.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AutoMobileShaderSwitch",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Utility.AutoMobileShaderSwitch.OnEnable()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 15
              }
            ],
            "Fields": [
              {
                "Name": "m_ReplacementList",
                "Type": "ReplacementList",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "original",
                "Type": "Shader",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "null",
                "Attributes": [],
                "Line": 72
              },
              {
                "Name": "replacement",
                "Type": "Shader",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "null",
                "Attributes": [],
                "Line": 73
              },
              {
                "Name": "items",
                "Type": "ReplacementDefinition[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new ReplacementDefinition[0]",
                "Attributes": [],
                "Line": 79
              }
            ],
            "Line": 10
          }
        ],
        "Usings": [],
        "Line": 8
      },
      {
        "Name": "UnityStandardAssets.Utility.Inspector",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [],
        "Usings": [],
        "Line": 84
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AutoMoveAndRotate",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\AutoMoveAndRotate.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AutoMoveAndRotate",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Utility.AutoMoveAndRotate.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_LastRealTime",
                      "Type": "float",
                      "Assignment": "Time.realtimeSinceStartup",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.realtimeSinceStartup",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_LastRealTime",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 14
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Utility.AutoMoveAndRotate.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Translate",
                    "FullName": "UnityEngine.Transform.Translate(UnityEngine.Vector3, UnityEngine.Space)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "moveUnitsPerSecond.value*deltaTime",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "moveUnitsPerSecond.space",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 29
                  },
                  {
                    "Name": "Rotate",
                    "FullName": "UnityEngine.Transform.Rotate(UnityEngine.Vector3, UnityEngine.Space)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "rotateDegreesPerSecond.value*deltaTime",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "moveUnitsPerSecond.space",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 30
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "deltaTime",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Definition",
                      "DefinitionLine": 22
                    }
                  },
                  {
                    "Variable": {
                      "Name": "deltaTime",
                      "Type": "float",
                      "Assignment": "(Time.realtimeSinceStartup - m_LastRealTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LastRealTime",
                      "Type": "float",
                      "Assignment": "Time.realtimeSinceStartup",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(Time.realtimeSinceStartup - m_LastRealTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": null,
                      "AssignedTo": "deltaTime",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.realtimeSinceStartup",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_LastRealTime",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              }
            ],
            "Fields": [
              {
                "Name": "moveUnitsPerSecond",
                "Type": "Vector3andSpace",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 8
              },
              {
                "Name": "rotateDegreesPerSecond",
                "Type": "Vector3andSpace",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "ignoreTimescale",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "m_LastRealTime",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "value",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "space",
                "Type": "Space",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "Space.Self",
                "Attributes": [],
                "Line": 38
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "CameraRefocus",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\CameraRefocus.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CameraRefocus",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "ChangeCamera",
                "FullName": "UnityStandardAssets.Utility.CameraRefocus.ChangeCamera(UnityEngine.Camera)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "camera",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "Camera",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "camera",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camera",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "Camera",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "ChangeParent",
                "FullName": "UnityStandardAssets.Utility.CameraRefocus.ChangeParent(UnityEngine.Transform)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "parent",
                    "Type": "Transform",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "Parent",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "parent",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "parent",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "Parent",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              },
              {
                "Name": "GetFocusPoint",
                "FullName": "UnityStandardAssets.Utility.CameraRefocus.GetFocusPoint()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Vector3, UnityEngine.Vector3, out UnityEngine.RaycastHit, float)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Parent.transform.position + m_OrigCameraPos",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Parent.transform.forward",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hitInfo",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "100f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 39
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "hitInfo",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 37
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Lookatpoint",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "hitInfo.point",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Refocus",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 42,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Refocus",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hitInfo.point",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "Lookatpoint",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 42,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Refocus",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Refocus",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 36
              },
              {
                "Name": "SetFocusPoint",
                "FullName": "UnityStandardAssets.Utility.CameraRefocus.SetFocusPoint()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LookAt",
                    "FullName": "UnityEngine.Transform.LookAt(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Lookatpoint",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 50
              }
            ],
            "Fields": [
              {
                "Name": "Camera",
                "Type": "Camera",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 8
              },
              {
                "Name": "Lookatpoint",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "Parent",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "m_OrigCameraPos",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "m_Refocus",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "CurveControlledBob",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\CurveControlledBob.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CurveControlledBob",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Setup",
                "FullName": "UnityStandardAssets.Utility.CurveControlledBob.Setup(UnityEngine.Camera, float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "camera",
                    "Type": "Camera",
                    "Assignment": null
                  },
                  {
                    "Name": "bobBaseInterval",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_BobBaseInterval",
                      "Type": "float",
                      "Assignment": "bobBaseInterval",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalCameraPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "camera.transform.localPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Time",
                      "Type": "float",
                      "Assignment": "Bobcurve[Bobcurve.length - 1].time",
                      "Kind": "Assignment",
                      "AssignmentLine": 29,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "bobBaseInterval",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "m_BobBaseInterval",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camera.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalCameraPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Bobcurve[Bobcurve.length - 1].time",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 29,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Time",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              },
              {
                "Name": "DoHeadBob",
                "FullName": "UnityStandardAssets.Utility.CurveControlledBob.DoHeadBob(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Vector3",
                "Parameters": [
                  {
                    "Name": "speed",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Evaluate",
                    "FullName": "UnityEngine.AnimationCurve.Evaluate(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CyclePositionX",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 36
                  },
                  {
                    "Name": "Evaluate",
                    "FullName": "UnityEngine.AnimationCurve.Evaluate(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CyclePositionY",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "xPos",
                      "Type": "float",
                      "Assignment": "m_OriginalCameraPosition.x + (Bobcurve.Evaluate(m_CyclePositionX)*HorizontalBobRange)",
                      "Kind": "Definition",
                      "DefinitionLine": 35
                    }
                  },
                  {
                    "Variable": {
                      "Name": "yPos",
                      "Type": "float",
                      "Assignment": "m_OriginalCameraPosition.y + (Bobcurve.Evaluate(m_CyclePositionY)*VerticalBobRange)",
                      "Kind": "Definition",
                      "DefinitionLine": 36
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CyclePositionX",
                      "Type": "float",
                      "Assignment": "(speed*Time.deltaTime)/m_BobBaseInterval",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CyclePositionY",
                      "Type": "float",
                      "Assignment": "((speed*Time.deltaTime)/m_BobBaseInterval)*VerticaltoHorizontalRatio",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CyclePositionX",
                      "Type": "float",
                      "Assignment": "m_CyclePositionX - m_Time",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CyclePositionY",
                      "Type": "float",
                      "Assignment": "m_CyclePositionY - m_Time",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(speed*Time.deltaTime)/m_BobBaseInterval",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_CyclePositionX",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "speed*Time.deltaTime",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 38,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_CyclePositionX",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "speed",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 38,
                              "UseKind": "ParameterReference",
                              "AssignedTo": "m_CyclePositionX",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "Time.deltaTime",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 38,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "m_CyclePositionX",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "m_BobBaseInterval",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 38,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_CyclePositionX",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "((speed*Time.deltaTime)/m_BobBaseInterval)*VerticaltoHorizontalRatio",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_CyclePositionY",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "(speed*Time.deltaTime)/m_BobBaseInterval",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 39,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_CyclePositionY",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "speed*Time.deltaTime",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 39,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "m_CyclePositionY",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": "speed",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 39,
                                  "UseKind": "ParameterReference",
                                  "AssignedTo": "m_CyclePositionY",
                                  "Value": null,
                                  "VariablesList": []
                                },
                                {
                                  "Name": "Time.deltaTime",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 39,
                                  "UseKind": "PropertyReference",
                                  "AssignedTo": "m_CyclePositionY",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            },
                            {
                              "Name": "m_BobBaseInterval",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 39,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_CyclePositionY",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "VerticaltoHorizontalRatio",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 39,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_CyclePositionY",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CyclePositionX - m_Time",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_CyclePositionX",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_CyclePositionX",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 43,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_CyclePositionX",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_Time",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 43,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_CyclePositionX",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CyclePositionY - m_Time",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_CyclePositionY",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_CyclePositionY",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 47,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_CyclePositionY",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_Time",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 47,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_CyclePositionY",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 34
              }
            ],
            "Fields": [
              {
                "Name": "HorizontalBobRange",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.33f",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "VerticalBobRange",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.33f",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "Bobcurve",
                "Type": "AnimationCurve",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new AnimationCurve(new Keyframe(0f, 0f), new Keyframe(0.5f, 1f),\r\n                                                            new Keyframe(1f, 0f), new Keyframe(1.5f, -1f),\r\n                                                            new Keyframe(2f, 0f))",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "VerticaltoHorizontalRatio",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "m_CyclePositionX",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_CyclePositionY",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "m_BobBaseInterval",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "m_OriginalCameraPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "m_Time",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 21
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "DragRigidbody",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\DragRigidbody.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "DragRigidbody",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Utility.DragRigidbody.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetMouseButtonDown",
                    "FullName": "UnityEngine.Input.GetMouseButtonDown(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 22
                  },
                  {
                    "Name": "FindCamera",
                    "FullName": "UnityStandardAssets.Utility.DragRigidbody.FindCamera()",
                    "ReturnType": "Camera",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\DragRigidbody.cs",
                    "DefinitionLine": 86,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 27
                  },
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Vector3, UnityEngine.Vector3, out UnityEngine.RaycastHit, float, int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "mainCamera.ScreenPointToRay(Input.mousePosition).origin",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "mainCamera.ScreenPointToRay(Input.mousePosition).direction",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hit",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "100",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Physics.DefaultRaycastLayers",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "ScreenPointToRay",
                    "FullName": "UnityEngine.Camera.ScreenPointToRay(UnityEngine.Vector3)",
                    "ReturnType": "Ray",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Input.mousePosition",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "ScreenPointToRay",
                    "FullName": "UnityEngine.Camera.ScreenPointToRay(UnityEngine.Vector3)",
                    "ReturnType": "Ray",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Input.mousePosition",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 47
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent<UnityEngine.SpringJoint>()",
                    "ReturnType": "SpringJoint",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 48
                  },
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(string, object)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"DragObject\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hit.distance",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 60
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "mainCamera",
                      "Type": "var",
                      "Assignment": "FindCamera()",
                      "Kind": "Definition",
                      "DefinitionLine": 26
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit",
                      "Type": "RaycastHit",
                      "Assignment": "new RaycastHit()",
                      "Kind": "Definition",
                      "DefinitionLine": 29
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go",
                      "Type": "var",
                      "Assignment": "new GameObject(\"Rigidbody dragger\")",
                      "Kind": "Definition",
                      "DefinitionLine": 45
                    }
                  },
                  {
                    "Variable": {
                      "Name": "body",
                      "Type": "Rigidbody",
                      "Assignment": "go.AddComponent<Rigidbody>()",
                      "Kind": "Definition",
                      "DefinitionLine": 46
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint",
                      "Type": "UnityEngine.SpringJoint",
                      "Assignment": "go.AddComponent<SpringJoint>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "body.isKinematic",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "hit.point",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.anchor",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.zero",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.spring",
                      "Type": "float",
                      "Assignment": "k_Spring",
                      "Kind": "Assignment",
                      "AssignmentLine": 54,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.damper",
                      "Type": "float",
                      "Assignment": "k_Damper",
                      "Kind": "Assignment",
                      "AssignmentLine": 55,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.maxDistance",
                      "Type": "float",
                      "Assignment": "k_Distance",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.connectedBody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "hit.rigidbody",
                      "Kind": "Assignment",
                      "AssignmentLine": 57,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "go.AddComponent<SpringJoint>()",
                      "Type": "UnityEngine.SpringJoint",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_SpringJoint",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Literal",
                      "AssignedTo": "body.isKinematic",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit.point",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_SpringJoint.transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.zero",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_SpringJoint.anchor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "k_Spring",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 54,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_SpringJoint.spring",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "k_Damper",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 55,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_SpringJoint.damper",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "k_Distance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_SpringJoint.maxDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit.rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 57,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_SpringJoint.connectedBody",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              },
              {
                "Name": "DragObject",
                "FullName": "UnityStandardAssets.Utility.DragRigidbody.DragObject(float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [
                  {
                    "Name": "distance",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "FindCamera",
                    "FullName": "UnityStandardAssets.Utility.DragRigidbody.FindCamera()",
                    "ReturnType": "Camera",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\DragRigidbody.cs",
                    "DefinitionLine": 86,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 70
                  },
                  {
                    "Name": "GetMouseButton",
                    "FullName": "UnityEngine.Input.GetMouseButton(int)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.InputLegacyModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 71
                  },
                  {
                    "Name": "ScreenPointToRay",
                    "FullName": "UnityEngine.Camera.ScreenPointToRay(UnityEngine.Vector3)",
                    "ReturnType": "Ray",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Input.mousePosition",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 73
                  },
                  {
                    "Name": "GetPoint",
                    "FullName": "UnityEngine.Ray.GetPoint(float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "distance",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 74
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "oldDrag",
                      "Type": "var",
                      "Assignment": "m_SpringJoint.connectedBody.drag",
                      "Kind": "Definition",
                      "DefinitionLine": 65
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oldAngularDrag",
                      "Type": "var",
                      "Assignment": "m_SpringJoint.connectedBody.angularDrag",
                      "Kind": "Definition",
                      "DefinitionLine": 66
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainCamera",
                      "Type": "var",
                      "Assignment": "FindCamera()",
                      "Kind": "Definition",
                      "DefinitionLine": 69
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ray",
                      "Type": "var",
                      "Assignment": "mainCamera.ScreenPointToRay(Input.mousePosition)",
                      "Kind": "Definition",
                      "DefinitionLine": 72
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.connectedBody.drag",
                      "Type": "float",
                      "Assignment": "k_Drag",
                      "Kind": "Assignment",
                      "AssignmentLine": 67,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.connectedBody.angularDrag",
                      "Type": "float",
                      "Assignment": "k_AngularDrag",
                      "Kind": "Assignment",
                      "AssignmentLine": 68,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "ray.GetPoint(distance)",
                      "Kind": "Assignment",
                      "AssignmentLine": 73,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.connectedBody.drag",
                      "Type": "float",
                      "Assignment": "oldDrag",
                      "Kind": "Assignment",
                      "AssignmentLine": 78,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.connectedBody.angularDrag",
                      "Type": "float",
                      "Assignment": "oldAngularDrag",
                      "Kind": "Assignment",
                      "AssignmentLine": 79,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SpringJoint.connectedBody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 80,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "k_Drag",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 67,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_SpringJoint.connectedBody.drag",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "k_AngularDrag",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 68,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_SpringJoint.connectedBody.angularDrag",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ray.GetPoint(distance)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 73,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_SpringJoint.transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oldDrag",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 78,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_SpringJoint.connectedBody.drag",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "oldAngularDrag",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 79,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_SpringJoint.connectedBody.angularDrag",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 80,
                      "UseKind": "Literal",
                      "AssignedTo": "m_SpringJoint.connectedBody",
                      "Value": "null",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 64
              },
              {
                "Name": "FindCamera",
                "FullName": "UnityStandardAssets.Utility.DragRigidbody.FindCamera()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "Camera",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Camera>()",
                    "ReturnType": "Camera",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 88
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Camera>()",
                    "ReturnType": "Camera",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 90
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 86
              }
            ],
            "Fields": [
              {
                "Name": "k_Spring",
                "Type": "float",
                "Modifiers": [
                  "const"
                ],
                "Assignment": "50.0f",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "k_Damper",
                "Type": "float",
                "Modifiers": [
                  "const"
                ],
                "Assignment": "5.0f",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "k_Drag",
                "Type": "float",
                "Modifiers": [
                  "const"
                ],
                "Assignment": "10.0f",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "k_AngularDrag",
                "Type": "float",
                "Modifiers": [
                  "const"
                ],
                "Assignment": "5.0f",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "k_Distance",
                "Type": "float",
                "Modifiers": [
                  "const"
                ],
                "Assignment": "0.2f",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "k_AttachToCenterOfMass",
                "Type": "bool",
                "Modifiers": [
                  "const"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "m_SpringJoint",
                "Type": "SpringJoint",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "DynamicShadowSettings",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\DynamicShadowSettings.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "DynamicShadowSettings",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Utility.DynamicShadowSettings.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_OriginalStrength",
                      "Type": "float",
                      "Assignment": "sunLight.shadowStrength",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sunLight.shadowStrength",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalStrength",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Utility.DynamicShadowSettings.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Ray, out UnityEngine.RaycastHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "ray",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "height - m_SmoothHeight",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 39
                  },
                  {
                    "Name": "SmoothDamp",
                    "FullName": "UnityEngine.Mathf.SmoothDamp(float, float, ref float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_SmoothHeight",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "height",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_ChangeSpeed",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "adaptTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 41
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "minHeight",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "maxHeight",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_SmoothHeight",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 44
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "minShadowDistance",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "maxShadowDistance",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 46
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "minShadowBias",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "maxShadowBias",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1 - ((1 - i)*(1 - i))",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 47
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_OriginalStrength",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 48
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "ray",
                      "Type": "Ray",
                      "Assignment": "new Ray(Camera.main.transform.position, -Vector3.up)",
                      "Kind": "Definition",
                      "DefinitionLine": 30
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 31
                    }
                  },
                  {
                    "Variable": {
                      "Name": "height",
                      "Type": "float",
                      "Assignment": "transform.position.y",
                      "Kind": "Definition",
                      "DefinitionLine": 32
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(minHeight, maxHeight, m_SmoothHeight)",
                      "Kind": "Definition",
                      "DefinitionLine": 43
                    }
                  },
                  {
                    "Variable": {
                      "Name": "height",
                      "Type": "float",
                      "Assignment": "hit.distance",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SmoothHeight",
                      "Type": "float",
                      "Assignment": "Mathf.SmoothDamp(m_SmoothHeight, height, ref m_ChangeSpeed, adaptTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "QualitySettings.shadowDistance",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(minShadowDistance, maxShadowDistance, i)",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sunLight.shadowBias",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(minShadowBias, maxShadowBias, 1 - ((1 - i)*(1 - i)))",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "sunLight.shadowStrength",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(m_OriginalStrength, 0, i)",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit.distance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "height",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.SmoothDamp(m_SmoothHeight, height, ref m_ChangeSpeed, adaptTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_SmoothHeight",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(minShadowDistance, maxShadowDistance, i)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "Invocation",
                      "AssignedTo": "QualitySettings.shadowDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(minShadowBias, maxShadowBias, 1 - ((1 - i)*(1 - i)))",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "Invocation",
                      "AssignedTo": "sunLight.shadowBias",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(m_OriginalStrength, 0, i)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "Invocation",
                      "AssignedTo": "sunLight.shadowStrength",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 29
              }
            ],
            "Fields": [
              {
                "Name": "sunLight",
                "Type": "Light",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 8
              },
              {
                "Name": "minHeight",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "10",
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "minShadowDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "80",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "minShadowBias",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "maxHeight",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1000",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "maxShadowDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "10000",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "maxShadowBias",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.1f",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "adaptTime",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "m_SmoothHeight",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_ChangeSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "m_OriginalStrength",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 19
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "EventSystemChecker",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\EventSystemChecker.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "EventSystemChecker",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Awake",
            "FullName": "EventSystemChecker.Awake()",
            "Modifiers": [],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "FindObjectOfType",
                "FullName": "UnityEngine.Object.FindObjectOfType<EventSystem>()",
                "ReturnType": "EventSystem",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 13
              },
              {
                "Name": "AddComponent",
                "FullName": "UnityEngine.GameObject.AddComponent<EventSystem>()",
                "ReturnType": "EventSystem",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 17
              },
              {
                "Name": "AddComponent",
                "FullName": "UnityEngine.GameObject.AddComponent<StandaloneInputModule>()",
                "ReturnType": "StandaloneInputModule",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [],
                "Line": 18
              }
            ],
            "Variables": [
              {
                "Variable": {
                  "Name": "obj",
                  "Type": "GameObject",
                  "Assignment": "new GameObject(\"EventSystem\")",
                  "Kind": "Definition",
                  "DefinitionLine": 15
                }
              },
              {
                "Variable": {
                  "Name": "obj.AddComponent<StandaloneInputModule>().forceModuleActive",
                  "Type": "?",
                  "Assignment": "true",
                  "Kind": "Assignment",
                  "AssignmentLine": 17,
                  "AssignmentKind": "SimpleAssignmentExpression"
                }
              },
              {
                "Variable": {
                  "Name": null,
                  "Type": "?",
                  "Kind": "Use",
                  "UseLine": 17,
                  "UseKind": "Literal",
                  "AssignedTo": "obj.AddComponent<StandaloneInputModule>().forceModuleActive",
                  "Value": "true",
                  "VariablesList": []
                }
              }
            ],
            "Statements": [],
            "WhileLoops": [],
            "Line": 11
          }
        ],
        "Fields": [],
        "Line": 6
      }
    ],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.EventSystems",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "FollowTarget",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\FollowTarget.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "FollowTarget",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "LateUpdate",
                "FullName": "UnityStandardAssets.Utility.FollowTarget.LateUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "target.position + offset",
                      "Kind": "Assignment",
                      "AssignmentLine": 14,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.position + offset",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 14,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "target.position",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 14,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "transform.position",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "offset",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 14,
                          "UseKind": "FieldReference",
                          "AssignedTo": "transform.position",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              }
            ],
            "Fields": [
              {
                "Name": "target",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "offset",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new Vector3(0f, 7.5f, 0f)",
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "ForcedReset",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\ForcedReset.cs",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "ForcedReset",
        "Modifiers": [
          "public"
        ],
        "Inheritance": "MonoBehaviour",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "Name": "Update",
            "FullName": "ForcedReset.Update()",
            "Modifiers": [
              "private"
            ],
            "ReturnType": "void",
            "Parameters": [],
            "Invocations": [
              {
                "Name": "GetButtonDown",
                "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButtonDown(string)",
                "ReturnType": "Boolean",
                "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                "DefinitionLine": 119,
                "Kind": "SourceFile",
                "Module": null,
                "Arguments": [
                  {
                    "Argument": "\"ResetObject\"",
                    "IsInvocation": false
                  }
                ],
                "Line": 14
              },
              {
                "Name": "LoadScene",
                "FullName": "UnityEngine.SceneManagement.SceneManager.LoadScene(string)",
                "ReturnType": "Void",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "SceneManager.GetSceneAt(0).name",
                    "IsInvocation": false
                  }
                ],
                "Line": 17
              },
              {
                "Name": "GetSceneAt",
                "FullName": "UnityEngine.SceneManagement.SceneManager.GetSceneAt(int)",
                "ReturnType": "Scene",
                "FileName": null,
                "DefinitionLine": 1,
                "Kind": "MetadataFile",
                "Module": "UnityEngine.CoreModule.dll",
                "Arguments": [
                  {
                    "Argument": "0",
                    "IsInvocation": false
                  }
                ],
                "Line": 17
              }
            ],
            "Variables": [],
            "Statements": [],
            "WhileLoops": [],
            "Line": 11
          }
        ],
        "Fields": [],
        "Line": 8
      }
    ],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 3
      },
      {
        "Name": "UnityEngine.SceneManagement",
        "Line": 4
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 5
      }
    ],
    "Line": 1
  },
  {
    "Name": "FOVKick",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\FOVKick.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "FOVKick",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Setup",
                "FullName": "UnityStandardAssets.Utility.FOVKick.Setup(UnityEngine.Camera)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "camera",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "CheckStatus",
                    "FullName": "UnityStandardAssets.Utility.FOVKick.CheckStatus(UnityEngine.Camera)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\FOVKick.cs",
                    "DefinitionLine": 27,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "camera",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 20
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "Camera",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "camera",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "originalFov",
                      "Type": "float",
                      "Assignment": "camera.fieldOfView",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camera",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "Camera",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camera.fieldOfView",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "originalFov",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              },
              {
                "Name": "CheckStatus",
                "FullName": "UnityStandardAssets.Utility.FOVKick.CheckStatus(UnityEngine.Camera)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "camera",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              },
              {
                "Name": "ChangeCamera",
                "FullName": "UnityStandardAssets.Utility.FOVKick.ChangeCamera(UnityEngine.Camera)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "camera",
                    "Type": "Camera",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "Camera",
                      "Type": "UnityEngine.Camera",
                      "Assignment": "camera",
                      "Kind": "Assignment",
                      "AssignmentLine": 43,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camera",
                      "Type": "UnityEngine.Camera",
                      "Kind": "Use",
                      "UseLine": 43,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "Camera",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 42
              },
              {
                "Name": "FOVKickUp",
                "FullName": "UnityStandardAssets.Utility.FOVKick.FOVKickUp()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "(Camera.fieldOfView - originalFov)/FOVIncrease",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 50
                  },
                  {
                    "Name": "Evaluate",
                    "FullName": "UnityEngine.AnimationCurve.Evaluate(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "t/TimeToIncrease",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 53
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "float",
                      "Assignment": "Mathf.Abs((Camera.fieldOfView - originalFov)/FOVIncrease)",
                      "Kind": "Definition",
                      "DefinitionLine": 49
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.fieldOfView",
                      "Type": "float",
                      "Assignment": "originalFov + (IncreaseCurve.Evaluate(t/TimeToIncrease)*FOVIncrease)",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "originalFov + (IncreaseCurve.Evaluate(t/TimeToIncrease)*FOVIncrease)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "Camera.fieldOfView",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "originalFov",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 52,
                          "UseKind": "FieldReference",
                          "AssignedTo": "Camera.fieldOfView",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "IncreaseCurve.Evaluate(t/TimeToIncrease)*FOVIncrease",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 52,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "Camera.fieldOfView",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "IncreaseCurve.Evaluate(t/TimeToIncrease)",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 52,
                              "UseKind": "Invocation",
                              "AssignedTo": "Camera.fieldOfView",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "FOVIncrease",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 52,
                              "UseKind": "FieldReference",
                              "AssignedTo": "Camera.fieldOfView",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "t",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 48
              },
              {
                "Name": "FOVKickDown",
                "FullName": "UnityStandardAssets.Utility.FOVKick.FOVKickDown()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "(Camera.fieldOfView - originalFov)/FOVIncrease",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 62
                  },
                  {
                    "Name": "Evaluate",
                    "FullName": "UnityEngine.AnimationCurve.Evaluate(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "t/TimeToDecrease",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 65
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "float",
                      "Assignment": "Mathf.Abs((Camera.fieldOfView - originalFov)/FOVIncrease)",
                      "Kind": "Definition",
                      "DefinitionLine": 61
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.fieldOfView",
                      "Type": "float",
                      "Assignment": "originalFov + (IncreaseCurve.Evaluate(t/TimeToDecrease)*FOVIncrease)",
                      "Kind": "Assignment",
                      "AssignmentLine": 64,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Camera.fieldOfView",
                      "Type": "float",
                      "Assignment": "originalFov",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "originalFov + (IncreaseCurve.Evaluate(t/TimeToDecrease)*FOVIncrease)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 64,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "Camera.fieldOfView",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "originalFov",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 64,
                          "UseKind": "FieldReference",
                          "AssignedTo": "Camera.fieldOfView",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "IncreaseCurve.Evaluate(t/TimeToDecrease)*FOVIncrease",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 64,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "Camera.fieldOfView",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "IncreaseCurve.Evaluate(t/TimeToDecrease)",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 64,
                              "UseKind": "Invocation",
                              "AssignedTo": "Camera.fieldOfView",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "FOVIncrease",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 64,
                              "UseKind": "FieldReference",
                              "AssignedTo": "Camera.fieldOfView",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "t",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "originalFov",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": "FieldReference",
                      "AssignedTo": "Camera.fieldOfView",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 60
              }
            ],
            "Fields": [
              {
                "Name": "Camera",
                "Type": "Camera",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "originalFov",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [
                  "[HideInInspector]"
                ],
                "Line": 11
              },
              {
                "Name": "FOVIncrease",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "3f",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "TimeToIncrease",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "TimeToDecrease",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "IncreaseCurve",
                "Type": "AnimationCurve",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "FPSCounter",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\FPSCounter.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "FPSCounter",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Utility.FPSCounter.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<Text>()",
                    "ReturnType": "Text",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 21
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_FpsNextPeriod",
                      "Type": "float",
                      "Assignment": "Time.realtimeSinceStartup + fpsMeasurePeriod",
                      "Kind": "Assignment",
                      "AssignmentLine": 19,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Text",
                      "Type": "Text",
                      "Assignment": "GetComponent<Text>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.realtimeSinceStartup + fpsMeasurePeriod",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 19,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_FpsNextPeriod",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Time.realtimeSinceStartup",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 19,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_FpsNextPeriod",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "fpsMeasurePeriod",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 19,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_FpsNextPeriod",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Text>()",
                      "Type": "Text",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Text",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Utility.FPSCounter.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Format",
                    "FullName": "string.Format(string, object)",
                    "ReturnType": "String",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "display",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CurrentFps",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_CurrentFps",
                      "Type": "int",
                      "Assignment": "(int) (m_FpsAccumulator/fpsMeasurePeriod)",
                      "Kind": "Assignment",
                      "AssignmentLine": 30,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FpsAccumulator",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FpsNextPeriod",
                      "Type": "float",
                      "Assignment": "fpsMeasurePeriod",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Text.text",
                      "Type": "?",
                      "Assignment": "string.Format(display, m_CurrentFps)",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(int) (m_FpsAccumulator/fpsMeasurePeriod)",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 30,
                      "UseKind": "Conversion",
                      "AssignedTo": "m_CurrentFps",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "Literal",
                      "AssignedTo": "m_FpsAccumulator",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fpsMeasurePeriod",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_FpsNextPeriod",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "string.Format(display, m_CurrentFps)",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Text.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 25
              }
            ],
            "Fields": [
              {
                "Name": "fpsMeasurePeriod",
                "Type": "float",
                "Modifiers": [
                  "const"
                ],
                "Assignment": "0.5f",
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "m_FpsAccumulator",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "m_FpsNextPeriod",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "m_CurrentFps",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "display",
                "Type": "string",
                "Modifiers": [
                  "const"
                ],
                "Assignment": "\"{0} FPS\"",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "m_Text",
                "Type": "Text",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.UI",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "LerpControlledBob",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\LerpControlledBob.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "LerpControlledBob",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Offset",
                "FullName": "UnityStandardAssets.Utility.LerpControlledBob.Offset()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "float",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 17
              },
              {
                "Name": "DoBobCycle",
                "FullName": "UnityStandardAssets.Utility.LerpControlledBob.DoBobCycle()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "BobAmount",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "t/BobDuration",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 29
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "BobAmount",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "t/BobDuration",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 38
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Definition",
                      "DefinitionLine": 25
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Offset",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(0f, BobAmount, t/BobDuration)",
                      "Kind": "Assignment",
                      "AssignmentLine": 28,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 29,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Offset",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(BobAmount, 0f, t/BobDuration)",
                      "Kind": "Assignment",
                      "AssignmentLine": 37,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "float",
                      "Assignment": "Time.deltaTime",
                      "Kind": "Assignment",
                      "AssignmentLine": 38,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Offset",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(0f, BobAmount, t/BobDuration)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 28,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Offset",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 29,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "t",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "Literal",
                      "AssignedTo": "t",
                      "Value": "0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(BobAmount, 0f, t/BobDuration)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 37,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Offset",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.deltaTime",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 38,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "t",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Offset",
                      "Value": "0f",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 23
              }
            ],
            "Fields": [
              {
                "Name": "BobDuration",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "BobAmount",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "m_Offset",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0f",
                "Attributes": [],
                "Line": 13
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "ObjectResetter",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\ObjectResetter.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ObjectResetter",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Utility.ObjectResetter.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponentsInChildren",
                    "FullName": "UnityEngine.Component.GetComponentsInChildren<UnityEngine.Transform>()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 19
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 23
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "originalStructure",
                      "Type": "System.Collections.Generic.List<UnityEngine.Transform>",
                      "Assignment": "new List<Transform>(GetComponentsInChildren<Transform>())",
                      "Kind": "Assignment",
                      "AssignmentLine": 18,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "originalPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 19,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "originalRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "transform.rotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new List<Transform>(GetComponentsInChildren<Transform>())",
                      "Type": "System.Collections.Generic.List<UnityEngine.Transform>",
                      "Kind": "Use",
                      "UseLine": 18,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "originalStructure",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 19,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "originalPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "originalRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "Invocation",
                      "AssignedTo": "Rigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 17
              },
              {
                "Name": "DelayedReset",
                "FullName": "UnityStandardAssets.Utility.ObjectResetter.DelayedReset(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "delay",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "ResetCoroutine(delay)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 29
                  },
                  {
                    "Name": "ResetCoroutine",
                    "FullName": "UnityStandardAssets.Utility.ObjectResetter.ResetCoroutine(float)",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\ObjectResetter.cs",
                    "DefinitionLine": 33,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "delay",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 29
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 27
              },
              {
                "Name": "ResetCoroutine",
                "FullName": "UnityStandardAssets.Utility.ObjectResetter.ResetCoroutine(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [
                  {
                    "Name": "delay",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetComponentsInChildren",
                    "FullName": "UnityEngine.Component.GetComponentsInChildren<UnityEngine.Transform>()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 38
                  },
                  {
                    "Name": "Contains",
                    "FullName": "System.Collections.Generic.List<UnityEngine.Transform>.Contains(UnityEngine.Transform)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "CommonLanguageRuntimeLibrary",
                    "Arguments": [
                      {
                        "Argument": "t",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "SendMessage",
                    "FullName": "UnityEngine.Component.SendMessage(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Reset\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t.parent",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "null",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "originalPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "originalRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Rigidbody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.zero",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Rigidbody.angularVelocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.zero",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Literal",
                      "AssignedTo": "t.parent",
                      "Value": "null",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "originalPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "FieldReference",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "originalRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "FieldReference",
                      "AssignedTo": "transform.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.zero",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "Rigidbody.velocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.zero",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "Rigidbody.angularVelocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 33
              }
            ],
            "Fields": [
              {
                "Name": "originalPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "originalRotation",
                "Type": "Quaternion",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "originalStructure",
                "Type": "List<Transform>",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "Rigidbody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "System.Collections.Generic",
        "Line": 3
      },
      {
        "Name": "UnityEngine",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "ParticleSystemDestroyer",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\ParticleSystemDestroyer.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "ParticleSystemDestroyer",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Utility.ParticleSystemDestroyer.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponentsInChildren",
                    "FullName": "UnityEngine.Component.GetComponentsInChildren<UnityEngine.ParticleSystem>()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 23
                  },
                  {
                    "Name": "Max",
                    "FullName": "UnityEngine.Mathf.Max(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "system.main.startLifetime.constant",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_MaxLifetime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  },
                  {
                    "Name": "Range",
                    "FullName": "UnityEngine.Random.Range(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "minDuration",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "maxDuration",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "Log",
                    "FullName": "UnityEngine.Debug.Log(object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"stopping \" + name",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 39
                  },
                  {
                    "Name": "BroadcastMessage",
                    "FullName": "UnityEngine.Component.BroadcastMessage(string, UnityEngine.SendMessageOptions)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"Extinguish\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "SendMessageOptions.DontRequireReceiver",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 47
                  },
                  {
                    "Name": "Destroy",
                    "FullName": "UnityEngine.Object.Destroy(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "gameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "systems",
                      "Type": "var",
                      "Assignment": "GetComponentsInChildren<ParticleSystem>()",
                      "Kind": "Definition",
                      "DefinitionLine": 22
                    }
                  },
                  {
                    "Variable": {
                      "Name": "stopTime",
                      "Type": "float",
                      "Assignment": "Time.time + Random.Range(minDuration, maxDuration)",
                      "Kind": "Definition",
                      "DefinitionLine": 32
                    }
                  },
                  {
                    "Variable": {
                      "Name": "emission",
                      "Type": "var",
                      "Assignment": "system.emission",
                      "Kind": "Definition",
                      "DefinitionLine": 43
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MaxLifetime",
                      "Type": "float",
                      "Assignment": "Mathf.Max(system.main.startLifetime.constant, m_MaxLifetime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 27,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "emission.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 44,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Max(system.main.startLifetime.constant, m_MaxLifetime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 27,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_MaxLifetime",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "Literal",
                      "AssignedTo": "emission.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "Stop",
                "FullName": "UnityStandardAssets.Utility.ParticleSystemDestroyer.Stop()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_EarlyStop",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Literal",
                      "AssignedTo": "m_EarlyStop",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 56
              }
            ],
            "Fields": [
              {
                "Name": "minDuration",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "8",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "maxDuration",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "10",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "m_MaxLifetime",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_EarlyStop",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.Random",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "PlatformSpecificContent",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\PlatformSpecificContent.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "PlatformSpecificContent",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Utility.PlatformSpecificContent.OnEnable()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CheckEnableContent",
                    "FullName": "UnityStandardAssets.Utility.PlatformSpecificContent.CheckEnableContent()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\PlatformSpecificContent.cs",
                    "DefinitionLine": 74,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 37
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 35
              },
              {
                "Name": "CheckEnableContent",
                "FullName": "UnityStandardAssets.Utility.PlatformSpecificContent.CheckEnableContent()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "EnableContent",
                    "FullName": "UnityStandardAssets.Utility.PlatformSpecificContent.EnableContent(bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\PlatformSpecificContent.cs",
                    "DefinitionLine": 98,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 88
                  },
                  {
                    "Name": "EnableContent",
                    "FullName": "UnityStandardAssets.Utility.PlatformSpecificContent.EnableContent(bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\PlatformSpecificContent.cs",
                    "DefinitionLine": 98,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 92
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 74
              },
              {
                "Name": "EnableContent",
                "FullName": "UnityStandardAssets.Utility.PlatformSpecificContent.EnableContent(bool)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "enabled",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "enabled",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 106
                  },
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "enabled",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 114
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "monoBehaviour.enabled",
                      "Type": "bool",
                      "Assignment": "enabled",
                      "Kind": "Assignment",
                      "AssignmentLine": 120,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "enabled",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 120,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "monoBehaviour.enabled",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 98
              }
            ],
            "Fields": [
              {
                "Name": "m_BuildTargetGroup",
                "Type": "BuildTargetGroup",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 26
              },
              {
                "Name": "m_Content",
                "Type": "GameObject[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new GameObject[0]",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 28
              },
              {
                "Name": "m_MonoBehaviours",
                "Type": "MonoBehaviour[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new MonoBehaviour[0]",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 30
              },
              {
                "Name": "m_ChildrenOfThisObject",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 32
              }
            ],
            "Line": 14
          }
        ],
        "Usings": [],
        "Line": 8
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "SimpleActivatorMenu",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\SimpleActivatorMenu.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SimpleActivatorMenu",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "OnEnable",
                "FullName": "UnityStandardAssets.Utility.SimpleActivatorMenu.OnEnable()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_CurrentActiveObject",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camSwitchButton.text",
                      "Type": "?",
                      "Assignment": "objects[m_CurrentActiveObject].name",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "Literal",
                      "AssignedTo": "m_CurrentActiveObject",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "objects[m_CurrentActiveObject].name",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "camSwitchButton.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              },
              {
                "Name": "NextCamera",
                "FullName": "UnityStandardAssets.Utility.SimpleActivatorMenu.NextCamera()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "i == nextactiveobject",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 32
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "nextactiveobject",
                      "Type": "int",
                      "Assignment": "m_CurrentActiveObject + 1 >= objects.Length ? 0 : m_CurrentActiveObject + 1",
                      "Kind": "Definition",
                      "DefinitionLine": 27
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 29
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentActiveObject",
                      "Type": "int",
                      "Assignment": "nextactiveobject",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "camSwitchButton.text",
                      "Type": "?",
                      "Assignment": "objects[m_CurrentActiveObject].name",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "nextactiveobject",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_CurrentActiveObject",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "objects[m_CurrentActiveObject].name",
                      "Type": "?",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "camSwitchButton.text",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 26
              }
            ],
            "Fields": [
              {
                "Name": "camSwitchButton",
                "Type": "UnityEngine.UI.Text",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "objects",
                "Type": "GameObject[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "m_CurrentActiveObject",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "SimpleMouseRotator",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\SimpleMouseRotator.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SimpleMouseRotator",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Utility.SimpleMouseRotator.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_OriginalRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "transform.localRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 32
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Utility.SimpleMouseRotator.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Mouse X\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 48
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Mouse Y\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 49
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_TargetAngles.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-rotationRange.y*0.5f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "rotationRange.y*0.5f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 93
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_TargetAngles.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-rotationRange.x*0.5f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "rotationRange.x*0.5f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 94
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "-rotationRange.y*0.5f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "rotationRange.y*0.5f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "inputH/Screen.width",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 102
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "-rotationRange.x*0.5f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "rotationRange.x*0.5f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "inputV/Screen.height",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 103
                  },
                  {
                    "Name": "SmoothDamp",
                    "FullName": "UnityEngine.Vector3.SmoothDamp(UnityEngine.Vector3, UnityEngine.Vector3, ref UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_FollowAngles",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TargetAngles",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_FollowVelocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "dampingTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 107
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "-m_FollowAngles.x",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_FollowAngles.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 110
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "inputH",
                      "Type": "float",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 43
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputV",
                      "Type": "float",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 44
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_OriginalRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputH",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Mouse X\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputV",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Mouse Y\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.y",
                      "Type": "float",
                      "Assignment": "360",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FollowAngles.y",
                      "Type": "float",
                      "Assignment": "360",
                      "Kind": "Assignment",
                      "AssignmentLine": 54,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.x",
                      "Type": "float",
                      "Assignment": "360",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FollowAngles.x",
                      "Type": "float",
                      "Assignment": "360",
                      "Kind": "Assignment",
                      "AssignmentLine": 59,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.y",
                      "Type": "float",
                      "Assignment": "360",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FollowAngles.y",
                      "Type": "float",
                      "Assignment": "360",
                      "Kind": "Assignment",
                      "AssignmentLine": 64,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.x",
                      "Type": "float",
                      "Assignment": "360",
                      "Kind": "Assignment",
                      "AssignmentLine": 68,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FollowAngles.x",
                      "Type": "float",
                      "Assignment": "360",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.y",
                      "Type": "float",
                      "Assignment": "inputH*rotationSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 87,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.x",
                      "Type": "float",
                      "Assignment": "inputV*rotationSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 88,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.y",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(m_TargetAngles.y, -rotationRange.y*0.5f, rotationRange.y*0.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 92,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.x",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(m_TargetAngles.x, -rotationRange.x*0.5f, rotationRange.x*0.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputH",
                      "Type": "float",
                      "Assignment": "Input.mousePosition.x",
                      "Kind": "Assignment",
                      "AssignmentLine": 97,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputV",
                      "Type": "float",
                      "Assignment": "Input.mousePosition.y",
                      "Kind": "Assignment",
                      "AssignmentLine": 98,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.y",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(-rotationRange.y*0.5f, rotationRange.y*0.5f, inputH/Screen.width)",
                      "Kind": "Assignment",
                      "AssignmentLine": 101,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TargetAngles.x",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(-rotationRange.x*0.5f, rotationRange.x*0.5f, inputV/Screen.height)",
                      "Kind": "Assignment",
                      "AssignmentLine": 102,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FollowAngles",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.SmoothDamp(m_FollowAngles, m_TargetAngles, ref m_FollowVelocity, dampingTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 106,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_OriginalRotation*Quaternion.Euler(-m_FollowAngles.x, m_FollowAngles.y, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 109,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "FieldReference",
                      "AssignedTo": "transform.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetAxis(\"Mouse X\")",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "Invocation",
                      "AssignedTo": "inputH",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetAxis(\"Mouse Y\")",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Invocation",
                      "AssignedTo": "inputV",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "Literal",
                      "AssignedTo": "m_TargetAngles.y",
                      "Value": "360",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 54,
                      "UseKind": "Literal",
                      "AssignedTo": "m_FollowAngles.y",
                      "Value": "360",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Literal",
                      "AssignedTo": "m_TargetAngles.x",
                      "Value": "360",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 59,
                      "UseKind": "Literal",
                      "AssignedTo": "m_FollowAngles.x",
                      "Value": "360",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "Literal",
                      "AssignedTo": "m_TargetAngles.y",
                      "Value": "360",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 64,
                      "UseKind": "Literal",
                      "AssignedTo": "m_FollowAngles.y",
                      "Value": "360",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 68,
                      "UseKind": "Literal",
                      "AssignedTo": "m_TargetAngles.x",
                      "Value": "360",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": "Literal",
                      "AssignedTo": "m_FollowAngles.x",
                      "Value": "360",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputH*rotationSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 87,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_TargetAngles.y",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "inputH",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 87,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_TargetAngles.y",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "rotationSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 87,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_TargetAngles.y",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "inputV*rotationSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 88,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_TargetAngles.x",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "inputV",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 88,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_TargetAngles.x",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "rotationSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 88,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_TargetAngles.x",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(m_TargetAngles.y, -rotationRange.y*0.5f, rotationRange.y*0.5f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 92,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_TargetAngles.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(m_TargetAngles.x, -rotationRange.x*0.5f, rotationRange.x*0.5f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_TargetAngles.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Input.mousePosition.x",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 97,
                      "UseKind": "FieldReference",
                      "AssignedTo": "inputH",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Input.mousePosition.y",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 98,
                      "UseKind": "FieldReference",
                      "AssignedTo": "inputV",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(-rotationRange.y*0.5f, rotationRange.y*0.5f, inputH/Screen.width)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 101,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_TargetAngles.y",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(-rotationRange.x*0.5f, rotationRange.x*0.5f, inputV/Screen.height)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 102,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_TargetAngles.x",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.SmoothDamp(m_FollowAngles, m_TargetAngles, ref m_FollowVelocity, dampingTime)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 106,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_FollowAngles",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalRotation*Quaternion.Euler(-m_FollowAngles.x, m_FollowAngles.y, 0)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 109,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "transform.localRotation",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_OriginalRotation",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 109,
                          "UseKind": "FieldReference",
                          "AssignedTo": "transform.localRotation",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "Quaternion.Euler(-m_FollowAngles.x, m_FollowAngles.y, 0)",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 109,
                          "UseKind": "Invocation",
                          "AssignedTo": "transform.localRotation",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 38
              }
            ],
            "Fields": [
              {
                "Name": "rotationRange",
                "Type": "Vector2",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new Vector3(70, 70)",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "rotationSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "10",
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "dampingTime",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.2f",
                "Attributes": [],
                "Line": 20
              },
              {
                "Name": "autoZeroVerticalOnMobile",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "autoZeroHorizontalOnMobile",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "relative",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "m_TargetAngles",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "m_FollowAngles",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "m_FollowVelocity",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "m_OriginalRotation",
                "Type": "Quaternion",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 29
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "SmoothFollow",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\SmoothFollow.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SmoothFollow",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Utility.SmoothFollow.Start()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 25
              },
              {
                "Name": "LateUpdate",
                "FullName": "UnityStandardAssets.Utility.SmoothFollow.LateUpdate()",
                "Modifiers": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LerpAngle",
                    "FullName": "UnityEngine.Mathf.LerpAngle(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "currentRotationAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "wantedRotationAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rotationDamping * Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 42
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "currentHeight",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "wantedHeight",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "heightDamping * Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 45
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "currentRotationAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 48
                  },
                  {
                    "Name": "LookAt",
                    "FullName": "UnityEngine.Transform.LookAt(UnityEngine.Transform)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "target",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "wantedRotationAngle",
                      "Type": "var",
                      "Assignment": "target.eulerAngles.y",
                      "Kind": "Definition",
                      "DefinitionLine": 34
                    }
                  },
                  {
                    "Variable": {
                      "Name": "wantedHeight",
                      "Type": "var",
                      "Assignment": "target.position.y + height",
                      "Kind": "Definition",
                      "DefinitionLine": 35
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentRotationAngle",
                      "Type": "var",
                      "Assignment": "transform.eulerAngles.y",
                      "Kind": "Definition",
                      "DefinitionLine": 37
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentHeight",
                      "Type": "var",
                      "Assignment": "transform.position.y",
                      "Kind": "Definition",
                      "DefinitionLine": 38
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentRotation",
                      "Type": "var",
                      "Assignment": "Quaternion.Euler(0, currentRotationAngle, 0)",
                      "Kind": "Definition",
                      "DefinitionLine": 47
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentRotationAngle",
                      "Type": "float",
                      "Assignment": "Mathf.LerpAngle(currentRotationAngle, wantedRotationAngle, rotationDamping * Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentHeight",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(currentHeight, wantedHeight, heightDamping * Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 44,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "target.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 51,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "currentRotation * Vector3.forward * distance",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "new Vector3(transform.position.x ,currentHeight , transform.position.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 55,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.LerpAngle(currentRotationAngle, wantedRotationAngle, rotationDamping * Time.deltaTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Invocation",
                      "AssignedTo": "currentRotationAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(currentHeight, wantedHeight, heightDamping * Time.deltaTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 44,
                      "UseKind": "Invocation",
                      "AssignedTo": "currentHeight",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 51,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentRotation * Vector3.forward * distance",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "currentRotation * Vector3.forward",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 52,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "transform.position",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "currentRotation",
                              "Type": "UnityEngine.Quaternion",
                              "Kind": "Use",
                              "UseLine": 52,
                              "UseKind": "LocalReference",
                              "AssignedTo": "transform.position",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "Vector3.forward",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 52,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "transform.position",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "distance",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 52,
                          "UseKind": "FieldReference",
                          "AssignedTo": "transform.position",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3(transform.position.x ,currentHeight , transform.position.z)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 55,
                      "UseKind": "ObjectCreation",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              }
            ],
            "Fields": [
              {
                "Name": "target",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "distance",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "10.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "height",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "5.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "rotationDamping",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "heightDamping",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 22
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "UnityEngine",
        "Line": 1
      }
    ],
    "Line": 1
  },
  {
    "Name": "TimedObjectActivator",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\TimedObjectActivator.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "TimedObjectActivator",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Utility.TimedObjectActivator.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Activate(entry)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 49
                  },
                  {
                    "Name": "Activate",
                    "FullName": "UnityStandardAssets.Utility.TimedObjectActivator.Activate(UnityStandardAssets.Utility.TimedObjectActivator.Entry)",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\TimedObjectActivator.cs",
                    "DefinitionLine": 66,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "entry",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 49
                  },
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Deactivate(entry)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 52
                  },
                  {
                    "Name": "Deactivate",
                    "FullName": "UnityStandardAssets.Utility.TimedObjectActivator.Deactivate(UnityStandardAssets.Utility.TimedObjectActivator.Entry)",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\TimedObjectActivator.cs",
                    "DefinitionLine": 73,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "entry",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  },
                  {
                    "Name": "Destroy",
                    "FullName": "UnityEngine.Object.Destroy(UnityEngine.Object, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "entry.target",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "entry.delay",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 55
                  },
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "ReloadLevel(entry)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "ReloadLevel",
                    "FullName": "UnityStandardAssets.Utility.TimedObjectActivator.ReloadLevel(UnityStandardAssets.Utility.TimedObjectActivator.Entry)",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\TimedObjectActivator.cs",
                    "DefinitionLine": 80,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "entry",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 42
              },
              {
                "Name": "Activate",
                "FullName": "UnityStandardAssets.Utility.TimedObjectActivator.Activate(UnityStandardAssets.Utility.TimedObjectActivator.Entry)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [
                  {
                    "Name": "entry",
                    "Type": "Entry",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 69
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 66
              },
              {
                "Name": "Deactivate",
                "FullName": "UnityStandardAssets.Utility.TimedObjectActivator.Deactivate(UnityStandardAssets.Utility.TimedObjectActivator.Entry)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [
                  {
                    "Name": "entry",
                    "Type": "Entry",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "SetActive",
                    "FullName": "UnityEngine.GameObject.SetActive(bool)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 76
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 73
              },
              {
                "Name": "ReloadLevel",
                "FullName": "UnityStandardAssets.Utility.TimedObjectActivator.ReloadLevel(UnityStandardAssets.Utility.TimedObjectActivator.Entry)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [
                  {
                    "Name": "entry",
                    "Type": "Entry",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "LoadScene",
                    "FullName": "UnityEngine.SceneManagement.SceneManager.LoadScene(string)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "SceneManager.GetSceneAt(0).name",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 83
                  },
                  {
                    "Name": "GetSceneAt",
                    "FullName": "UnityEngine.SceneManagement.SceneManager.GetSceneAt(int)",
                    "ReturnType": "Scene",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 83
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 80
              }
            ],
            "Fields": [
              {
                "Name": "target",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "action",
                "Type": "Action",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              },
              {
                "Name": "delay",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "entries",
                "Type": "Entry[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 35
              },
              {
                "Name": "entries",
                "Type": "Entries",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new Entries()",
                "Attributes": [],
                "Line": 39
              }
            ],
            "Line": 11
          }
        ],
        "Usings": [],
        "Line": 9
      },
      {
        "Name": "UnityStandardAssets.Utility.Inspector",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [],
        "Usings": [],
        "Line": 89
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      },
      {
        "Name": "UnityEngine.SceneManagement",
        "Line": 4
      }
    ],
    "Line": 1
  },
  {
    "Name": "TimedObjectDestructor",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\TimedObjectDestructor.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "TimedObjectDestructor",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Utility.TimedObjectDestructor.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Invoke",
                    "FullName": "UnityEngine.MonoBehaviour.Invoke(string, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"DestroyNow\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_TimeOut",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 14
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 12
              },
              {
                "Name": "DestroyNow",
                "FullName": "UnityStandardAssets.Utility.TimedObjectDestructor.DestroyNow()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DetachChildren",
                    "FullName": "UnityEngine.Transform.DetachChildren()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 22
                  },
                  {
                    "Name": "Destroy",
                    "FullName": "UnityEngine.Object.Destroy(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "gameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 24
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              }
            ],
            "Fields": [
              {
                "Name": "m_TimeOut",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1.0f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 8
              },
              {
                "Name": "m_DetachChildren",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "false",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "WaypointCircuit",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WaypointCircuit",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Length",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 20
              },
              {
                "Name": "Waypoints",
                "Type": "Transform[]",
                "Modifiers": [
                  "public"
                ],
                "Line": 22
              }
            ],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Utility.WaypointCircuit.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CachePositionsAndDistances",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.CachePositionsAndDistances()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 129,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 44
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "numPoints",
                      "Type": "int",
                      "Assignment": "Waypoints.Length",
                      "Kind": "Assignment",
                      "AssignmentLine": 45,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Waypoints.Length",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 45,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "numPoints",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 40
              },
              {
                "Name": "GetRoutePoint",
                "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePoint(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "RoutePoint",
                "Parameters": [
                  {
                    "Name": "dist",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetRoutePosition",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePosition(float)",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 60,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "dist",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  },
                  {
                    "Name": "GetRoutePosition",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePosition(float)",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 60,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "dist + 0.1f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 54
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "p1",
                      "Type": "Vector3",
                      "Assignment": "GetRoutePosition(dist)",
                      "Kind": "Definition",
                      "DefinitionLine": 52
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p2",
                      "Type": "Vector3",
                      "Assignment": "GetRoutePosition(dist + 0.1f)",
                      "Kind": "Definition",
                      "DefinitionLine": 53
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "Vector3",
                      "Assignment": "p2 - p1",
                      "Kind": "Definition",
                      "DefinitionLine": 54
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 50
              },
              {
                "Name": "GetRoutePosition",
                "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePosition(float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "Vector3",
                "Parameters": [
                  {
                    "Name": "dist",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Repeat",
                    "FullName": "UnityEngine.Mathf.Repeat(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "dist",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Length",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 69
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "distances[p1n]",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "distances[p2n]",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "dist",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 83
                  },
                  {
                    "Name": "CatmullRom",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.CatmullRom(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 119,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "P0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "P1",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "P2",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "P3",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 105
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Vector3.Lerp(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "points[p1n]",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "points[p2n]",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 114
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "point",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 61
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Length",
                      "Type": "float",
                      "Assignment": "distances[distances.Length - 1]",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dist",
                      "Type": "float",
                      "Assignment": "Mathf.Repeat(dist, Length)",
                      "Kind": "Assignment",
                      "AssignmentLine": 68,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p1n",
                      "Type": "int",
                      "Assignment": "((point - 1) + numPoints)%numPoints",
                      "Kind": "Assignment",
                      "AssignmentLine": 77,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p2n",
                      "Type": "int",
                      "Assignment": "point",
                      "Kind": "Assignment",
                      "AssignmentLine": 78,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(distances[p1n], distances[p2n], dist)",
                      "Kind": "Assignment",
                      "AssignmentLine": 82,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p0n",
                      "Type": "int",
                      "Assignment": "((point - 2) + numPoints)%numPoints",
                      "Kind": "Assignment",
                      "AssignmentLine": 91,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p3n",
                      "Type": "int",
                      "Assignment": "(point + 1)%numPoints",
                      "Kind": "Assignment",
                      "AssignmentLine": 92,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p2n",
                      "Type": "int",
                      "Assignment": "p2n%numPoints",
                      "Kind": "Assignment",
                      "AssignmentLine": 97,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "P0",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "points[p0n]",
                      "Kind": "Assignment",
                      "AssignmentLine": 99,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "P1",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "points[p1n]",
                      "Kind": "Assignment",
                      "AssignmentLine": 100,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "P2",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "points[p2n]",
                      "Kind": "Assignment",
                      "AssignmentLine": 101,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "P3",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "points[p3n]",
                      "Kind": "Assignment",
                      "AssignmentLine": 102,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p1n",
                      "Type": "int",
                      "Assignment": "((point - 1) + numPoints)%numPoints",
                      "Kind": "Assignment",
                      "AssignmentLine": 110,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p2n",
                      "Type": "int",
                      "Assignment": "point",
                      "Kind": "Assignment",
                      "AssignmentLine": 111,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "distances[distances.Length - 1]",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "Length",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Repeat(dist, Length)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 68,
                      "UseKind": "Invocation",
                      "AssignedTo": "dist",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "((point - 1) + numPoints)%numPoints",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 77,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "p1n",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "(point - 1) + numPoints",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 77,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "p1n",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "point - 1",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 77,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "p1n",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": "point",
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 77,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "p1n",
                                  "Value": null,
                                  "VariablesList": []
                                },
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 77,
                                  "UseKind": "Literal",
                                  "AssignedTo": "p1n",
                                  "Value": "1",
                                  "VariablesList": []
                                }
                              ]
                            },
                            {
                              "Name": "numPoints",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 77,
                              "UseKind": "FieldReference",
                              "AssignedTo": "p1n",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "numPoints",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 77,
                          "UseKind": "FieldReference",
                          "AssignedTo": "p1n",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "point",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 78,
                      "UseKind": "LocalReference",
                      "AssignedTo": "p2n",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.InverseLerp(distances[p1n], distances[p2n], dist)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 82,
                      "UseKind": "Invocation",
                      "AssignedTo": "i",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "((point - 2) + numPoints)%numPoints",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 91,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "p0n",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "(point - 2) + numPoints",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 91,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "p0n",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "point - 2",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 91,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "p0n",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": "point",
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 91,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "p0n",
                                  "Value": null,
                                  "VariablesList": []
                                },
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 91,
                                  "UseKind": "Literal",
                                  "AssignedTo": "p0n",
                                  "Value": "2",
                                  "VariablesList": []
                                }
                              ]
                            },
                            {
                              "Name": "numPoints",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 91,
                              "UseKind": "FieldReference",
                              "AssignedTo": "p0n",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "numPoints",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 91,
                          "UseKind": "FieldReference",
                          "AssignedTo": "p0n",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(point + 1)%numPoints",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 92,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "p3n",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "point + 1",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 92,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "p3n",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "point",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 92,
                              "UseKind": "LocalReference",
                              "AssignedTo": "p3n",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": null,
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 92,
                              "UseKind": "Literal",
                              "AssignedTo": "p3n",
                              "Value": "1",
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "numPoints",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 92,
                          "UseKind": "FieldReference",
                          "AssignedTo": "p3n",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p2n%numPoints",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 97,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "p2n",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "p2n",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 97,
                          "UseKind": "FieldReference",
                          "AssignedTo": "p2n",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "numPoints",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 97,
                          "UseKind": "FieldReference",
                          "AssignedTo": "p2n",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "points[p0n]",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 99,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "P0",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "points[p1n]",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 100,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "P1",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "points[p2n]",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 101,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "P2",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "points[p3n]",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 102,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "P3",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "((point - 1) + numPoints)%numPoints",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 110,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "p1n",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "(point - 1) + numPoints",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 110,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "p1n",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "point - 1",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 110,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "p1n",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": "point",
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 110,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "p1n",
                                  "Value": null,
                                  "VariablesList": []
                                },
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 110,
                                  "UseKind": "Literal",
                                  "AssignedTo": "p1n",
                                  "Value": "1",
                                  "VariablesList": []
                                }
                              ]
                            },
                            {
                              "Name": "numPoints",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 110,
                              "UseKind": "FieldReference",
                              "AssignedTo": "p1n",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "numPoints",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 110,
                          "UseKind": "FieldReference",
                          "AssignedTo": "p1n",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "point",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 111,
                      "UseKind": "LocalReference",
                      "AssignedTo": "p2n",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 60
              },
              {
                "Name": "CatmullRom",
                "FullName": "UnityStandardAssets.Utility.WaypointCircuit.CatmullRom(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "Vector3",
                "Parameters": [
                  {
                    "Name": "p0",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "p1",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "p2",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "p3",
                    "Type": "Vector3",
                    "Assignment": null
                  },
                  {
                    "Name": "i",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 119
              },
              {
                "Name": "CachePositionsAndDistances",
                "FullName": "UnityStandardAssets.Utility.WaypointCircuit.CachePositionsAndDistances()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "accumulateDistance",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 135
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 136
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t1",
                      "Type": "var",
                      "Assignment": "Waypoints[(i)%Waypoints.Length]",
                      "Kind": "Definition",
                      "DefinitionLine": 138
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t2",
                      "Type": "var",
                      "Assignment": "Waypoints[(i + 1)%Waypoints.Length]",
                      "Kind": "Definition",
                      "DefinitionLine": 139
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p1",
                      "Type": "Vector3",
                      "Assignment": "t1.position",
                      "Kind": "Definition",
                      "DefinitionLine": 142
                    }
                  },
                  {
                    "Variable": {
                      "Name": "p2",
                      "Type": "Vector3",
                      "Assignment": "t2.position",
                      "Kind": "Definition",
                      "DefinitionLine": 143
                    }
                  },
                  {
                    "Variable": {
                      "Name": "points",
                      "Type": "UnityEngine.Vector3[]",
                      "Assignment": "new Vector3[Waypoints.Length + 1]",
                      "Kind": "Assignment",
                      "AssignmentLine": 132,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "distances",
                      "Type": "float[]",
                      "Assignment": "new float[Waypoints.Length + 1]",
                      "Kind": "Assignment",
                      "AssignmentLine": 133,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "points[i]",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Waypoints[i%Waypoints.Length].position",
                      "Kind": "Assignment",
                      "AssignmentLine": 144,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "distances[i]",
                      "Type": "float",
                      "Assignment": "accumulateDistance",
                      "Kind": "Assignment",
                      "AssignmentLine": 145,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accumulateDistance",
                      "Type": "float",
                      "Assignment": "(p1 - p2).magnitude",
                      "Kind": "Assignment",
                      "AssignmentLine": 146,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Vector3[Waypoints.Length + 1]",
                      "Type": "UnityEngine.Vector3[]",
                      "Kind": "Use",
                      "UseLine": 132,
                      "UseKind": "ArrayCreation",
                      "AssignedTo": "points",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new float[Waypoints.Length + 1]",
                      "Type": "float[]",
                      "Kind": "Use",
                      "UseLine": 133,
                      "UseKind": "ArrayCreation",
                      "AssignedTo": "distances",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Waypoints[i%Waypoints.Length].position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 144,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "points[i]",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accumulateDistance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 145,
                      "UseKind": "LocalReference",
                      "AssignedTo": "distances[i]",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(p1 - p2).magnitude",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 146,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "accumulateDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 129
              },
              {
                "Name": "OnDrawGizmos",
                "FullName": "UnityStandardAssets.Utility.WaypointCircuit.OnDrawGizmos()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DrawGizmos",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.DrawGizmos(bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 165,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 155
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 153
              },
              {
                "Name": "OnDrawGizmosSelected",
                "FullName": "UnityStandardAssets.Utility.WaypointCircuit.OnDrawGizmosSelected()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DrawGizmos",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.DrawGizmos(bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 165,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "true",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 161
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 159
              },
              {
                "Name": "DrawGizmos",
                "FullName": "UnityStandardAssets.Utility.WaypointCircuit.DrawGizmos(bool)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "selected",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "CachePositionsAndDistances",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.CachePositionsAndDistances()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 129,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 172
                  },
                  {
                    "Name": "GetRoutePosition",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePosition(float)",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 60,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "dist + 1",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 181
                  },
                  {
                    "Name": "DrawLine",
                    "FullName": "UnityEngine.Gizmos.DrawLine(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "prev",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "next",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 182
                  },
                  {
                    "Name": "DrawLine",
                    "FullName": "UnityEngine.Gizmos.DrawLine(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "prev",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Waypoints[0].position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 185
                  },
                  {
                    "Name": "DrawLine",
                    "FullName": "UnityEngine.Gizmos.DrawLine(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "prev",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "next",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 192
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "prev",
                      "Type": "Vector3",
                      "Assignment": "Waypoints[0].position",
                      "Kind": "Definition",
                      "DefinitionLine": 175
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dist",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 178
                    }
                  },
                  {
                    "Variable": {
                      "Name": "next",
                      "Type": "Vector3",
                      "Assignment": "GetRoutePosition(dist + 1)",
                      "Kind": "Definition",
                      "DefinitionLine": 180
                    }
                  },
                  {
                    "Variable": {
                      "Name": "n",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 188
                    }
                  },
                  {
                    "Variable": {
                      "Name": "next",
                      "Type": "Vector3",
                      "Assignment": "Waypoints[(n + 1)%Waypoints.Length].position",
                      "Kind": "Definition",
                      "DefinitionLine": 190
                    }
                  },
                  {
                    "Variable": {
                      "Name": "waypointList.circuit",
                      "Type": "UnityStandardAssets.Utility.WaypointCircuit",
                      "Assignment": "this",
                      "Kind": "Assignment",
                      "AssignmentLine": 166,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "numPoints",
                      "Type": "int",
                      "Assignment": "Waypoints.Length",
                      "Kind": "Assignment",
                      "AssignmentLine": 169,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Length",
                      "Type": "float",
                      "Assignment": "distances[distances.Length - 1]",
                      "Kind": "Assignment",
                      "AssignmentLine": 172,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Gizmos.color",
                      "Type": "UnityEngine.Color",
                      "Assignment": "selected ? Color.yellow : new Color(1, 1, 0, 0.5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 174,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "dist",
                      "Type": "float",
                      "Assignment": "Length/editorVisualisationSubsteps",
                      "Kind": "Assignment",
                      "AssignmentLine": 178,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "prev",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "next",
                      "Kind": "Assignment",
                      "AssignmentLine": 182,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "prev",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "next",
                      "Kind": "Assignment",
                      "AssignmentLine": 192,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "this",
                      "Type": "UnityStandardAssets.Utility.WaypointCircuit",
                      "Kind": "Use",
                      "UseLine": 166,
                      "UseKind": "InstanceReference",
                      "AssignedTo": "waypointList.circuit",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Waypoints.Length",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 169,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "numPoints",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "distances[distances.Length - 1]",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 172,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "Length",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "selected ? Color.yellow : new Color(1, 1, 0, 0.5f)",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 174,
                      "UseKind": "Conditional",
                      "AssignedTo": "Gizmos.color",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Length/editorVisualisationSubsteps",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 178,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "dist",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Length",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 178,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "dist",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "editorVisualisationSubsteps",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 178,
                          "UseKind": "FieldReference",
                          "AssignedTo": "dist",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "next",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 182,
                      "UseKind": "LocalReference",
                      "AssignedTo": "prev",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "next",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 192,
                      "UseKind": "LocalReference",
                      "AssignedTo": "prev",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 165
              }
            ],
            "Fields": [
              {
                "Name": "waypointList",
                "Type": "WaypointList",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new WaypointList()",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "smoothRoute",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "true",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "numPoints",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "points",
                "Type": "Vector3[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "distances",
                "Type": "float[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "editorVisualisationSubsteps",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "100",
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "p0n",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 28
              },
              {
                "Name": "p1n",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 29
              },
              {
                "Name": "p2n",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 30
              },
              {
                "Name": "p3n",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 31
              },
              {
                "Name": "i",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 33
              },
              {
                "Name": "P0",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 34
              },
              {
                "Name": "P1",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 35
              },
              {
                "Name": "P2",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 36
              },
              {
                "Name": "P3",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "circuit",
                "Type": "WaypointCircuit",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 203
              },
              {
                "Name": "items",
                "Type": "Transform[]",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "new Transform[0]",
                "Attributes": [],
                "Line": 204
              },
              {
                "Name": "position",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 209
              },
              {
                "Name": "direction",
                "Type": "Vector3",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 210
              }
            ],
            "Line": 11
          }
        ],
        "Usings": [],
        "Line": 9
      },
      {
        "Name": "UnityStandardAssets.Utility.Inspector",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [],
        "Usings": [],
        "Line": 222
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "WaypointProgressTracker",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointProgressTracker.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Utility",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WaypointProgressTracker",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "targetPoint",
                "Type": "WaypointCircuit.RoutePoint",
                "Modifiers": [
                  "public"
                ],
                "Line": 42
              },
              {
                "Name": "speedPoint",
                "Type": "WaypointCircuit.RoutePoint",
                "Modifiers": [
                  "public"
                ],
                "Line": 43
              },
              {
                "Name": "progressPoint",
                "Type": "WaypointCircuit.RoutePoint",
                "Modifiers": [
                  "public"
                ],
                "Line": 44
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Utility.WaypointProgressTracker.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Reset",
                    "FullName": "UnityStandardAssets.Utility.WaypointProgressTracker.Reset()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointProgressTracker.cs",
                    "DefinitionLine": 72,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 67
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "target",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "new GameObject(name + \" Waypoint Target\").transform",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new GameObject(name + \" Waypoint Target\").transform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "target",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 54
              },
              {
                "Name": "Reset",
                "FullName": "UnityStandardAssets.Utility.WaypointProgressTracker.Reset()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "progressDistance",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 73,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "progressNum",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 74,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "circuit.Waypoints[progressNum].position",
                      "Kind": "Assignment",
                      "AssignmentLine": 77,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "circuit.Waypoints[progressNum].rotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 78,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 73,
                      "UseKind": "Literal",
                      "AssignedTo": "progressDistance",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 74,
                      "UseKind": "Literal",
                      "AssignedTo": "progressNum",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "circuit.Waypoints[progressNum].position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 77,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "target.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "circuit.Waypoints[progressNum].rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 78,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "target.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 72
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Utility.WaypointProgressTracker.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "speed",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "(lastPosition - transform.position).magnitude/Time.deltaTime",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Time.deltaTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 93
                  },
                  {
                    "Name": "GetRoutePoint",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePoint(float)",
                    "ReturnType": "RoutePoint",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 50,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "progressDistance + lookAheadForTargetOffset + lookAheadForTargetFactor*speed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 97
                  },
                  {
                    "Name": "LookRotation",
                    "FullName": "UnityEngine.Quaternion.LookRotation(UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "circuit.GetRoutePoint(progressDistance + lookAheadForSpeedOffset + lookAheadForSpeedFactor*speed)\r\n                               .direction",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 100
                  },
                  {
                    "Name": "GetRoutePoint",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePoint(float)",
                    "ReturnType": "RoutePoint",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 50,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "progressDistance + lookAheadForSpeedOffset + lookAheadForSpeedFactor*speed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 101
                  },
                  {
                    "Name": "GetRoutePoint",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePoint(float)",
                    "ReturnType": "RoutePoint",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 50,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "progressDistance",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 106
                  },
                  {
                    "Name": "Dot",
                    "FullName": "UnityEngine.Vector3.Dot(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "progressDelta",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "progressPoint.direction",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 108
                  },
                  {
                    "Name": "GetRoutePoint",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePoint(float)",
                    "ReturnType": "RoutePoint",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 50,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "progressDistance",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  },
                  {
                    "Name": "Dot",
                    "FullName": "UnityEngine.Vector3.Dot(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "progressDelta",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "progressPoint.direction",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 132
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "progressDelta",
                      "Type": "Vector3",
                      "Assignment": "progressPoint.position - transform.position",
                      "Kind": "Definition",
                      "DefinitionLine": 106
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetDelta",
                      "Type": "Vector3",
                      "Assignment": "target.position - transform.position",
                      "Kind": "Definition",
                      "DefinitionLine": 118
                    }
                  },
                  {
                    "Variable": {
                      "Name": "progressDelta",
                      "Type": "Vector3",
                      "Assignment": "progressPoint.position - transform.position",
                      "Kind": "Definition",
                      "DefinitionLine": 130
                    }
                  },
                  {
                    "Variable": {
                      "Name": "speed",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(speed, (lastPosition - transform.position).magnitude/Time.deltaTime,\r\n                                       Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 92,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "circuit.GetRoutePoint(progressDistance + lookAheadForTargetOffset + lookAheadForTargetFactor*speed)\r\n                           .position",
                      "Kind": "Assignment",
                      "AssignmentLine": 95,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.LookRotation(\r\n                        circuit.GetRoutePoint(progressDistance + lookAheadForSpeedOffset + lookAheadForSpeedFactor*speed)\r\n                               .direction)",
                      "Kind": "Assignment",
                      "AssignmentLine": 98,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "progressPoint",
                      "Type": "UnityStandardAssets.Utility.WaypointCircuit.RoutePoint",
                      "Assignment": "circuit.GetRoutePoint(progressDistance)",
                      "Kind": "Assignment",
                      "AssignmentLine": 105,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "progressDistance",
                      "Type": "float",
                      "Assignment": "progressDelta.magnitude*0.5f",
                      "Kind": "Assignment",
                      "AssignmentLine": 109,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lastPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 112,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "progressNum",
                      "Type": "int",
                      "Assignment": "(progressNum + 1)%circuit.Waypoints.Length",
                      "Kind": "Assignment",
                      "AssignmentLine": 121,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "circuit.Waypoints[progressNum].position",
                      "Kind": "Assignment",
                      "AssignmentLine": 125,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "circuit.Waypoints[progressNum].rotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 126,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "progressPoint",
                      "Type": "UnityStandardAssets.Utility.WaypointCircuit.RoutePoint",
                      "Assignment": "circuit.GetRoutePoint(progressDistance)",
                      "Kind": "Assignment",
                      "AssignmentLine": 129,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "progressDistance",
                      "Type": "float",
                      "Assignment": "progressDelta.magnitude",
                      "Kind": "Assignment",
                      "AssignmentLine": 133,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lastPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.position",
                      "Kind": "Assignment",
                      "AssignmentLine": 135,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(speed, (lastPosition - transform.position).magnitude/Time.deltaTime,\r\n                                       Time.deltaTime)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 92,
                      "UseKind": "Invocation",
                      "AssignedTo": "speed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "circuit.GetRoutePoint(progressDistance + lookAheadForTargetOffset + lookAheadForTargetFactor*speed)\r\n                           .position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 95,
                      "UseKind": "FieldReference",
                      "AssignedTo": "target.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.LookRotation(\r\n                        circuit.GetRoutePoint(progressDistance + lookAheadForSpeedOffset + lookAheadForSpeedFactor*speed)\r\n                               .direction)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 98,
                      "UseKind": "Invocation",
                      "AssignedTo": "target.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "circuit.GetRoutePoint(progressDistance)",
                      "Type": "UnityStandardAssets.Utility.WaypointCircuit.RoutePoint",
                      "Kind": "Use",
                      "UseLine": 105,
                      "UseKind": "Invocation",
                      "AssignedTo": "progressPoint",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "progressDelta.magnitude*0.5f",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 109,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "progressDistance",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "progressDelta.magnitude",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 109,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "progressDistance",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 109,
                          "UseKind": "Literal",
                          "AssignedTo": "progressDistance",
                          "Value": "0.5f",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 112,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "lastPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(progressNum + 1)%circuit.Waypoints.Length",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 121,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "progressNum",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "progressNum + 1",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 121,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "progressNum",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "progressNum",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 121,
                              "UseKind": "FieldReference",
                              "AssignedTo": "progressNum",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": null,
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 121,
                              "UseKind": "Literal",
                              "AssignedTo": "progressNum",
                              "Value": "1",
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "circuit.Waypoints.Length",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 121,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "progressNum",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "circuit.Waypoints[progressNum].position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 125,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "target.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "circuit.Waypoints[progressNum].rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 126,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "target.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "circuit.GetRoutePoint(progressDistance)",
                      "Type": "UnityStandardAssets.Utility.WaypointCircuit.RoutePoint",
                      "Kind": "Use",
                      "UseLine": 129,
                      "UseKind": "Invocation",
                      "AssignedTo": "progressPoint",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "progressDelta.magnitude",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 133,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "progressDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 135,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "lastPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 84
              },
              {
                "Name": "OnDrawGizmos",
                "FullName": "UnityStandardAssets.Utility.WaypointProgressTracker.OnDrawGizmos()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "DrawLine",
                    "FullName": "UnityEngine.Gizmos.DrawLine(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "target.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 146
                  },
                  {
                    "Name": "DrawWireSphere",
                    "FullName": "UnityEngine.Gizmos.DrawWireSphere(UnityEngine.Vector3, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "circuit.GetRoutePosition(progressDistance)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 147
                  },
                  {
                    "Name": "GetRoutePosition",
                    "FullName": "UnityStandardAssets.Utility.WaypointCircuit.GetRoutePosition(float)",
                    "ReturnType": "Vector3",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Utility\\WaypointCircuit.cs",
                    "DefinitionLine": 60,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "progressDistance",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 147
                  },
                  {
                    "Name": "DrawLine",
                    "FullName": "UnityEngine.Gizmos.DrawLine(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "target.position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "target.position + target.forward",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 149
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "Gizmos.color",
                      "Type": "UnityEngine.Color",
                      "Assignment": "Color.green",
                      "Kind": "Assignment",
                      "AssignmentLine": 144,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Gizmos.color",
                      "Type": "UnityEngine.Color",
                      "Assignment": "Color.yellow",
                      "Kind": "Assignment",
                      "AssignmentLine": 147,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Color.green",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 144,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "Gizmos.color",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Color.yellow",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 147,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "Gizmos.color",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 141
              }
            ],
            "Fields": [
              {
                "Name": "circuit",
                "Type": "WaypointCircuit",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "lookAheadForTargetOffset",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "5",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "lookAheadForTargetFactor",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": ".1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "lookAheadForSpeedOffset",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "10",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 23
              },
              {
                "Name": "lookAheadForSpeedFactor",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": ".2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 26
              },
              {
                "Name": "progressStyle",
                "Type": "ProgressStyle",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "ProgressStyle.SmoothAlongRoute",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 29
              },
              {
                "Name": "pointToPointThreshold",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "4",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 32
              },
              {
                "Name": "target",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 46
              },
              {
                "Name": "progressDistance",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 48
              },
              {
                "Name": "progressNum",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 49
              },
              {
                "Name": "lastPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 50
              },
              {
                "Name": "speed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 51
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "AeroplaneAiControl",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneAiControl.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Aeroplane",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AeroplaneAiControl",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController>()",
                    "ReturnType": "AeroplaneController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 31
                  },
                  {
                    "Name": "Range",
                    "FullName": "UnityEngine.Random.Range(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "100f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_AeroplaneController",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Assignment": "GetComponent<AeroplaneController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 30,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RandomPerlin",
                      "Type": "float",
                      "Assignment": "Random.Range(0f, 100f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AeroplaneController>()",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Kind": "Use",
                      "UseLine": 30,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_AeroplaneController",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Random.Range(0f, 100f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_RandomPerlin",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              },
              {
                "Name": "Reset",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.Reset()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_TakenOff",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "Literal",
                      "AssignedTo": "m_TakenOff",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 39
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Time.time*m_LateralWanderSpeed",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_RandomPerlin",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 53
                  },
                  {
                    "Name": "InverseTransformPoint",
                    "FullName": "UnityEngine.Transform.InverseTransformPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "targetPos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 57
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "localTarget.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localTarget.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 58
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "localTarget.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localTarget.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "targetAnglePitch",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-m_MaxClimbAngle*Mathf.Deg2Rad",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_MaxClimbAngle*Mathf.Deg2Rad",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 63
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "targetAngleYaw",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-m_MaxRollAngle*Mathf.Deg2Rad",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_MaxRollAngle*Mathf.Deg2Rad",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 76
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.Move(float, float, float, float, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 63,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "rollInput",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pitchInput",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "yawInput",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "throttleInput",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 101
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.Move(float, float, float, float, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 63,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 106
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "targetPos",
                      "Type": "Vector3",
                      "Assignment": "m_Target.position +\r\n                                    transform.right*\r\n                                    (Mathf.PerlinNoise(Time.time*m_LateralWanderSpeed, m_RandomPerlin)*2 - 1)*\r\n                                    m_LateralWanderDistance",
                      "Kind": "Definition",
                      "DefinitionLine": 50
                    }
                  },
                  {
                    "Variable": {
                      "Name": "localTarget",
                      "Type": "Vector3",
                      "Assignment": "transform.InverseTransformPoint(targetPos)",
                      "Kind": "Definition",
                      "DefinitionLine": 56
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetAngleYaw",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(localTarget.x, localTarget.z)",
                      "Kind": "Definition",
                      "DefinitionLine": 57
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetAnglePitch",
                      "Type": "float",
                      "Assignment": "-Mathf.Atan2(localTarget.y, localTarget.z)",
                      "Kind": "Definition",
                      "DefinitionLine": 58
                    }
                  },
                  {
                    "Variable": {
                      "Name": "changePitch",
                      "Type": "float",
                      "Assignment": "targetAnglePitch - m_AeroplaneController.PitchAngle",
                      "Kind": "Definition",
                      "DefinitionLine": 66
                    }
                  },
                  {
                    "Variable": {
                      "Name": "throttleInput",
                      "Type": "float",
                      "Assignment": "0.5f",
                      "Kind": "Definition",
                      "DefinitionLine": 69
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitchInput",
                      "Type": "float",
                      "Assignment": "changePitch*m_PitchSensitivity",
                      "Kind": "Definition",
                      "DefinitionLine": 72
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredRoll",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(targetAngleYaw, -m_MaxRollAngle*Mathf.Deg2Rad, m_MaxRollAngle*Mathf.Deg2Rad)",
                      "Kind": "Definition",
                      "DefinitionLine": 75
                    }
                  },
                  {
                    "Variable": {
                      "Name": "yawInput",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 76
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rollInput",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 77
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentSpeedEffect",
                      "Type": "float",
                      "Assignment": "1 + (m_AeroplaneController.ForwardSpeed*m_SpeedEffect)",
                      "Kind": "Definition",
                      "DefinitionLine": 94
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetAnglePitch",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(targetAnglePitch, -m_MaxClimbAngle*Mathf.Deg2Rad,\r\n                                               m_MaxClimbAngle*Mathf.Deg2Rad)",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_TakenOff",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 83,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "yawInput",
                      "Type": "float",
                      "Assignment": "targetAngleYaw",
                      "Kind": "Assignment",
                      "AssignmentLine": 89,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rollInput",
                      "Type": "float",
                      "Assignment": "-(m_AeroplaneController.RollAngle - desiredRoll)*m_RollSensitivity",
                      "Kind": "Assignment",
                      "AssignmentLine": 90,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rollInput",
                      "Type": "float",
                      "Assignment": "currentSpeedEffect",
                      "Kind": "Assignment",
                      "AssignmentLine": 95,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitchInput",
                      "Type": "float",
                      "Assignment": "currentSpeedEffect",
                      "Kind": "Assignment",
                      "AssignmentLine": 96,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "yawInput",
                      "Type": "float",
                      "Assignment": "currentSpeedEffect",
                      "Kind": "Assignment",
                      "AssignmentLine": 97,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(targetAnglePitch, -m_MaxClimbAngle*Mathf.Deg2Rad,\r\n                                               m_MaxClimbAngle*Mathf.Deg2Rad)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "Invocation",
                      "AssignedTo": "targetAnglePitch",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 83,
                      "UseKind": "Literal",
                      "AssignedTo": "m_TakenOff",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetAngleYaw",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 89,
                      "UseKind": "LocalReference",
                      "AssignedTo": "yawInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-(m_AeroplaneController.RollAngle - desiredRoll)*m_RollSensitivity",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 90,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "rollInput",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "-(m_AeroplaneController.RollAngle - desiredRoll)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 90,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "rollInput",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_RollSensitivity",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 90,
                          "UseKind": "FieldReference",
                          "AssignedTo": "rollInput",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentSpeedEffect",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 95,
                      "UseKind": "LocalReference",
                      "AssignedTo": "rollInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentSpeedEffect",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 96,
                      "UseKind": "LocalReference",
                      "AssignedTo": "pitchInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "currentSpeedEffect",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 97,
                      "UseKind": "LocalReference",
                      "AssignedTo": "yawInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              },
              {
                "Name": "SetTarget",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.SetTarget(UnityEngine.Transform)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "target",
                    "Type": "Transform",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Target",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "target",
                      "Kind": "Assignment",
                      "AssignmentLine": 113,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 113,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "m_Target",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 112
              }
            ],
            "Fields": [
              {
                "Name": "m_RollSensitivity",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": ".2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "m_PitchSensitivity",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": ".5f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "m_LateralWanderDistance",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "5",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "m_LateralWanderSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.11f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "m_MaxClimbAngle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "45",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "m_MaxRollAngle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "45",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "m_SpeedEffect",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.01f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "m_TakeoffHeight",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "20",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "m_Target",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "m_AeroplaneController",
                "Type": "AeroplaneController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "m_RandomPerlin",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 23
              },
              {
                "Name": "m_TakenOff",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 24
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.Random",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AeroplaneAudio",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneAudio.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Aeroplane",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AeroplaneAudio",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAudio.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController>()",
                    "ReturnType": "AeroplaneController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 42
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 43
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent<UnityEngine.AudioSource>()",
                    "ReturnType": "AudioSource",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 47
                  },
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent<UnityEngine.AudioSource>()",
                    "ReturnType": "AudioSource",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 49
                  },
                  {
                    "Name": "Update",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAudio.Update()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneAudio.cs",
                    "DefinitionLine": 76,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 68
                  },
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.AudioSource.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 71
                  },
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.AudioSource.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 72
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Plane",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Assignment": "GetComponent<AeroplaneController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 42,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "gameObject.AddComponent<AudioSource>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource.playOnAwake",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSoundSource",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "gameObject.AddComponent<AudioSource>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 48,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSoundSource.playOnAwake",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource.clip",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "m_EngineSound",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSoundSource.clip",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "m_WindSound",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource.minDistance",
                      "Type": "float",
                      "Assignment": "m_AdvancedSetttings.engineMinDistance",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource.maxDistance",
                      "Type": "float",
                      "Assignment": "m_AdvancedSetttings.engineMaxDistance",
                      "Kind": "Assignment",
                      "AssignmentLine": 57,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource.loop",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource.dopplerLevel",
                      "Type": "float",
                      "Assignment": "m_AdvancedSetttings.engineDopplerLevel",
                      "Kind": "Assignment",
                      "AssignmentLine": 59,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSoundSource.minDistance",
                      "Type": "float",
                      "Assignment": "m_AdvancedSetttings.windMinDistance",
                      "Kind": "Assignment",
                      "AssignmentLine": 61,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSoundSource.maxDistance",
                      "Type": "float",
                      "Assignment": "m_AdvancedSetttings.windMaxDistance",
                      "Kind": "Assignment",
                      "AssignmentLine": 62,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSoundSource.loop",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSoundSource.dopplerLevel",
                      "Type": "float",
                      "Assignment": "m_AdvancedSetttings.windDopplerLevel",
                      "Kind": "Assignment",
                      "AssignmentLine": 64,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AeroplaneController>()",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Plane",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 42,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "gameObject.AddComponent<AudioSource>()",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_EngineSoundSource",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "Literal",
                      "AssignedTo": "m_EngineSoundSource.playOnAwake",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "gameObject.AddComponent<AudioSource>()",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 48,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_WindSoundSource",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "Literal",
                      "AssignedTo": "m_WindSoundSource.playOnAwake",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSound",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_EngineSoundSource.clip",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSound",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_WindSoundSource.clip",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AdvancedSetttings.engineMinDistance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_EngineSoundSource.minDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AdvancedSetttings.engineMaxDistance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 57,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_EngineSoundSource.maxDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Literal",
                      "AssignedTo": "m_EngineSoundSource.loop",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AdvancedSetttings.engineDopplerLevel",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 59,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_EngineSoundSource.dopplerLevel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AdvancedSetttings.windMinDistance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 61,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_WindSoundSource.minDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AdvancedSetttings.windMaxDistance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 62,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_WindSoundSource.maxDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "Literal",
                      "AssignedTo": "m_WindSoundSource.loop",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AdvancedSetttings.windDopplerLevel",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 64,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_WindSoundSource.dopplerLevel",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 39
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAudio.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Plane.MaxEnginePower",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Plane.EnginePower",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 79
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_EngineMinThrottlePitch",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_EngineMaxThrottlePitch",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "enginePowerProportion",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 82
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Plane.MaxEnginePower*m_AdvancedSetttings.engineMasterVolume",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_Plane.EnginePower",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 89
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_WindMaxSpeedVolume",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "planeSpeed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 95
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "enginePowerProportion",
                      "Type": "var",
                      "Assignment": "Mathf.InverseLerp(0, m_Plane.MaxEnginePower, m_Plane.EnginePower)",
                      "Kind": "Definition",
                      "DefinitionLine": 78
                    }
                  },
                  {
                    "Variable": {
                      "Name": "planeSpeed",
                      "Type": "float",
                      "Assignment": "m_Rigidbody.velocity.magnitude",
                      "Kind": "Definition",
                      "DefinitionLine": 92
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource.pitch",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(m_EngineMinThrottlePitch, m_EngineMaxThrottlePitch, enginePowerProportion)",
                      "Kind": "Assignment",
                      "AssignmentLine": 81,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource.pitch",
                      "Type": "float",
                      "Assignment": "m_Plane.ForwardSpeed*m_EngineFwdSpeedMultiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 85,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_EngineSoundSource.volume",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(0, m_Plane.MaxEnginePower*m_AdvancedSetttings.engineMasterVolume,\r\n                                                         m_Plane.EnginePower)",
                      "Kind": "Assignment",
                      "AssignmentLine": 88,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSoundSource.pitch",
                      "Type": "float",
                      "Assignment": "m_WindBasePitch + planeSpeed*m_WindSpeedPitchFactor",
                      "Kind": "Assignment",
                      "AssignmentLine": 93,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindSoundSource.volume",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(0, m_WindMaxSpeedVolume, planeSpeed)*m_AdvancedSetttings.windMasterVolume",
                      "Kind": "Assignment",
                      "AssignmentLine": 94,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(m_EngineMinThrottlePitch, m_EngineMaxThrottlePitch, enginePowerProportion)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 81,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_EngineSoundSource.pitch",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Plane.ForwardSpeed*m_EngineFwdSpeedMultiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 85,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_EngineSoundSource.pitch",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Plane.ForwardSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 85,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_EngineSoundSource.pitch",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_EngineFwdSpeedMultiplier",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 85,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_EngineSoundSource.pitch",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.InverseLerp(0, m_Plane.MaxEnginePower*m_AdvancedSetttings.engineMasterVolume,\r\n                                                         m_Plane.EnginePower)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 88,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_EngineSoundSource.volume",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WindBasePitch + planeSpeed*m_WindSpeedPitchFactor",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 93,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_WindSoundSource.pitch",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_WindBasePitch",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 93,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_WindSoundSource.pitch",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "planeSpeed*m_WindSpeedPitchFactor",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 93,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_WindSoundSource.pitch",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "planeSpeed",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 93,
                              "UseKind": "LocalReference",
                              "AssignedTo": "m_WindSoundSource.pitch",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_WindSpeedPitchFactor",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 93,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_WindSoundSource.pitch",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.InverseLerp(0, m_WindMaxSpeedVolume, planeSpeed)*m_AdvancedSetttings.windMasterVolume",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 94,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_WindSoundSource.volume",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Mathf.InverseLerp(0, m_WindMaxSpeedVolume, planeSpeed)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 94,
                          "UseKind": "Invocation",
                          "AssignedTo": "m_WindSoundSource.volume",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_AdvancedSetttings.windMasterVolume",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 94,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_WindSoundSource.volume",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 76
              }
            ],
            "Fields": [
              {
                "Name": "engineMinDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "50f",
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "engineMaxDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1000f",
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "engineDopplerLevel",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "engineMasterVolume",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.5f",
                "Attributes": [
                  "[Range(0f, 1f)]"
                ],
                "Line": 16
              },
              {
                "Name": "windMinDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "10f",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "windMaxDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "100f",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "windDopplerLevel",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "windMasterVolume",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.5f",
                "Attributes": [
                  "[Range(0f, 1f)]"
                ],
                "Line": 20
              },
              {
                "Name": "m_EngineSound",
                "Type": "AudioClip",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 23
              },
              {
                "Name": "m_EngineMinThrottlePitch",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.4f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 24
              },
              {
                "Name": "m_EngineMaxThrottlePitch",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 25
              },
              {
                "Name": "m_EngineFwdSpeedMultiplier",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.002f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 26
              },
              {
                "Name": "m_WindSound",
                "Type": "AudioClip",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 27
              },
              {
                "Name": "m_WindBasePitch",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 28
              },
              {
                "Name": "m_WindSpeedPitchFactor",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.004f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 29
              },
              {
                "Name": "m_WindMaxSpeedVolume",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "100",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 30
              },
              {
                "Name": "m_AdvancedSetttings",
                "Type": "AdvancedSetttings",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new AdvancedSetttings()",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 31
              },
              {
                "Name": "m_EngineSoundSource",
                "Type": "AudioSource",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 33
              },
              {
                "Name": "m_WindSoundSource",
                "Type": "AudioSource",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 34
              },
              {
                "Name": "m_Plane",
                "Type": "AeroplaneController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 35
              },
              {
                "Name": "m_Rigidbody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 36
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "AeroplaneController",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Aeroplane",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AeroplaneController",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Altitude",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 24
              },
              {
                "Name": "Throttle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 25
              },
              {
                "Name": "AirBrakes",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 26
              },
              {
                "Name": "ForwardSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 27
              },
              {
                "Name": "EnginePower",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 28
              },
              {
                "Name": "MaxEnginePower",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 29
              },
              {
                "Name": "RollAngle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 30
              },
              {
                "Name": "PitchAngle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 31
              },
              {
                "Name": "RollInput",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 32
              },
              {
                "Name": "PitchInput",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 33
              },
              {
                "Name": "YawInput",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 34
              },
              {
                "Name": "ThrottleInput",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 35
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 48
                  },
                  {
                    "Name": "GetComponentsInChildren",
                    "FullName": "UnityEngine.Component.GetComponentsInChildren<UnityEngine.WheelCollider>()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 55
                  },
                  {
                    "Name": "GetChild",
                    "FullName": "UnityEngine.Transform.GetChild(int)",
                    "ReturnType": "Transform",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "i",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 55
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 52
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalDrag",
                      "Type": "float",
                      "Assignment": "m_Rigidbody.drag",
                      "Kind": "Assignment",
                      "AssignmentLine": 49,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalAngularDrag",
                      "Type": "float",
                      "Assignment": "m_Rigidbody.angularDrag",
                      "Kind": "Assignment",
                      "AssignmentLine": 50,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "componentsInChild.motorTorque",
                      "Type": "float",
                      "Assignment": "0.18f",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.drag",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 49,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalDrag",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.angularDrag",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 50,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalAngularDrag",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "Literal",
                      "AssignedTo": "componentsInChild.motorTorque",
                      "Value": "0.18f",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              },
              {
                "Name": "Move",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.Move(float, float, float, float, bool)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "rollInput",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "pitchInput",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "yawInput",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "throttleInput",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "airBrakes",
                    "Type": "bool",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "ClampInputs",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.ClampInputs()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 94,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 72
                  },
                  {
                    "Name": "CalculateRollAndPitchAngles",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateRollAndPitchAngles()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 104,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 74
                  },
                  {
                    "Name": "AutoLevel",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.AutoLevel()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 125,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 76
                  },
                  {
                    "Name": "CalculateForwardSpeed",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateForwardSpeed()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 145,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 78
                  },
                  {
                    "Name": "ControlThrottle",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.ControlThrottle()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 153,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 80
                  },
                  {
                    "Name": "CalculateDrag",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateDrag()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 169,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 82
                  },
                  {
                    "Name": "CaluclateAerodynamicEffect",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CaluclateAerodynamicEffect()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 180,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 84
                  },
                  {
                    "Name": "CalculateLinearForces",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateLinearForces()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 206,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 86
                  },
                  {
                    "Name": "CalculateTorque",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateTorque()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 227,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 88
                  },
                  {
                    "Name": "CalculateAltitude",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateAltitude()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 246,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 90
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "RollInput",
                      "Type": "float",
                      "Assignment": "rollInput",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "PitchInput",
                      "Type": "float",
                      "Assignment": "pitchInput",
                      "Kind": "Assignment",
                      "AssignmentLine": 66,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "YawInput",
                      "Type": "float",
                      "Assignment": "yawInput",
                      "Kind": "Assignment",
                      "AssignmentLine": 67,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ThrottleInput",
                      "Type": "float",
                      "Assignment": "throttleInput",
                      "Kind": "Assignment",
                      "AssignmentLine": 68,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "AirBrakes",
                      "Type": "bool",
                      "Assignment": "airBrakes",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rollInput",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "RollInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitchInput",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 66,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "PitchInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "yawInput",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 67,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "YawInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "throttleInput",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 68,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "ThrottleInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "airBrakes",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "AirBrakes",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 63
              },
              {
                "Name": "ClampInputs",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.ClampInputs()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "RollInput",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 97
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "PitchInput",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 98
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "YawInput",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 99
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "ThrottleInput",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 100
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "RollInput",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(RollInput, -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 96,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "PitchInput",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(PitchInput, -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 97,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "YawInput",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(YawInput, -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 98,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ThrottleInput",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(ThrottleInput, -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 99,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(RollInput, -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 96,
                      "UseKind": "Invocation",
                      "AssignedTo": "RollInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(PitchInput, -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 97,
                      "UseKind": "Invocation",
                      "AssignedTo": "PitchInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(YawInput, -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 98,
                      "UseKind": "Invocation",
                      "AssignedTo": "YawInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(ThrottleInput, -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 99,
                      "UseKind": "Invocation",
                      "AssignedTo": "ThrottleInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 94
              },
              {
                "Name": "CalculateRollAndPitchAngles",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateRollAndPitchAngles()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Normalize",
                    "FullName": "UnityEngine.Vector3.Normalize()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 113
                  },
                  {
                    "Name": "InverseTransformDirection",
                    "FullName": "UnityEngine.Transform.InverseTransformDirection(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "flatForward",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 115
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "localFlatForward.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localFlatForward.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 116
                  },
                  {
                    "Name": "Cross",
                    "FullName": "UnityEngine.Vector3.Cross(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Vector3.up",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "flatForward",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 118
                  },
                  {
                    "Name": "InverseTransformDirection",
                    "FullName": "UnityEngine.Transform.InverseTransformDirection(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "flatRight",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 119
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "localFlatRight.y",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localFlatRight.x",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 120
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "flatForward",
                      "Type": "var",
                      "Assignment": "transform.forward",
                      "Kind": "Definition",
                      "DefinitionLine": 107
                    }
                  },
                  {
                    "Variable": {
                      "Name": "localFlatForward",
                      "Type": "var",
                      "Assignment": "transform.InverseTransformDirection(flatForward)",
                      "Kind": "Definition",
                      "DefinitionLine": 114
                    }
                  },
                  {
                    "Variable": {
                      "Name": "flatRight",
                      "Type": "var",
                      "Assignment": "Vector3.Cross(Vector3.up, flatForward)",
                      "Kind": "Definition",
                      "DefinitionLine": 117
                    }
                  },
                  {
                    "Variable": {
                      "Name": "localFlatRight",
                      "Type": "var",
                      "Assignment": "transform.InverseTransformDirection(flatRight)",
                      "Kind": "Definition",
                      "DefinitionLine": 118
                    }
                  },
                  {
                    "Variable": {
                      "Name": "flatForward.y",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 108,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "PitchAngle",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(localFlatForward.y, localFlatForward.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 115,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "RollAngle",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(localFlatRight.y, localFlatRight.x)",
                      "Kind": "Assignment",
                      "AssignmentLine": 119,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 108,
                      "UseKind": "Literal",
                      "AssignedTo": "flatForward.y",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Atan2(localFlatForward.y, localFlatForward.z)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 115,
                      "UseKind": "Invocation",
                      "AssignedTo": "PitchAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Atan2(localFlatRight.y, localFlatRight.x)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 119,
                      "UseKind": "Invocation",
                      "AssignedTo": "RollAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 104
              },
              {
                "Name": "AutoLevel",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.AutoLevel()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Sin",
                    "FullName": "UnityEngine.Mathf.Sin(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "RollAngle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_BankedTurnAmount*m_BankedTurnAmount*m_AutoTurnPitch",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 140
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_BankedTurnAmount",
                      "Type": "float",
                      "Assignment": "Mathf.Sin(RollAngle)",
                      "Kind": "Assignment",
                      "AssignmentLine": 129,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "RollInput",
                      "Type": "float",
                      "Assignment": "-RollAngle*m_AutoRollLevel",
                      "Kind": "Assignment",
                      "AssignmentLine": 133,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "PitchInput",
                      "Type": "float",
                      "Assignment": "-PitchAngle*m_AutoPitchLevel",
                      "Kind": "Assignment",
                      "AssignmentLine": 138,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "PitchInput",
                      "Type": "float",
                      "Assignment": "Mathf.Abs(m_BankedTurnAmount*m_BankedTurnAmount*m_AutoTurnPitch)",
                      "Kind": "Assignment",
                      "AssignmentLine": 139,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Sin(RollAngle)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 129,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_BankedTurnAmount",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-RollAngle*m_AutoRollLevel",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 133,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "RollInput",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "-RollAngle",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 133,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "RollInput",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_AutoRollLevel",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 133,
                          "UseKind": "FieldReference",
                          "AssignedTo": "RollInput",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-PitchAngle*m_AutoPitchLevel",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 138,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "PitchInput",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "-PitchAngle",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 138,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "PitchInput",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_AutoPitchLevel",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 138,
                          "UseKind": "FieldReference",
                          "AssignedTo": "PitchInput",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Abs(m_BankedTurnAmount*m_BankedTurnAmount*m_AutoTurnPitch)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 139,
                      "UseKind": "Invocation",
                      "AssignedTo": "PitchInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 125
              },
              {
                "Name": "CalculateForwardSpeed",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateForwardSpeed()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "InverseTransformDirection",
                    "FullName": "UnityEngine.Transform.InverseTransformDirection(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Rigidbody.velocity",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 148
                  },
                  {
                    "Name": "Max",
                    "FullName": "UnityEngine.Mathf.Max(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localVelocity.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 149
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "localVelocity",
                      "Type": "var",
                      "Assignment": "transform.InverseTransformDirection(m_Rigidbody.velocity)",
                      "Kind": "Definition",
                      "DefinitionLine": 147
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ForwardSpeed",
                      "Type": "float",
                      "Assignment": "Mathf.Max(0, localVelocity.z)",
                      "Kind": "Assignment",
                      "AssignmentLine": 148,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Max(0, localVelocity.z)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 148,
                      "UseKind": "Invocation",
                      "AssignedTo": "ForwardSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 145
              },
              {
                "Name": "ControlThrottle",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.ControlThrottle()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Clamp01",
                    "FullName": "UnityEngine.Mathf.Clamp01(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Throttle + ThrottleInput*Time.deltaTime*m_ThrottleChangeSpeed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 162
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "ThrottleInput",
                      "Type": "float",
                      "Assignment": "-0.5f",
                      "Kind": "Assignment",
                      "AssignmentLine": 157,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Throttle",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp01(Throttle + ThrottleInput*Time.deltaTime*m_ThrottleChangeSpeed)",
                      "Kind": "Assignment",
                      "AssignmentLine": 161,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EnginePower",
                      "Type": "float",
                      "Assignment": "Throttle*m_MaxEnginePower",
                      "Kind": "Assignment",
                      "AssignmentLine": 164,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-0.5f",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 157,
                      "UseKind": "UnaryOperator",
                      "AssignedTo": "ThrottleInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp01(Throttle + ThrottleInput*Time.deltaTime*m_ThrottleChangeSpeed)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 161,
                      "UseKind": "Invocation",
                      "AssignedTo": "Throttle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Throttle*m_MaxEnginePower",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 164,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "EnginePower",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Throttle",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 164,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "EnginePower",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_MaxEnginePower",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 164,
                          "UseKind": "FieldReference",
                          "AssignedTo": "EnginePower",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 153
              },
              {
                "Name": "CalculateDrag",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateDrag()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "extraDrag",
                      "Type": "float",
                      "Assignment": "m_Rigidbody.velocity.magnitude*m_DragIncreaseFactor",
                      "Kind": "Definition",
                      "DefinitionLine": 171
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.drag",
                      "Type": "float",
                      "Assignment": "(AirBrakes ? (m_OriginalDrag + extraDrag)*m_AirBrakesEffect : m_OriginalDrag + extraDrag)",
                      "Kind": "Assignment",
                      "AssignmentLine": 173,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.angularDrag",
                      "Type": "float",
                      "Assignment": "m_OriginalAngularDrag*ForwardSpeed",
                      "Kind": "Assignment",
                      "AssignmentLine": 175,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(AirBrakes ? (m_OriginalDrag + extraDrag)*m_AirBrakesEffect : m_OriginalDrag + extraDrag)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 173,
                      "UseKind": null,
                      "AssignedTo": "m_Rigidbody.drag",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalAngularDrag*ForwardSpeed",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 175,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Rigidbody.angularDrag",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_OriginalAngularDrag",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 175,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_Rigidbody.angularDrag",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "ForwardSpeed",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 175,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Rigidbody.angularDrag",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 169
              },
              {
                "Name": "CaluclateAerodynamicEffect",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CaluclateAerodynamicEffect()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Dot",
                    "FullName": "UnityEngine.Vector3.Dot(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.forward",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Rigidbody.velocity.normalized",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 188
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Vector3.Lerp(UnityEngine.Vector3, UnityEngine.Vector3, float)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Rigidbody.velocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "transform.forward*ForwardSpeed",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_AeroFactor*ForwardSpeed*m_AerodynamicEffect*Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 193
                  },
                  {
                    "Name": "Slerp",
                    "FullName": "UnityEngine.Quaternion.Slerp(UnityEngine.Quaternion, UnityEngine.Quaternion, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Rigidbody.rotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Quaternion.LookRotation(m_Rigidbody.velocity, transform.up)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_AerodynamicEffect*Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 199
                  },
                  {
                    "Name": "LookRotation",
                    "FullName": "UnityEngine.Quaternion.LookRotation(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Rigidbody.velocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "transform.up",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 200
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "newVelocity",
                      "Type": "var",
                      "Assignment": "Vector3.Lerp(m_Rigidbody.velocity, transform.forward*ForwardSpeed,\r\n                                               m_AeroFactor*ForwardSpeed*m_AerodynamicEffect*Time.deltaTime)",
                      "Kind": "Definition",
                      "DefinitionLine": 192
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AeroFactor",
                      "Type": "float",
                      "Assignment": "Vector3.Dot(transform.forward, m_Rigidbody.velocity.normalized)",
                      "Kind": "Assignment",
                      "AssignmentLine": 187,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AeroFactor",
                      "Type": "float",
                      "Assignment": "m_AeroFactor",
                      "Kind": "Assignment",
                      "AssignmentLine": 189,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "newVelocity",
                      "Kind": "Assignment",
                      "AssignmentLine": 194,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Slerp(m_Rigidbody.rotation,\r\n                                                      Quaternion.LookRotation(m_Rigidbody.velocity, transform.up),\r\n                                                      m_AerodynamicEffect*Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 198,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.Dot(transform.forward, m_Rigidbody.velocity.normalized)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 187,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_AeroFactor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AeroFactor",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 189,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_AeroFactor",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newVelocity",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 194,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_Rigidbody.velocity",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Slerp(m_Rigidbody.rotation,\r\n                                                      Quaternion.LookRotation(m_Rigidbody.velocity, transform.up),\r\n                                                      m_AerodynamicEffect*Time.deltaTime)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 198,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 180
              },
              {
                "Name": "CalculateLinearForces",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateLinearForces()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Cross",
                    "FullName": "UnityEngine.Vector3.Cross(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Rigidbody.velocity",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "transform.right",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 214
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_ZeroLiftSpeed",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "ForwardSpeed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 218
                  },
                  {
                    "Name": "AddForce",
                    "FullName": "UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "forces",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 223
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "forces",
                      "Type": "var",
                      "Assignment": "Vector3.zero",
                      "Kind": "Definition",
                      "DefinitionLine": 209
                    }
                  },
                  {
                    "Variable": {
                      "Name": "liftDirection",
                      "Type": "var",
                      "Assignment": "Vector3.Cross(m_Rigidbody.velocity, transform.right).normalized",
                      "Kind": "Definition",
                      "DefinitionLine": 213
                    }
                  },
                  {
                    "Variable": {
                      "Name": "zeroLiftFactor",
                      "Type": "var",
                      "Assignment": "Mathf.InverseLerp(m_ZeroLiftSpeed, 0, ForwardSpeed)",
                      "Kind": "Definition",
                      "DefinitionLine": 217
                    }
                  },
                  {
                    "Variable": {
                      "Name": "liftPower",
                      "Type": "var",
                      "Assignment": "ForwardSpeed*ForwardSpeed*m_Lift*zeroLiftFactor*m_AeroFactor",
                      "Kind": "Definition",
                      "DefinitionLine": 219
                    }
                  },
                  {
                    "Variable": {
                      "Name": "forces",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "EnginePower*transform.forward",
                      "Kind": "Assignment",
                      "AssignmentLine": 211,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "forces",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "liftPower*liftDirection",
                      "Kind": "Assignment",
                      "AssignmentLine": 220,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "EnginePower*transform.forward",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 211,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "forces",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "EnginePower",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 211,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "forces",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "transform.forward",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 211,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "forces",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "liftPower*liftDirection",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 220,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "forces",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "liftPower",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 220,
                          "UseKind": "LocalReference",
                          "AssignedTo": "forces",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "liftDirection",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 220,
                          "UseKind": "LocalReference",
                          "AssignedTo": "forces",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 206
              },
              {
                "Name": "CalculateTorque",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateTorque()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "AddTorque",
                    "FullName": "UnityEngine.Rigidbody.AddTorque(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "torque*ForwardSpeed*m_AeroFactor",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 242
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "torque",
                      "Type": "var",
                      "Assignment": "Vector3.zero",
                      "Kind": "Definition",
                      "DefinitionLine": 229
                    }
                  },
                  {
                    "Variable": {
                      "Name": "torque",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "PitchInput*m_PitchEffect*transform.right",
                      "Kind": "Assignment",
                      "AssignmentLine": 231,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "torque",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "YawInput*m_YawEffect*transform.up",
                      "Kind": "Assignment",
                      "AssignmentLine": 233,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "torque",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "-RollInput*m_RollEffect*transform.forward",
                      "Kind": "Assignment",
                      "AssignmentLine": 235,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "torque",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_BankedTurnAmount*m_BankedTurnEffect*transform.up",
                      "Kind": "Assignment",
                      "AssignmentLine": 237,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "PitchInput*m_PitchEffect*transform.right",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 231,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "torque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "PitchInput*m_PitchEffect",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 231,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "torque",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "PitchInput",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 231,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "torque",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_PitchEffect",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 231,
                              "UseKind": "FieldReference",
                              "AssignedTo": "torque",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "transform.right",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 231,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "torque",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "YawInput*m_YawEffect*transform.up",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 233,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "torque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "YawInput*m_YawEffect",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 233,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "torque",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "YawInput",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 233,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "torque",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_YawEffect",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 233,
                              "UseKind": "FieldReference",
                              "AssignedTo": "torque",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "transform.up",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 233,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "torque",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-RollInput*m_RollEffect*transform.forward",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 235,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "torque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "-RollInput*m_RollEffect",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 235,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "torque",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "-RollInput",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 235,
                              "UseKind": "UnaryOperator",
                              "AssignedTo": "torque",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_RollEffect",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 235,
                              "UseKind": "FieldReference",
                              "AssignedTo": "torque",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "transform.forward",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 235,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "torque",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_BankedTurnAmount*m_BankedTurnEffect*transform.up",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 237,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "torque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_BankedTurnAmount*m_BankedTurnEffect",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 237,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "torque",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_BankedTurnAmount",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 237,
                              "UseKind": "FieldReference",
                              "AssignedTo": "torque",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_BankedTurnEffect",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 237,
                              "UseKind": "FieldReference",
                              "AssignedTo": "torque",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "transform.up",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 237,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "torque",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 227
              },
              {
                "Name": "CalculateAltitude",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.CalculateAltitude()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Raycast",
                    "FullName": "UnityEngine.Physics.Raycast(UnityEngine.Ray, out UnityEngine.RaycastHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "ray",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "hit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 252
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "ray",
                      "Type": "var",
                      "Assignment": "new Ray(transform.position - Vector3.up*10, -Vector3.up)",
                      "Kind": "Definition",
                      "DefinitionLine": 249
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hit",
                      "Type": "RaycastHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 250
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Altitude",
                      "Type": "float",
                      "Assignment": "Physics.Raycast(ray, out hit) ? hit.distance + 10 : transform.position.y",
                      "Kind": "Assignment",
                      "AssignmentLine": 251,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Physics.Raycast(ray, out hit) ? hit.distance + 10 : transform.position.y",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 251,
                      "UseKind": "Conditional",
                      "AssignedTo": "Altitude",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 246
              },
              {
                "Name": "Immobilize",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.Immobilize()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Immobilized",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 258,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 258,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Immobilized",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 257
              },
              {
                "Name": "Reset",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.Reset()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Immobilized",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 265,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 265,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Immobilized",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 264
              }
            ],
            "Fields": [
              {
                "Name": "m_MaxEnginePower",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "40f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "m_Lift",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.002f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "m_ZeroLiftSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "300",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "m_RollEffect",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 12
              },
              {
                "Name": "m_PitchEffect",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 13
              },
              {
                "Name": "m_YawEffect",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "m_BankedTurnEffect",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.5f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 15
              },
              {
                "Name": "m_AerodynamicEffect",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.02f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 16
              },
              {
                "Name": "m_AutoTurnPitch",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.5f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 17
              },
              {
                "Name": "m_AutoRollLevel",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 18
              },
              {
                "Name": "m_AutoPitchLevel",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.2f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 19
              },
              {
                "Name": "m_AirBrakesEffect",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "3f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 20
              },
              {
                "Name": "m_ThrottleChangeSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.3f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 21
              },
              {
                "Name": "m_DragIncreaseFactor",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.001f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 22
              },
              {
                "Name": "m_OriginalDrag",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "m_OriginalAngularDrag",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 38
              },
              {
                "Name": "m_AeroFactor",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 39
              },
              {
                "Name": "m_Immobilized",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "false",
                "Attributes": [],
                "Line": 40
              },
              {
                "Name": "m_BankedTurnAmount",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 41
              },
              {
                "Name": "m_Rigidbody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 42
              },
              {
                "Name": "m_WheelColliders",
                "Type": "WheelCollider[]",
                "Modifiers": [],
                "Assignment": null,
                "Attributes": [],
                "Line": 43
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "AeroplaneControlSurfaceAnimator",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneControlSurfaceAnimator.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Aeroplane",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AeroplaneControlSurfaceAnimator",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController>()",
                    "ReturnType": "AeroplaneController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 18
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Plane",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Assignment": "GetComponent<AeroplaneController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 17,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "surface.originalLocalRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "surface.transform.localRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AeroplaneController>()",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Kind": "Use",
                      "UseLine": 17,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Plane",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "surface.transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "surface.originalLocalRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 15
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "surface.amount*m_Plane.RollInput",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 37
                  },
                  {
                    "Name": "RotateSurface",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.RotateSurface(UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.ControlSurface, UnityEngine.Quaternion)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneControlSurfaceAnimator.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "surface",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rotation",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "surface.amount*-m_Plane.PitchInput",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 44
                  },
                  {
                    "Name": "RotateSurface",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.RotateSurface(UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.ControlSurface, UnityEngine.Quaternion)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneControlSurfaceAnimator.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "surface",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rotation",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 45
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "surface.amount*m_Plane.YawInput",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 51
                  },
                  {
                    "Name": "RotateSurface",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.RotateSurface(UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.ControlSurface, UnityEngine.Quaternion)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneControlSurfaceAnimator.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "surface",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rotation",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "surface.amount*r",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 60
                  },
                  {
                    "Name": "RotateSurface",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.RotateSurface(UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.ControlSurface, UnityEngine.Quaternion)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneControlSurfaceAnimator.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "surface",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rotation",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 61
                  },
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "surface.amount*r",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 68
                  },
                  {
                    "Name": "RotateSurface",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.RotateSurface(UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.ControlSurface, UnityEngine.Quaternion)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneControlSurfaceAnimator.cs",
                    "DefinitionLine": 77,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "surface",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "rotation",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 69
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "rotation",
                      "Type": "Quaternion",
                      "Assignment": "Quaternion.Euler(surface.amount*m_Plane.RollInput, 0f, 0f)",
                      "Kind": "Definition",
                      "DefinitionLine": 36
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rotation",
                      "Type": "Quaternion",
                      "Assignment": "Quaternion.Euler(surface.amount*-m_Plane.PitchInput, 0f, 0f)",
                      "Kind": "Definition",
                      "DefinitionLine": 43
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rotation",
                      "Type": "Quaternion",
                      "Assignment": "Quaternion.Euler(0f, surface.amount*m_Plane.YawInput, 0f)",
                      "Kind": "Definition",
                      "DefinitionLine": 50
                    }
                  },
                  {
                    "Variable": {
                      "Name": "r",
                      "Type": "float",
                      "Assignment": "m_Plane.YawInput + m_Plane.PitchInput",
                      "Kind": "Definition",
                      "DefinitionLine": 58
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rotation",
                      "Type": "Quaternion",
                      "Assignment": "Quaternion.Euler(0f, 0f, surface.amount*r)",
                      "Kind": "Definition",
                      "DefinitionLine": 59
                    }
                  },
                  {
                    "Variable": {
                      "Name": "r",
                      "Type": "float",
                      "Assignment": "m_Plane.YawInput - m_Plane.PitchInput",
                      "Kind": "Definition",
                      "DefinitionLine": 66
                    }
                  },
                  {
                    "Variable": {
                      "Name": "rotation",
                      "Type": "Quaternion",
                      "Assignment": "Quaternion.Euler(0f, 0f, surface.amount*r)",
                      "Kind": "Definition",
                      "DefinitionLine": 67
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              },
              {
                "Name": "RotateSurface",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.RotateSurface(UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.ControlSurface, UnityEngine.Quaternion)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "surface",
                    "Type": "ControlSurface",
                    "Assignment": null
                  },
                  {
                    "Name": "rotation",
                    "Type": "Quaternion",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Slerp",
                    "FullName": "UnityEngine.Quaternion.Slerp(UnityEngine.Quaternion, UnityEngine.Quaternion, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "surface.transform.localRotation",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "target",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Smoothing*Time.deltaTime",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 83
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "target",
                      "Type": "Quaternion",
                      "Assignment": "surface.originalLocalRotation*rotation",
                      "Kind": "Definition",
                      "DefinitionLine": 79
                    }
                  },
                  {
                    "Variable": {
                      "Name": "surface.transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.Slerp(surface.transform.localRotation, target,\r\n                                                               m_Smoothing*Time.deltaTime)",
                      "Kind": "Assignment",
                      "AssignmentLine": 82,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.Slerp(surface.transform.localRotation, target,\r\n                                                               m_Smoothing*Time.deltaTime)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 82,
                      "UseKind": "Invocation",
                      "AssignedTo": "surface.transform.localRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 77
              }
            ],
            "Fields": [
              {
                "Name": "m_Smoothing",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "5f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "m_ControlSurfaces",
                "Type": "ControlSurface[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "m_Plane",
                "Type": "AeroplaneController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "transform",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 102
              },
              {
                "Name": "amount",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 103
              },
              {
                "Name": "type",
                "Type": "Type",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 104
              },
              {
                "Name": "originalLocalRotation",
                "Type": "Quaternion",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [
                  "[HideInInspector]"
                ],
                "Line": 106
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "AeroplanePropellerAnimator",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplanePropellerAnimator.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Aeroplane",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AeroplanePropellerAnimator",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplanePropellerAnimator.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController>()",
                    "ReturnType": "AeroplaneController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 26
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 28
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 29
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Plane",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Assignment": "GetComponent<AeroplaneController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorModelRenderer",
                      "Type": "UnityEngine.Renderer",
                      "Assignment": "m_PropellorModel.GetComponent<Renderer>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 27,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorBlurRenderer",
                      "Type": "UnityEngine.Renderer",
                      "Assignment": "m_PropellorBlur.GetComponent<Renderer>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 28,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorBlur.parent",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "m_PropellorModel",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AeroplaneController>()",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Plane",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorModel.GetComponent<Renderer>()",
                      "Type": "UnityEngine.Renderer",
                      "Kind": "Use",
                      "UseLine": 27,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_PropellorModelRenderer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorBlur.GetComponent<Renderer>()",
                      "Type": "UnityEngine.Renderer",
                      "Kind": "Use",
                      "UseLine": 28,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_PropellorBlurRenderer",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorModel",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_PropellorBlur.parent",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 23
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplanePropellerAnimator.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Rotate",
                    "FullName": "UnityEngine.Transform.Rotate(float, float, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_MaxRpm*m_Plane.Throttle*Time.deltaTime*k_RpmToDps",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 39
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_ThrottleBlurStart",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_ThrottleBlurEnd",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Plane.Throttle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 47
                  },
                  {
                    "Name": "FloorToInt",
                    "FullName": "UnityEngine.Mathf.FloorToInt(float)",
                    "ReturnType": "Int32",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "throttleBlurProportion*(m_PropellorBlurTextures.Length - 1)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 48
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "newBlurState",
                      "Type": "var",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 41
                    }
                  },
                  {
                    "Variable": {
                      "Name": "throttleBlurProportion",
                      "Type": "var",
                      "Assignment": "Mathf.InverseLerp(m_ThrottleBlurStart, m_ThrottleBlurEnd, m_Plane.Throttle)",
                      "Kind": "Definition",
                      "DefinitionLine": 46
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newBlurState",
                      "Type": "int",
                      "Assignment": "Mathf.FloorToInt(throttleBlurProportion*(m_PropellorBlurTextures.Length - 1))",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorBlurState",
                      "Type": "int",
                      "Assignment": "newBlurState",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorModelRenderer.enabled",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorBlurRenderer.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 59,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorModelRenderer.enabled",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 64,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorBlurRenderer.enabled",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorBlurRenderer.material.mainTexture",
                      "Type": "UnityEngine.Texture",
                      "Assignment": "m_PropellorBlurTextures[m_PropellorBlurState]",
                      "Kind": "Assignment",
                      "AssignmentLine": 68,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.FloorToInt(throttleBlurProportion*(m_PropellorBlurTextures.Length - 1))",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "Invocation",
                      "AssignedTo": "newBlurState",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "newBlurState",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_PropellorBlurState",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Literal",
                      "AssignedTo": "m_PropellorModelRenderer.enabled",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 59,
                      "UseKind": "Literal",
                      "AssignedTo": "m_PropellorBlurRenderer.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 64,
                      "UseKind": "Literal",
                      "AssignedTo": "m_PropellorModelRenderer.enabled",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "Literal",
                      "AssignedTo": "m_PropellorBlurRenderer.enabled",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_PropellorBlurTextures[m_PropellorBlurState]",
                      "Type": "UnityEngine.Texture",
                      "Kind": "Use",
                      "UseLine": 68,
                      "UseKind": "ArrayElementReference",
                      "AssignedTo": "m_PropellorBlurRenderer.material.mainTexture",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 36
              }
            ],
            "Fields": [
              {
                "Name": "m_PropellorModel",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "m_PropellorBlur",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "m_PropellorBlurTextures",
                "Type": "Texture2D[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 11
              },
              {
                "Name": "m_ThrottleBlurStart",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.25f",
                "Attributes": [
                  "[SerializeField]",
                  "[Range(0f, 1f)]"
                ],
                "Line": 12
              },
              {
                "Name": "m_ThrottleBlurEnd",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.5f",
                "Attributes": [
                  "[SerializeField]",
                  "[Range(0f, 1f)]"
                ],
                "Line": 13
              },
              {
                "Name": "m_MaxRpm",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "2000",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 14
              },
              {
                "Name": "m_Plane",
                "Type": "AeroplaneController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_PropellorBlurState",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "-1",
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "k_RpmToDps",
                "Type": "float",
                "Modifiers": [
                  "private",
                  "const"
                ],
                "Assignment": "60f",
                "Attributes": [],
                "Line": 18
              },
              {
                "Name": "m_PropellorModelRenderer",
                "Type": "Renderer",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 19
              },
              {
                "Name": "m_PropellorBlurRenderer",
                "Type": "Renderer",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 20
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "AeroplaneUserControl2Axis",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneUserControl2Axis.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Aeroplane",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AeroplaneUserControl2Axis",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl2Axis.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController>()",
                    "ReturnType": "AeroplaneController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 21
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Aeroplane",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Assignment": "GetComponent<AeroplaneController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 20,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AeroplaneController>()",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Kind": "Use",
                      "UseLine": 20,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Aeroplane",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 18
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl2Axis.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Horizontal\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 28
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Vertical\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 29
                  },
                  {
                    "Name": "GetButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButton(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 113,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Fire1\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 30
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.Move(float, float, float, float, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 63,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "roll",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pitch",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "throttle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "airBrakes",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 38
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "roll",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Kind": "Definition",
                      "DefinitionLine": 27
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Vertical\")",
                      "Kind": "Definition",
                      "DefinitionLine": 28
                    }
                  },
                  {
                    "Variable": {
                      "Name": "airBrakes",
                      "Type": "bool",
                      "Assignment": "CrossPlatformInputManager.GetButton(\"Fire1\")",
                      "Kind": "Definition",
                      "DefinitionLine": 29
                    }
                  },
                  {
                    "Variable": {
                      "Name": "throttle",
                      "Type": "float",
                      "Assignment": "airBrakes ? -1 : 1",
                      "Kind": "Definition",
                      "DefinitionLine": 32
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 25
              },
              {
                "Name": "AdjustInputForMobileControls",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl2Axis.AdjustInputForMobileControls(ref float, ref float, ref float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "roll",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "pitch",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "throttle",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "(intendedRollAngle - m_Aeroplane.RollAngle)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 54
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "(intendedPitchAngle - m_Aeroplane.PitchAngle)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 55
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "intendedThrottle - m_Aeroplane.Throttle",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "intendedRollAngle",
                      "Type": "float",
                      "Assignment": "roll*maxRollAngle*Mathf.Deg2Rad",
                      "Kind": "Definition",
                      "DefinitionLine": 51
                    }
                  },
                  {
                    "Variable": {
                      "Name": "intendedPitchAngle",
                      "Type": "float",
                      "Assignment": "pitch*maxPitchAngle*Mathf.Deg2Rad",
                      "Kind": "Definition",
                      "DefinitionLine": 52
                    }
                  },
                  {
                    "Variable": {
                      "Name": "intendedThrottle",
                      "Type": "float",
                      "Assignment": "throttle*0.5f + 0.5f",
                      "Kind": "Definition",
                      "DefinitionLine": 57
                    }
                  },
                  {
                    "Variable": {
                      "Name": "roll",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp((intendedRollAngle - m_Aeroplane.RollAngle), -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 53,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp((intendedPitchAngle - m_Aeroplane.PitchAngle), -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 54,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "throttle",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(intendedThrottle - m_Aeroplane.Throttle, -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp((intendedRollAngle - m_Aeroplane.RollAngle), -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 53,
                      "UseKind": "Invocation",
                      "AssignedTo": "roll",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp((intendedPitchAngle - m_Aeroplane.PitchAngle), -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 54,
                      "UseKind": "Invocation",
                      "AssignedTo": "pitch",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(intendedThrottle - m_Aeroplane.Throttle, -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Invocation",
                      "AssignedTo": "throttle",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 42
              }
            ],
            "Fields": [
              {
                "Name": "maxRollAngle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "80",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "maxPitchAngle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "80",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "m_Aeroplane",
                "Type": "AeroplaneController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "AeroplaneUserControl4Axis",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneUserControl4Axis.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Aeroplane",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "AeroplaneUserControl4Axis",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl4Axis.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController>()",
                    "ReturnType": "AeroplaneController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 24
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Aeroplane",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Assignment": "GetComponent<AeroplaneController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AeroplaneController>()",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Aeroplane",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl4Axis.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Mouse X\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 31
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Mouse Y\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 32
                  },
                  {
                    "Name": "GetButton",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetButton(string)",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 113,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Fire1\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 33
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Horizontal\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 34
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Vertical\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 35
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.Move(float, float, float, float, bool)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\AeroplaneController.cs",
                    "DefinitionLine": 63,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "roll",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pitch",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Yaw",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Throttle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_AirBrakes",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "roll",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Mouse X\")",
                      "Kind": "Definition",
                      "DefinitionLine": 30
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Mouse Y\")",
                      "Kind": "Definition",
                      "DefinitionLine": 31
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AirBrakes",
                      "Type": "bool",
                      "Assignment": "CrossPlatformInputManager.GetButton(\"Fire1\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Yaw",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Throttle",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Vertical\")",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetButton(\"Fire1\")",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_AirBrakes",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Yaw",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "CrossPlatformInputManager.GetAxis(\"Vertical\")",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Throttle",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 28
              },
              {
                "Name": "AdjustInputForMobileControls",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl4Axis.AdjustInputForMobileControls(ref float, ref float, ref float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "roll",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "pitch",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "throttle",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "(intendedRollAngle - m_Aeroplane.RollAngle)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 56
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "(intendedPitchAngle - m_Aeroplane.PitchAngle)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 57
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "intendedRollAngle",
                      "Type": "float",
                      "Assignment": "roll*maxRollAngle*Mathf.Deg2Rad",
                      "Kind": "Definition",
                      "DefinitionLine": 53
                    }
                  },
                  {
                    "Variable": {
                      "Name": "intendedPitchAngle",
                      "Type": "float",
                      "Assignment": "pitch*maxPitchAngle*Mathf.Deg2Rad",
                      "Kind": "Definition",
                      "DefinitionLine": 54
                    }
                  },
                  {
                    "Variable": {
                      "Name": "roll",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp((intendedRollAngle - m_Aeroplane.RollAngle), -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 55,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp((intendedPitchAngle - m_Aeroplane.PitchAngle), -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 56,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp((intendedRollAngle - m_Aeroplane.RollAngle), -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 55,
                      "UseKind": "Invocation",
                      "AssignedTo": "roll",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp((intendedPitchAngle - m_Aeroplane.PitchAngle), -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 56,
                      "UseKind": "Invocation",
                      "AssignedTo": "pitch",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 44
              }
            ],
            "Fields": [
              {
                "Name": "maxRollAngle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "80",
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "maxPitchAngle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "80",
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "m_Aeroplane",
                "Type": "AeroplaneController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "m_Throttle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_AirBrakes",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_Yaw",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "JetParticleEffect",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\JetParticleEffect.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Aeroplane",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "JetParticleEffect",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "FindAeroplaneParent",
                    "FullName": "UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.FindAeroplaneParent()",
                    "ReturnType": "AeroplaneController",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\JetParticleEffect.cs",
                    "DefinitionLine": 46,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 23
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.ParticleSystem>()",
                    "ReturnType": "ParticleSystem",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 26
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Jet",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Assignment": "FindAeroplaneParent()",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_System",
                      "Type": "UnityEngine.ParticleSystem",
                      "Assignment": "GetComponent<ParticleSystem>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalLifetime",
                      "Type": "float",
                      "Assignment": "m_System.main.startLifetime.constant",
                      "Kind": "Assignment",
                      "AssignmentLine": 28,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalStartSize",
                      "Type": "float",
                      "Assignment": "m_System.main.startSize.constant",
                      "Kind": "Assignment",
                      "AssignmentLine": 29,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalStartColor",
                      "Type": "UnityEngine.Color",
                      "Assignment": "m_System.main.startColor.color",
                      "Kind": "Assignment",
                      "AssignmentLine": 30,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "FindAeroplaneParent()",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Jet",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<ParticleSystem>()",
                      "Type": "UnityEngine.ParticleSystem",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_System",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_System.main.startLifetime.constant",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 28,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalLifetime",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_System.main.startSize.constant",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 29,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalStartSize",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_System.main.startColor.color",
                      "Type": "UnityEngine.Color",
                      "Kind": "Use",
                      "UseLine": 30,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalStartColor",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 20
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0.0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_OriginalLifetime",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Jet.Throttle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 40
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_OriginalStartSize*.3f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_OriginalStartSize",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Jet.Throttle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 41
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Color.Lerp(UnityEngine.Color, UnityEngine.Color, float)",
                    "ReturnType": "Color",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "minColour",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_OriginalStartColor",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Jet.Throttle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 42
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "mainModule",
                      "Type": "ParticleSystem.MainModule",
                      "Assignment": "m_System.main",
                      "Kind": "Definition",
                      "DefinitionLine": 37
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainModule.startLifetime",
                      "Type": "UnityEngine.ParticleSystem.MinMaxCurve",
                      "Assignment": "Mathf.Lerp(0.0f, m_OriginalLifetime, m_Jet.Throttle)",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainModule.startSize",
                      "Type": "UnityEngine.ParticleSystem.MinMaxCurve",
                      "Assignment": "Mathf.Lerp(m_OriginalStartSize*.3f, m_OriginalStartSize, m_Jet.Throttle)",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "mainModule.startColor",
                      "Type": "UnityEngine.ParticleSystem.MinMaxGradient",
                      "Assignment": "Color.Lerp(minColour, m_OriginalStartColor, m_Jet.Throttle)",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(0.0f, m_OriginalLifetime, m_Jet.Throttle)",
                      "Type": "UnityEngine.ParticleSystem.MinMaxCurve",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "Invocation",
                      "AssignedTo": "mainModule.startLifetime",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(m_OriginalStartSize*.3f, m_OriginalStartSize, m_Jet.Throttle)",
                      "Type": "UnityEngine.ParticleSystem.MinMaxCurve",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "Invocation",
                      "AssignedTo": "mainModule.startSize",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Color.Lerp(minColour, m_OriginalStartColor, m_Jet.Throttle)",
                      "Type": "UnityEngine.ParticleSystem.MinMaxGradient",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Invocation",
                      "AssignedTo": "mainModule.startColor",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 36
              },
              {
                "Name": "FindAeroplaneParent",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.FindAeroplaneParent()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "AeroplaneController",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController>()",
                    "ReturnType": "AeroplaneController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 55
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "var",
                      "Assignment": "transform",
                      "Kind": "Definition",
                      "DefinitionLine": 48
                    }
                  },
                  {
                    "Variable": {
                      "Name": "aero",
                      "Type": "var",
                      "Assignment": "t.GetComponent<AeroplaneController>()",
                      "Kind": "Definition",
                      "DefinitionLine": 54
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "t.parent",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "t.parent",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "t",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 46
              }
            ],
            "Fields": [
              {
                "Name": "minColour",
                "Type": "Color",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "m_Jet",
                "Type": "AeroplaneController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "m_System",
                "Type": "ParticleSystem",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "m_OriginalStartSize",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "m_OriginalLifetime",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_OriginalStartColor",
                "Type": "Color",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "LandingGear",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Aircraft\\Scripts\\LandingGear.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Aeroplane",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "LandingGear",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.LandingGear.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController>()",
                    "ReturnType": "AeroplaneController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 32
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Animator>()",
                    "ReturnType": "Animator",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 33
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 34
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Plane",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Assignment": "GetComponent<AeroplaneController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 31,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Animator",
                      "Type": "UnityEngine.Animator",
                      "Assignment": "GetComponent<Animator>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 32,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AeroplaneController>()",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController",
                      "Kind": "Use",
                      "UseLine": 31,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Plane",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Animator>()",
                      "Type": "UnityEngine.Animator",
                      "Kind": "Use",
                      "UseLine": 32,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Animator",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 30
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Aeroplane.LandingGear.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "SetInteger",
                    "FullName": "UnityEngine.Animator.SetInteger(string, int)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AnimationModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\"GearState\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "(int) m_State",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 52
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_State",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.LandingGear.GearState",
                      "Assignment": "GearState.Raised",
                      "Kind": "Assignment",
                      "AssignmentLine": 42,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_State",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.LandingGear.GearState",
                      "Assignment": "GearState.Lowered",
                      "Kind": "Assignment",
                      "AssignmentLine": 47,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GearState.Raised",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.LandingGear.GearState",
                      "Kind": "Use",
                      "UseLine": 42,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_State",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GearState.Lowered",
                      "Type": "UnityStandardAssets.Vehicles.Aeroplane.LandingGear.GearState",
                      "Kind": "Use",
                      "UseLine": 47,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_State",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 39
              }
            ],
            "Fields": [
              {
                "Name": "raiseAtAltitude",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "40",
                "Attributes": [],
                "Line": 21
              },
              {
                "Name": "lowerAtAltitude",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "40",
                "Attributes": [],
                "Line": 22
              },
              {
                "Name": "m_State",
                "Type": "GearState",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "GearState.Lowered",
                "Attributes": [],
                "Line": 24
              },
              {
                "Name": "m_Animator",
                "Type": "Animator",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 25
              },
              {
                "Name": "m_Rigidbody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 26
              },
              {
                "Name": "m_Plane",
                "Type": "AeroplaneController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 27
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "BrakeLight",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\BrakeLight.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "BrakeLight",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Car.BrakeLight.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Renderer>()",
                    "ReturnType": "Renderer",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 15
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Renderer",
                      "Type": "UnityEngine.Renderer",
                      "Assignment": "GetComponent<Renderer>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 14,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Renderer>()",
                      "Type": "UnityEngine.Renderer",
                      "Kind": "Use",
                      "UseLine": 14,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Renderer",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Car.BrakeLight.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Renderer.enabled",
                      "Type": "bool",
                      "Assignment": "car.BrakeInput > 0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 21,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "car.BrakeInput > 0f",
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 21,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Renderer.enabled",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "car.BrakeInput",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 21,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Renderer.enabled",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 21,
                          "UseKind": "Literal",
                          "AssignedTo": "m_Renderer.enabled",
                          "Value": "0f",
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 19
              }
            ],
            "Fields": [
              {
                "Name": "car",
                "Type": "CarController",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 8
              },
              {
                "Name": "m_Renderer",
                "Type": "Renderer",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "CarAIControl",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarAIControl.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CarAIControl",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarAIControl.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Car.CarController>()",
                    "ReturnType": "CarController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 53
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 58
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_CarController",
                      "Type": "UnityStandardAssets.Vehicles.Car.CarController",
                      "Assignment": "GetComponent<CarController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 52,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_RandomPerlin",
                      "Type": "float",
                      "Assignment": "Random.value*100",
                      "Kind": "Assignment",
                      "AssignmentLine": 55,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 57,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CarController>()",
                      "Type": "UnityStandardAssets.Vehicles.Car.CarController",
                      "Kind": "Use",
                      "UseLine": 52,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CarController",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Random.value*100",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 55,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_RandomPerlin",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Random.value",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 55,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_RandomPerlin",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 55,
                          "UseKind": "Literal",
                          "AssignedTo": "m_RandomPerlin",
                          "Value": "100",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 57,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 50
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarAIControl.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.Move(float, float, float, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 130,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-1f",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 68
                  },
                  {
                    "Name": "Angle",
                    "FullName": "UnityEngine.Vector3.Angle(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_Target.forward",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "fwd",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 88
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CautiousMaxAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Mathf.Max(spinningAngle,\r\n                                                                                     approachingCornerAngle)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 94
                  },
                  {
                    "Name": "Max",
                    "FullName": "UnityEngine.Mathf.Max(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "spinningAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "approachingCornerAngle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 95
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CarController.MaxSpeed",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CarController.MaxSpeed*m_CautiousSpeedFactor",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "cautiousnessRequired",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 97
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CautiousMaxDistance",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "delta.magnitude",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 109
                  },
                  {
                    "Name": "Max",
                    "FullName": "UnityEngine.Mathf.Max(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Mathf.InverseLerp(0, m_CautiousMaxAngle, spinningAngle)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "distanceCautiousFactor",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 115
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CautiousMaxAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "spinningAngle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 116
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CarController.MaxSpeed",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CarController.MaxSpeed*m_CautiousSpeedFactor",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "cautiousnessRequired",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 117
                  },
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Time.time*m_LateralWanderSpeed",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_RandomPerlin",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 145
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "(desiredSpeed - m_CarController.CurrentSpeed)*accelBrakeSensitivity",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 155
                  },
                  {
                    "Name": "PerlinNoise",
                    "FullName": "UnityEngine.Mathf.PerlinNoise(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "Time.time*m_AccelWanderSpeed",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "m_RandomPerlin",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 160
                  },
                  {
                    "Name": "InverseTransformPoint",
                    "FullName": "UnityEngine.Transform.InverseTransformPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "offsetTargetPos",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 163
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "localTarget.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "localTarget.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 166
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "targetAngle*m_SteerSensitivity",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 169
                  },
                  {
                    "Name": "Sign",
                    "FullName": "UnityEngine.Mathf.Sign(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CarController.CurrentSpeed",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 169
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.Move(float, float, float, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 130,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "steer",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "accel",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "accel",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 172
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "fwd",
                      "Type": "Vector3",
                      "Assignment": "transform.forward",
                      "Kind": "Definition",
                      "DefinitionLine": 71
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredSpeed",
                      "Type": "float",
                      "Assignment": "m_CarController.MaxSpeed",
                      "Kind": "Definition",
                      "DefinitionLine": 77
                    }
                  },
                  {
                    "Variable": {
                      "Name": "approachingCornerAngle",
                      "Type": "float",
                      "Assignment": "Vector3.Angle(m_Target.forward, fwd)",
                      "Kind": "Definition",
                      "DefinitionLine": 87
                    }
                  },
                  {
                    "Variable": {
                      "Name": "spinningAngle",
                      "Type": "float",
                      "Assignment": "m_Rigidbody.angularVelocity.magnitude*m_CautiousAngularVelocityFactor",
                      "Kind": "Definition",
                      "DefinitionLine": 90
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cautiousnessRequired",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(0, m_CautiousMaxAngle,\r\n                                                                           Mathf.Max(spinningAngle,\r\n                                                                                     approachingCornerAngle))",
                      "Kind": "Definition",
                      "DefinitionLine": 93
                    }
                  },
                  {
                    "Variable": {
                      "Name": "delta",
                      "Type": "Vector3",
                      "Assignment": "m_Target.position - transform.position",
                      "Kind": "Definition",
                      "DefinitionLine": 107
                    }
                  },
                  {
                    "Variable": {
                      "Name": "distanceCautiousFactor",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(m_CautiousMaxDistance, 0, delta.magnitude)",
                      "Kind": "Definition",
                      "DefinitionLine": 108
                    }
                  },
                  {
                    "Variable": {
                      "Name": "spinningAngle",
                      "Type": "float",
                      "Assignment": "m_Rigidbody.angularVelocity.magnitude*m_CautiousAngularVelocityFactor",
                      "Kind": "Definition",
                      "DefinitionLine": 111
                    }
                  },
                  {
                    "Variable": {
                      "Name": "cautiousnessRequired",
                      "Type": "float",
                      "Assignment": "Mathf.Max(\r\n                                Mathf.InverseLerp(0, m_CautiousMaxAngle, spinningAngle), distanceCautiousFactor)",
                      "Kind": "Definition",
                      "DefinitionLine": 114
                    }
                  },
                  {
                    "Variable": {
                      "Name": "offsetTargetPos",
                      "Type": "Vector3",
                      "Assignment": "m_Target.position",
                      "Kind": "Definition",
                      "DefinitionLine": 128
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accelBrakeSensitivity",
                      "Type": "float",
                      "Assignment": "(desiredSpeed < m_CarController.CurrentSpeed)\r\n                                                  ? m_BrakeSensitivity\r\n                                                  : m_AccelSensitivity",
                      "Kind": "Definition",
                      "DefinitionLine": 149
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accel",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp((desiredSpeed - m_CarController.CurrentSpeed)*accelBrakeSensitivity, -1, 1)",
                      "Kind": "Definition",
                      "DefinitionLine": 154
                    }
                  },
                  {
                    "Variable": {
                      "Name": "localTarget",
                      "Type": "Vector3",
                      "Assignment": "transform.InverseTransformPoint(offsetTargetPos)",
                      "Kind": "Definition",
                      "DefinitionLine": 162
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetAngle",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(localTarget.x, localTarget.z)*Mathf.Rad2Deg",
                      "Kind": "Definition",
                      "DefinitionLine": 165
                    }
                  },
                  {
                    "Variable": {
                      "Name": "steer",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(targetAngle*m_SteerSensitivity, -1, 1)*Mathf.Sign(m_CarController.CurrentSpeed)",
                      "Kind": "Definition",
                      "DefinitionLine": 168
                    }
                  },
                  {
                    "Variable": {
                      "Name": "fwd",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Rigidbody.velocity",
                      "Kind": "Assignment",
                      "AssignmentLine": 74,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredSpeed",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(m_CarController.MaxSpeed, m_CarController.MaxSpeed*m_CautiousSpeedFactor,\r\n                                                      cautiousnessRequired)",
                      "Kind": "Assignment",
                      "AssignmentLine": 96,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredSpeed",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(m_CarController.MaxSpeed, m_CarController.MaxSpeed*m_CautiousSpeedFactor,\r\n                                                      cautiousnessRequired)",
                      "Kind": "Assignment",
                      "AssignmentLine": 116,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "desiredSpeed",
                      "Type": "float",
                      "Assignment": "m_AvoidOtherCarSlowdown",
                      "Kind": "Assignment",
                      "AssignmentLine": 134,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "offsetTargetPos",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Target.right*m_AvoidPathOffset",
                      "Kind": "Assignment",
                      "AssignmentLine": 137,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "offsetTargetPos",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Target.right*\r\n                                       (Mathf.PerlinNoise(Time.time*m_LateralWanderSpeed, m_RandomPerlin)*2 - 1)*\r\n                                       m_LateralWanderDistance",
                      "Kind": "Assignment",
                      "AssignmentLine": 143,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accel",
                      "Type": "float",
                      "Assignment": "(1 - m_AccelWanderAmount) +\r\n                         (Mathf.PerlinNoise(Time.time*m_AccelWanderSpeed, m_RandomPerlin)*m_AccelWanderAmount)",
                      "Kind": "Assignment",
                      "AssignmentLine": 158,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Driving",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 176,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 74,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "fwd",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(m_CarController.MaxSpeed, m_CarController.MaxSpeed*m_CautiousSpeedFactor,\r\n                                                      cautiousnessRequired)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 96,
                      "UseKind": "Invocation",
                      "AssignedTo": "desiredSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(m_CarController.MaxSpeed, m_CarController.MaxSpeed*m_CautiousSpeedFactor,\r\n                                                      cautiousnessRequired)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 116,
                      "UseKind": "Invocation",
                      "AssignedTo": "desiredSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AvoidOtherCarSlowdown",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 134,
                      "UseKind": "FieldReference",
                      "AssignedTo": "desiredSpeed",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Target.right*m_AvoidPathOffset",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 137,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "offsetTargetPos",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Target.right",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 137,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "offsetTargetPos",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_AvoidPathOffset",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 137,
                          "UseKind": "FieldReference",
                          "AssignedTo": "offsetTargetPos",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Target.right*\r\n                                       (Mathf.PerlinNoise(Time.time*m_LateralWanderSpeed, m_RandomPerlin)*2 - 1)*\r\n                                       m_LateralWanderDistance",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 143,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "offsetTargetPos",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Target.right*\r\n                                       (Mathf.PerlinNoise(Time.time*m_LateralWanderSpeed, m_RandomPerlin)*2 - 1)",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 143,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "offsetTargetPos",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_Target.right",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 143,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "offsetTargetPos",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "Mathf.PerlinNoise(Time.time*m_LateralWanderSpeed, m_RandomPerlin)*2 - 1",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 143,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "offsetTargetPos",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": "Mathf.PerlinNoise(Time.time*m_LateralWanderSpeed, m_RandomPerlin)*2",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 143,
                                  "UseKind": "BinaryOperator",
                                  "AssignedTo": "offsetTargetPos",
                                  "Value": null,
                                  "VariablesList": [
                                    {
                                      "Name": "Mathf.PerlinNoise(Time.time*m_LateralWanderSpeed, m_RandomPerlin)",
                                      "Type": "float",
                                      "Kind": "Use",
                                      "UseLine": 143,
                                      "UseKind": "Invocation",
                                      "AssignedTo": "offsetTargetPos",
                                      "Value": null,
                                      "VariablesList": []
                                    },
                                    {
                                      "Name": null,
                                      "Type": "int",
                                      "Kind": "Use",
                                      "UseLine": 143,
                                      "UseKind": "Literal",
                                      "AssignedTo": "offsetTargetPos",
                                      "Value": "2",
                                      "VariablesList": []
                                    }
                                  ]
                                },
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 143,
                                  "UseKind": "Literal",
                                  "AssignedTo": "offsetTargetPos",
                                  "Value": "1",
                                  "VariablesList": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "m_LateralWanderDistance",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 143,
                          "UseKind": "FieldReference",
                          "AssignedTo": "offsetTargetPos",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(1 - m_AccelWanderAmount) +\r\n                         (Mathf.PerlinNoise(Time.time*m_AccelWanderSpeed, m_RandomPerlin)*m_AccelWanderAmount)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 158,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "accel",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "1 - m_AccelWanderAmount",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 158,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "accel",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": null,
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 158,
                              "UseKind": "Literal",
                              "AssignedTo": "accel",
                              "Value": "1",
                              "VariablesList": []
                            },
                            {
                              "Name": "m_AccelWanderAmount",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 158,
                              "UseKind": "FieldReference",
                              "AssignedTo": "accel",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "Mathf.PerlinNoise(Time.time*m_AccelWanderSpeed, m_RandomPerlin)*m_AccelWanderAmount",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 158,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "accel",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "Mathf.PerlinNoise(Time.time*m_AccelWanderSpeed, m_RandomPerlin)",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 158,
                              "UseKind": "Invocation",
                              "AssignedTo": "accel",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_AccelWanderAmount",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 158,
                              "UseKind": "FieldReference",
                              "AssignedTo": "accel",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 176,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Driving",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 62
              },
              {
                "Name": "OnCollisionStay",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarAIControl.OnCollisionStay(UnityEngine.Collision)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "col",
                    "Type": "Collision",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Car.CarAIControl>()",
                    "ReturnType": "CarAIControl",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 188
                  },
                  {
                    "Name": "Angle",
                    "FullName": "UnityEngine.Vector3.Angle(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.forward",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "otherAI.transform.position - transform.position",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 195
                  },
                  {
                    "Name": "InverseTransformPoint",
                    "FullName": "UnityEngine.Transform.InverseTransformPoint(UnityEngine.Vector3)",
                    "ReturnType": "Vector3",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "otherAI.transform.position",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 208
                  },
                  {
                    "Name": "Atan2",
                    "FullName": "UnityEngine.Mathf.Atan2(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "otherCarLocalDelta.x",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "otherCarLocalDelta.z",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 209
                  },
                  {
                    "Name": "Sign",
                    "FullName": "UnityEngine.Mathf.Sign(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "otherCarAngle",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 210
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "otherAI",
                      "Type": "var",
                      "Assignment": "col.rigidbody.GetComponent<CarAIControl>()",
                      "Kind": "Definition",
                      "DefinitionLine": 187
                    }
                  },
                  {
                    "Variable": {
                      "Name": "otherCarLocalDelta",
                      "Type": "var",
                      "Assignment": "transform.InverseTransformPoint(otherAI.transform.position)",
                      "Kind": "Definition",
                      "DefinitionLine": 207
                    }
                  },
                  {
                    "Variable": {
                      "Name": "otherCarAngle",
                      "Type": "float",
                      "Assignment": "Mathf.Atan2(otherCarLocalDelta.x, otherCarLocalDelta.z)",
                      "Kind": "Definition",
                      "DefinitionLine": 208
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AvoidOtherCarTime",
                      "Type": "float",
                      "Assignment": "Time.time + 1",
                      "Kind": "Assignment",
                      "AssignmentLine": 191,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AvoidOtherCarSlowdown",
                      "Type": "float",
                      "Assignment": "0.5f",
                      "Kind": "Assignment",
                      "AssignmentLine": 197,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AvoidOtherCarSlowdown",
                      "Type": "float",
                      "Assignment": "1",
                      "Kind": "Assignment",
                      "AssignmentLine": 202,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AvoidPathOffset",
                      "Type": "float",
                      "Assignment": "m_LateralWanderDistance*-Mathf.Sign(otherCarAngle)",
                      "Kind": "Assignment",
                      "AssignmentLine": 209,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.time + 1",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 191,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_AvoidOtherCarTime",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "Time.time",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 191,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_AvoidOtherCarTime",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 191,
                          "UseKind": "Literal",
                          "AssignedTo": "m_AvoidOtherCarTime",
                          "Value": "1",
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 197,
                      "UseKind": "Literal",
                      "AssignedTo": "m_AvoidOtherCarSlowdown",
                      "Value": "0.5f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 202,
                      "UseKind": "Literal",
                      "AssignedTo": "m_AvoidOtherCarSlowdown",
                      "Value": "1",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LateralWanderDistance*-Mathf.Sign(otherCarAngle)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 209,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_AvoidPathOffset",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_LateralWanderDistance",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 209,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_AvoidPathOffset",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "-Mathf.Sign(otherCarAngle)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 209,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "m_AvoidPathOffset",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 183
              },
              {
                "Name": "SetTarget",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarAIControl.SetTarget(UnityEngine.Transform)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "target",
                    "Type": "Transform",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Target",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "target",
                      "Kind": "Assignment",
                      "AssignmentLine": 217,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Driving",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 218,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "target",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 217,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "m_Target",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 218,
                      "UseKind": "Literal",
                      "AssignedTo": "m_Driving",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 216
              }
            ],
            "Fields": [
              {
                "Name": "m_CautiousSpeedFactor",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.05f",
                "Attributes": [
                  "[SerializeField]",
                  "[Range(0, 1)]"
                ],
                "Line": 25
              },
              {
                "Name": "m_CautiousMaxAngle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "50f",
                "Attributes": [
                  "[SerializeField]",
                  "[Range(0, 180)]"
                ],
                "Line": 26
              },
              {
                "Name": "m_CautiousMaxDistance",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "100f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 27
              },
              {
                "Name": "m_CautiousAngularVelocityFactor",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "30f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 28
              },
              {
                "Name": "m_SteerSensitivity",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.05f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 29
              },
              {
                "Name": "m_AccelSensitivity",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.04f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 30
              },
              {
                "Name": "m_BrakeSensitivity",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 31
              },
              {
                "Name": "m_LateralWanderDistance",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "3f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 32
              },
              {
                "Name": "m_LateralWanderSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 33
              },
              {
                "Name": "m_AccelWanderAmount",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.1f",
                "Attributes": [
                  "[SerializeField]",
                  "[Range(0, 1)]"
                ],
                "Line": 34
              },
              {
                "Name": "m_AccelWanderSpeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "0.1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 35
              },
              {
                "Name": "m_BrakeCondition",
                "Type": "BrakeCondition",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "BrakeCondition.TargetDistance",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 36
              },
              {
                "Name": "m_Driving",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 37
              },
              {
                "Name": "m_Target",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 38
              },
              {
                "Name": "m_StopWhenTargetReached",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 39
              },
              {
                "Name": "m_ReachTargetThreshold",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "2",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 40
              },
              {
                "Name": "m_RandomPerlin",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 42
              },
              {
                "Name": "m_CarController",
                "Type": "CarController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 43
              },
              {
                "Name": "m_AvoidOtherCarTime",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 44
              },
              {
                "Name": "m_AvoidOtherCarSlowdown",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 45
              },
              {
                "Name": "m_AvoidPathOffset",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 46
              },
              {
                "Name": "m_Rigidbody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 47
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.Random",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "CarAudio",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarAudio.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CarAudio",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "StartSound",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.StartSound()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Car.CarController>()",
                    "ReturnType": "CarController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 56
                  },
                  {
                    "Name": "SetUpEngineAudioSource",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.SetUpEngineAudioSource(UnityEngine.AudioClip)",
                    "ReturnType": "AudioSource",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarAudio.cs",
                    "DefinitionLine": 160,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "highAccelClip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 59
                  },
                  {
                    "Name": "SetUpEngineAudioSource",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.SetUpEngineAudioSource(UnityEngine.AudioClip)",
                    "ReturnType": "AudioSource",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarAudio.cs",
                    "DefinitionLine": 160,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "lowAccelClip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 64
                  },
                  {
                    "Name": "SetUpEngineAudioSource",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.SetUpEngineAudioSource(UnityEngine.AudioClip)",
                    "ReturnType": "AudioSource",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarAudio.cs",
                    "DefinitionLine": 160,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "lowDecelClip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 65
                  },
                  {
                    "Name": "SetUpEngineAudioSource",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.SetUpEngineAudioSource(UnityEngine.AudioClip)",
                    "ReturnType": "AudioSource",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarAudio.cs",
                    "DefinitionLine": 160,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "highDecelClip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 66
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_CarController",
                      "Type": "UnityStandardAssets.Vehicles.Car.CarController",
                      "Assignment": "GetComponent<CarController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 55,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighAccel",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "SetUpEngineAudioSource(highAccelClip)",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LowAccel",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "SetUpEngineAudioSource(lowAccelClip)",
                      "Kind": "Assignment",
                      "AssignmentLine": 63,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LowDecel",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "SetUpEngineAudioSource(lowDecelClip)",
                      "Kind": "Assignment",
                      "AssignmentLine": 64,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighDecel",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "SetUpEngineAudioSource(highDecelClip)",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_StartedSound",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 69,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CarController>()",
                      "Type": "UnityStandardAssets.Vehicles.Car.CarController",
                      "Kind": "Use",
                      "UseLine": 55,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_CarController",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "SetUpEngineAudioSource(highAccelClip)",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_HighAccel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "SetUpEngineAudioSource(lowAccelClip)",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 63,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_LowAccel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "SetUpEngineAudioSource(lowDecelClip)",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 64,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_LowDecel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "SetUpEngineAudioSource(highDecelClip)",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_HighDecel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 69,
                      "UseKind": "Literal",
                      "AssignedTo": "m_StartedSound",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 53
              },
              {
                "Name": "StopSound",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.StopSound()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponents",
                    "FullName": "UnityEngine.Component.GetComponents<UnityEngine.AudioSource>()",
                    "ReturnType": "",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 77
                  },
                  {
                    "Name": "Destroy",
                    "FullName": "UnityEngine.Object.Destroy(UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "source",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 79
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_StartedSound",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 81,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 81,
                      "UseKind": "Literal",
                      "AssignedTo": "m_StartedSound",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 74
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "StopSound",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.StopSound()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarAudio.cs",
                    "DefinitionLine": 74,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 95
                  },
                  {
                    "Name": "StartSound",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.StartSound()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarAudio.cs",
                    "DefinitionLine": 53,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 101
                  },
                  {
                    "Name": "ULerp",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.ULerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarAudio.cs",
                    "DefinitionLine": 179,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "lowPitchMin",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "lowPitchMax",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CarController.Revs",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 107
                  },
                  {
                    "Name": "Min",
                    "FullName": "UnityEngine.Mathf.Min(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "lowPitchMax",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "pitch",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 110
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_CarController.AccelInput",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 130
                  },
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0.2f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0.8f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_CarController.Revs",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 134
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "camDist",
                      "Type": "float",
                      "Assignment": "(Camera.main.transform.position - transform.position).sqrMagnitude",
                      "Kind": "Definition",
                      "DefinitionLine": 89
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch",
                      "Type": "float",
                      "Assignment": "ULerp(lowPitchMin, lowPitchMax, m_CarController.Revs)",
                      "Kind": "Definition",
                      "DefinitionLine": 106
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accFade",
                      "Type": "float",
                      "Assignment": "Mathf.Abs(m_CarController.AccelInput)",
                      "Kind": "Definition",
                      "DefinitionLine": 129
                    }
                  },
                  {
                    "Variable": {
                      "Name": "decFade",
                      "Type": "float",
                      "Assignment": "1 - accFade",
                      "Kind": "Definition",
                      "DefinitionLine": 130
                    }
                  },
                  {
                    "Variable": {
                      "Name": "highFade",
                      "Type": "float",
                      "Assignment": "Mathf.InverseLerp(0.2f, 0.8f, m_CarController.Revs)",
                      "Kind": "Definition",
                      "DefinitionLine": 133
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lowFade",
                      "Type": "float",
                      "Assignment": "1 - highFade",
                      "Kind": "Definition",
                      "DefinitionLine": 134
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch",
                      "Type": "float",
                      "Assignment": "Mathf.Min(lowPitchMax, pitch)",
                      "Kind": "Assignment",
                      "AssignmentLine": 109,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighAccel.pitch",
                      "Type": "float",
                      "Assignment": "pitch*pitchMultiplier*highPitchMultiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 114,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighAccel.dopplerLevel",
                      "Type": "float",
                      "Assignment": "useDoppler ? dopplerLevel : 0",
                      "Kind": "Assignment",
                      "AssignmentLine": 115,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighAccel.volume",
                      "Type": "float",
                      "Assignment": "1",
                      "Kind": "Assignment",
                      "AssignmentLine": 116,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LowAccel.pitch",
                      "Type": "float",
                      "Assignment": "pitch*pitchMultiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 123,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LowDecel.pitch",
                      "Type": "float",
                      "Assignment": "pitch*pitchMultiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 124,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighAccel.pitch",
                      "Type": "float",
                      "Assignment": "pitch*highPitchMultiplier*pitchMultiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 125,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighDecel.pitch",
                      "Type": "float",
                      "Assignment": "pitch*highPitchMultiplier*pitchMultiplier",
                      "Kind": "Assignment",
                      "AssignmentLine": 126,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "highFade",
                      "Type": "float",
                      "Assignment": "1 - ((1 - highFade)*(1 - highFade))",
                      "Kind": "Assignment",
                      "AssignmentLine": 137,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lowFade",
                      "Type": "float",
                      "Assignment": "1 - ((1 - lowFade)*(1 - lowFade))",
                      "Kind": "Assignment",
                      "AssignmentLine": 138,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accFade",
                      "Type": "float",
                      "Assignment": "1 - ((1 - accFade)*(1 - accFade))",
                      "Kind": "Assignment",
                      "AssignmentLine": 139,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "decFade",
                      "Type": "float",
                      "Assignment": "1 - ((1 - decFade)*(1 - decFade))",
                      "Kind": "Assignment",
                      "AssignmentLine": 140,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LowAccel.volume",
                      "Type": "float",
                      "Assignment": "lowFade*accFade",
                      "Kind": "Assignment",
                      "AssignmentLine": 143,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LowDecel.volume",
                      "Type": "float",
                      "Assignment": "lowFade*decFade",
                      "Kind": "Assignment",
                      "AssignmentLine": 144,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighAccel.volume",
                      "Type": "float",
                      "Assignment": "highFade*accFade",
                      "Kind": "Assignment",
                      "AssignmentLine": 145,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighDecel.volume",
                      "Type": "float",
                      "Assignment": "highFade*decFade",
                      "Kind": "Assignment",
                      "AssignmentLine": 146,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighAccel.dopplerLevel",
                      "Type": "float",
                      "Assignment": "useDoppler ? dopplerLevel : 0",
                      "Kind": "Assignment",
                      "AssignmentLine": 149,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LowAccel.dopplerLevel",
                      "Type": "float",
                      "Assignment": "useDoppler ? dopplerLevel : 0",
                      "Kind": "Assignment",
                      "AssignmentLine": 150,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_HighDecel.dopplerLevel",
                      "Type": "float",
                      "Assignment": "useDoppler ? dopplerLevel : 0",
                      "Kind": "Assignment",
                      "AssignmentLine": 151,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_LowDecel.dopplerLevel",
                      "Type": "float",
                      "Assignment": "useDoppler ? dopplerLevel : 0",
                      "Kind": "Assignment",
                      "AssignmentLine": 152,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Min(lowPitchMax, pitch)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 109,
                      "UseKind": "Invocation",
                      "AssignedTo": "pitch",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch*pitchMultiplier*highPitchMultiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 114,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_HighAccel.pitch",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "pitch*pitchMultiplier",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 114,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_HighAccel.pitch",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "pitch",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 114,
                              "UseKind": "LocalReference",
                              "AssignedTo": "m_HighAccel.pitch",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "pitchMultiplier",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 114,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_HighAccel.pitch",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "highPitchMultiplier",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 114,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_HighAccel.pitch",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "useDoppler ? dopplerLevel : 0",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 115,
                      "UseKind": "Conditional",
                      "AssignedTo": "m_HighAccel.dopplerLevel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 116,
                      "UseKind": "Literal",
                      "AssignedTo": "m_HighAccel.volume",
                      "Value": "1",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch*pitchMultiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 123,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_LowAccel.pitch",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "pitch",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 123,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_LowAccel.pitch",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "pitchMultiplier",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 123,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_LowAccel.pitch",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch*pitchMultiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 124,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_LowDecel.pitch",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "pitch",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 124,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_LowDecel.pitch",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "pitchMultiplier",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 124,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_LowDecel.pitch",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch*highPitchMultiplier*pitchMultiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 125,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_HighAccel.pitch",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "pitch*highPitchMultiplier",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 125,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_HighAccel.pitch",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "pitch",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 125,
                              "UseKind": "LocalReference",
                              "AssignedTo": "m_HighAccel.pitch",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "highPitchMultiplier",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 125,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_HighAccel.pitch",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "pitchMultiplier",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 125,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_HighAccel.pitch",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "pitch*highPitchMultiplier*pitchMultiplier",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 126,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_HighDecel.pitch",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "pitch*highPitchMultiplier",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 126,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_HighDecel.pitch",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "pitch",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 126,
                              "UseKind": "LocalReference",
                              "AssignedTo": "m_HighDecel.pitch",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "highPitchMultiplier",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 126,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_HighDecel.pitch",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "pitchMultiplier",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 126,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_HighDecel.pitch",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "1 - ((1 - highFade)*(1 - highFade))",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 137,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "highFade",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 137,
                          "UseKind": "Literal",
                          "AssignedTo": "highFade",
                          "Value": "1",
                          "VariablesList": []
                        },
                        {
                          "Name": "(1 - highFade)*(1 - highFade)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 137,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "highFade",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "1 - highFade",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 137,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "highFade",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 137,
                                  "UseKind": "Literal",
                                  "AssignedTo": "highFade",
                                  "Value": "1",
                                  "VariablesList": []
                                },
                                {
                                  "Name": "highFade",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 137,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "highFade",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            },
                            {
                              "Name": "1 - highFade",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 137,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "highFade",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 137,
                                  "UseKind": "Literal",
                                  "AssignedTo": "highFade",
                                  "Value": "1",
                                  "VariablesList": []
                                },
                                {
                                  "Name": "highFade",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 137,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "highFade",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "1 - ((1 - lowFade)*(1 - lowFade))",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 138,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "lowFade",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 138,
                          "UseKind": "Literal",
                          "AssignedTo": "lowFade",
                          "Value": "1",
                          "VariablesList": []
                        },
                        {
                          "Name": "(1 - lowFade)*(1 - lowFade)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 138,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "lowFade",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "1 - lowFade",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 138,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "lowFade",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 138,
                                  "UseKind": "Literal",
                                  "AssignedTo": "lowFade",
                                  "Value": "1",
                                  "VariablesList": []
                                },
                                {
                                  "Name": "lowFade",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 138,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "lowFade",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            },
                            {
                              "Name": "1 - lowFade",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 138,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "lowFade",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 138,
                                  "UseKind": "Literal",
                                  "AssignedTo": "lowFade",
                                  "Value": "1",
                                  "VariablesList": []
                                },
                                {
                                  "Name": "lowFade",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 138,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "lowFade",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "1 - ((1 - accFade)*(1 - accFade))",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 139,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "accFade",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 139,
                          "UseKind": "Literal",
                          "AssignedTo": "accFade",
                          "Value": "1",
                          "VariablesList": []
                        },
                        {
                          "Name": "(1 - accFade)*(1 - accFade)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 139,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "accFade",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "1 - accFade",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 139,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "accFade",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 139,
                                  "UseKind": "Literal",
                                  "AssignedTo": "accFade",
                                  "Value": "1",
                                  "VariablesList": []
                                },
                                {
                                  "Name": "accFade",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 139,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "accFade",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            },
                            {
                              "Name": "1 - accFade",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 139,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "accFade",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 139,
                                  "UseKind": "Literal",
                                  "AssignedTo": "accFade",
                                  "Value": "1",
                                  "VariablesList": []
                                },
                                {
                                  "Name": "accFade",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 139,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "accFade",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "1 - ((1 - decFade)*(1 - decFade))",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 140,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "decFade",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 140,
                          "UseKind": "Literal",
                          "AssignedTo": "decFade",
                          "Value": "1",
                          "VariablesList": []
                        },
                        {
                          "Name": "(1 - decFade)*(1 - decFade)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 140,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "decFade",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "1 - decFade",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 140,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "decFade",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 140,
                                  "UseKind": "Literal",
                                  "AssignedTo": "decFade",
                                  "Value": "1",
                                  "VariablesList": []
                                },
                                {
                                  "Name": "decFade",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 140,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "decFade",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            },
                            {
                              "Name": "1 - decFade",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 140,
                              "UseKind": "BinaryOperator",
                              "AssignedTo": "decFade",
                              "Value": null,
                              "VariablesList": [
                                {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 140,
                                  "UseKind": "Literal",
                                  "AssignedTo": "decFade",
                                  "Value": "1",
                                  "VariablesList": []
                                },
                                {
                                  "Name": "decFade",
                                  "Type": "float",
                                  "Kind": "Use",
                                  "UseLine": 140,
                                  "UseKind": "LocalReference",
                                  "AssignedTo": "decFade",
                                  "Value": null,
                                  "VariablesList": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lowFade*accFade",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 143,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_LowAccel.volume",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "lowFade",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 143,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_LowAccel.volume",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "accFade",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 143,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_LowAccel.volume",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "lowFade*decFade",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 144,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_LowDecel.volume",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "lowFade",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 144,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_LowDecel.volume",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "decFade",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 144,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_LowDecel.volume",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "highFade*accFade",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 145,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_HighAccel.volume",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "highFade",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 145,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_HighAccel.volume",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "accFade",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 145,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_HighAccel.volume",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "highFade*decFade",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 146,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_HighDecel.volume",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "highFade",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 146,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_HighDecel.volume",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "decFade",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 146,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_HighDecel.volume",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "useDoppler ? dopplerLevel : 0",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 149,
                      "UseKind": "Conditional",
                      "AssignedTo": "m_HighAccel.dopplerLevel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "useDoppler ? dopplerLevel : 0",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 150,
                      "UseKind": "Conditional",
                      "AssignedTo": "m_LowAccel.dopplerLevel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "useDoppler ? dopplerLevel : 0",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 151,
                      "UseKind": "Conditional",
                      "AssignedTo": "m_HighDecel.dopplerLevel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "useDoppler ? dopplerLevel : 0",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 152,
                      "UseKind": "Conditional",
                      "AssignedTo": "m_LowDecel.dopplerLevel",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 87
              },
              {
                "Name": "SetUpEngineAudioSource",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.SetUpEngineAudioSource(UnityEngine.AudioClip)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "AudioSource",
                "Parameters": [
                  {
                    "Name": "clip",
                    "Type": "AudioClip",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "AddComponent",
                    "FullName": "UnityEngine.GameObject.AddComponent<UnityEngine.AudioSource>()",
                    "ReturnType": "AudioSource",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 163
                  },
                  {
                    "Name": "Range",
                    "FullName": "UnityEngine.Random.Range(float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "clip.length",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 169
                  },
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.AudioSource.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 170
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "source",
                      "Type": "AudioSource",
                      "Assignment": "gameObject.AddComponent<AudioSource>()",
                      "Kind": "Definition",
                      "DefinitionLine": 162
                    }
                  },
                  {
                    "Variable": {
                      "Name": "source.clip",
                      "Type": "UnityEngine.AudioClip",
                      "Assignment": "clip",
                      "Kind": "Assignment",
                      "AssignmentLine": 163,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "source.volume",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 164,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "source.loop",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 165,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "source.time",
                      "Type": "float",
                      "Assignment": "Random.Range(0f, clip.length)",
                      "Kind": "Assignment",
                      "AssignmentLine": 168,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "source.minDistance",
                      "Type": "float",
                      "Assignment": "5",
                      "Kind": "Assignment",
                      "AssignmentLine": 170,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "source.maxDistance",
                      "Type": "float",
                      "Assignment": "maxRolloffDistance",
                      "Kind": "Assignment",
                      "AssignmentLine": 171,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "source.dopplerLevel",
                      "Type": "float",
                      "Assignment": "0",
                      "Kind": "Assignment",
                      "AssignmentLine": 172,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "clip",
                      "Type": "UnityEngine.AudioClip",
                      "Kind": "Use",
                      "UseLine": 163,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "source.clip",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 164,
                      "UseKind": "Literal",
                      "AssignedTo": "source.volume",
                      "Value": "0",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 165,
                      "UseKind": "Literal",
                      "AssignedTo": "source.loop",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Random.Range(0f, clip.length)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 168,
                      "UseKind": "Invocation",
                      "AssignedTo": "source.time",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 170,
                      "UseKind": "Literal",
                      "AssignedTo": "source.minDistance",
                      "Value": "5",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "maxRolloffDistance",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 171,
                      "UseKind": "FieldReference",
                      "AssignedTo": "source.maxDistance",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 172,
                      "UseKind": "Literal",
                      "AssignedTo": "source.dopplerLevel",
                      "Value": "0",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 160
              },
              {
                "Name": "ULerp",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarAudio.ULerp(float, float, float)",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "from",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "to",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "value",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 179
              }
            ],
            "Fields": [
              {
                "Name": "engineSoundStyle",
                "Type": "EngineAudioOptions",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "EngineAudioOptions.FourChannel",
                "Attributes": [],
                "Line": 32
              },
              {
                "Name": "lowAccelClip",
                "Type": "AudioClip",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 33
              },
              {
                "Name": "lowDecelClip",
                "Type": "AudioClip",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 34
              },
              {
                "Name": "highAccelClip",
                "Type": "AudioClip",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 35
              },
              {
                "Name": "highDecelClip",
                "Type": "AudioClip",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 36
              },
              {
                "Name": "pitchMultiplier",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 37
              },
              {
                "Name": "lowPitchMin",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1f",
                "Attributes": [],
                "Line": 38
              },
              {
                "Name": "lowPitchMax",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "6f",
                "Attributes": [],
                "Line": 39
              },
              {
                "Name": "highPitchMultiplier",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "0.25f",
                "Attributes": [],
                "Line": 40
              },
              {
                "Name": "maxRolloffDistance",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "500",
                "Attributes": [],
                "Line": 41
              },
              {
                "Name": "dopplerLevel",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "1",
                "Attributes": [],
                "Line": 42
              },
              {
                "Name": "useDoppler",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Assignment": "true",
                "Attributes": [],
                "Line": 43
              },
              {
                "Name": "m_LowAccel",
                "Type": "AudioSource",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 45
              },
              {
                "Name": "m_LowDecel",
                "Type": "AudioSource",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 46
              },
              {
                "Name": "m_HighAccel",
                "Type": "AudioSource",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 47
              },
              {
                "Name": "m_HighDecel",
                "Type": "AudioSource",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 48
              },
              {
                "Name": "m_StartedSound",
                "Type": "bool",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 49
              },
              {
                "Name": "m_CarController",
                "Type": "CarController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 50
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityEngine.Random",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "CarController",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CarController",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "Skidding",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 51
              },
              {
                "Name": "BrakeInput",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 52
              },
              {
                "Name": "CurrentSteerAngle",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 53
              },
              {
                "Name": "CurrentSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 54
              },
              {
                "Name": "MaxSpeed",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 55
              },
              {
                "Name": "Revs",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 56
              },
              {
                "Name": "AccelInput",
                "Type": "float",
                "Modifiers": [
                  "public"
                ],
                "Line": 57
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 71
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 62
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelMeshLocalRotations",
                      "Type": "UnityEngine.Quaternion[]",
                      "Assignment": "new Quaternion[4]",
                      "Kind": "Assignment",
                      "AssignmentLine": 61,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelMeshLocalRotations[i]",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_WheelMeshes[i].transform.localRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 64,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[0].attachedRigidbody.centerOfMass",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_CentreOfMassOffset",
                      "Kind": "Assignment",
                      "AssignmentLine": 66,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_MaxHandbrakeTorque",
                      "Type": "float",
                      "Assignment": "float.MaxValue",
                      "Kind": "Assignment",
                      "AssignmentLine": 68,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 70,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentTorque",
                      "Type": "float",
                      "Assignment": "m_FullTorqueOverAllWheels - (m_TractionControl*m_FullTorqueOverAllWheels)",
                      "Kind": "Assignment",
                      "AssignmentLine": 71,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new Quaternion[4]",
                      "Type": "UnityEngine.Quaternion[]",
                      "Kind": "Use",
                      "UseLine": 61,
                      "UseKind": "ArrayCreation",
                      "AssignedTo": "m_WheelMeshLocalRotations",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelMeshes[i].transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 64,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_WheelMeshLocalRotations[i]",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CentreOfMassOffset",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 66,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_WheelColliders[0].attachedRigidbody.centerOfMass",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "float.MaxValue",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 68,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_MaxHandbrakeTorque",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 70,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FullTorqueOverAllWheels - (m_TractionControl*m_FullTorqueOverAllWheels)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 71,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_CurrentTorque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_FullTorqueOverAllWheels",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 71,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_CurrentTorque",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_TractionControl*m_FullTorqueOverAllWheels",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 71,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_CurrentTorque",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_TractionControl",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 71,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_CurrentTorque",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_FullTorqueOverAllWheels",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 71,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_CurrentTorque",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 60
              },
              {
                "Name": "GearChanging",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.GearChanging()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "CurrentSpeed/MaxSpeed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 78
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "f",
                      "Type": "float",
                      "Assignment": "Mathf.Abs(CurrentSpeed/MaxSpeed)",
                      "Kind": "Definition",
                      "DefinitionLine": 77
                    }
                  },
                  {
                    "Variable": {
                      "Name": "upgearlimit",
                      "Type": "float",
                      "Assignment": "(1/(float) NoOfGears)*(m_GearNum + 1)",
                      "Kind": "Definition",
                      "DefinitionLine": 78
                    }
                  },
                  {
                    "Variable": {
                      "Name": "downgearlimit",
                      "Type": "float",
                      "Assignment": "(1/(float) NoOfGears)*m_GearNum",
                      "Kind": "Definition",
                      "DefinitionLine": 79
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 76
              },
              {
                "Name": "CurveFactor",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CurveFactor(float)",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "factor",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 95
              },
              {
                "Name": "ULerp",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.ULerp(float, float, float)",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "ReturnType": "float",
                "Parameters": [
                  {
                    "Name": "from",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "to",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "value",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 102
              },
              {
                "Name": "CalculateGearFactor",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CalculateGearFactor()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "InverseLerp",
                    "FullName": "UnityEngine.Mathf.InverseLerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "f*m_GearNum",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "f*(m_GearNum + 1)",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "Mathf.Abs(CurrentSpeed/MaxSpeed)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 113
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "CurrentSpeed/MaxSpeed",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 113
                  },
                  {
                    "Name": "Lerp",
                    "FullName": "UnityEngine.Mathf.Lerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_GearFactor",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "targetGearFactor",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Time.deltaTime*5f",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 114
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "f",
                      "Type": "float",
                      "Assignment": "(1/(float) NoOfGears)",
                      "Kind": "Definition",
                      "DefinitionLine": 109
                    }
                  },
                  {
                    "Variable": {
                      "Name": "targetGearFactor",
                      "Type": "var",
                      "Assignment": "Mathf.InverseLerp(f*m_GearNum, f*(m_GearNum + 1), Mathf.Abs(CurrentSpeed/MaxSpeed))",
                      "Kind": "Definition",
                      "DefinitionLine": 112
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_GearFactor",
                      "Type": "float",
                      "Assignment": "Mathf.Lerp(m_GearFactor, targetGearFactor, Time.deltaTime*5f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 113,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Lerp(m_GearFactor, targetGearFactor, Time.deltaTime*5f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 113,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_GearFactor",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 108
              },
              {
                "Name": "CalculateRevs",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CalculateRevs()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "CalculateGearFactor",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CalculateGearFactor()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 108,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 122
                  },
                  {
                    "Name": "ULerp",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.ULerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 102,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "0f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_RevRangeBoundary",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "CurveFactor(gearNumFactor)",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 124
                  },
                  {
                    "Name": "CurveFactor",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CurveFactor(float)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 95,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "gearNumFactor",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 124
                  },
                  {
                    "Name": "ULerp",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.ULerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 102,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "m_RevRangeBoundary",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1f",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "gearNumFactor",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 125
                  },
                  {
                    "Name": "ULerp",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.ULerp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 102,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "revsRangeMin",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "revsRangeMax",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_GearFactor",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 126
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "gearNumFactor",
                      "Type": "var",
                      "Assignment": "m_GearNum/(float) NoOfGears",
                      "Kind": "Definition",
                      "DefinitionLine": 122
                    }
                  },
                  {
                    "Variable": {
                      "Name": "revsRangeMin",
                      "Type": "var",
                      "Assignment": "ULerp(0f, m_RevRangeBoundary, CurveFactor(gearNumFactor))",
                      "Kind": "Definition",
                      "DefinitionLine": 123
                    }
                  },
                  {
                    "Variable": {
                      "Name": "revsRangeMax",
                      "Type": "var",
                      "Assignment": "ULerp(m_RevRangeBoundary, 1f, gearNumFactor)",
                      "Kind": "Definition",
                      "DefinitionLine": 124
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Revs",
                      "Type": "float",
                      "Assignment": "ULerp(revsRangeMin, revsRangeMax, m_GearFactor)",
                      "Kind": "Assignment",
                      "AssignmentLine": 125,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "ULerp(revsRangeMin, revsRangeMax, m_GearFactor)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 125,
                      "UseKind": "Invocation",
                      "AssignedTo": "Revs",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 118
              },
              {
                "Name": "Move",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.Move(float, float, float, float)",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "steering",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "accel",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "footbrake",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "handbrake",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "GetWorldPose",
                    "FullName": "UnityEngine.WheelCollider.GetWorldPose(out UnityEngine.Vector3, out UnityEngine.Quaternion)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.VehiclesModule.dll",
                    "Arguments": [
                      {
                        "Argument": "position",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "quat",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 136
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "steering",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 142
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "accel",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 143
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "footbrake",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "-1",
                        "IsInvocation": true
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 144
                  },
                  {
                    "Name": "Clamp",
                    "FullName": "UnityEngine.Mathf.Clamp(float, float, float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "handbrake",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 145
                  },
                  {
                    "Name": "SteerHelper",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.SteerHelper()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 238,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 153
                  },
                  {
                    "Name": "ApplyDrive",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.ApplyDrive(float, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 197,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "accel",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "footbrake",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 154
                  },
                  {
                    "Name": "CapSpeed",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CapSpeed()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 176,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 155
                  },
                  {
                    "Name": "CalculateRevs",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CalculateRevs()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 118,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 167
                  },
                  {
                    "Name": "GearChanging",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.GearChanging()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 76,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 168
                  },
                  {
                    "Name": "AddDownForce",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AddDownForce()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 260,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 170
                  },
                  {
                    "Name": "CheckForWheelSpin",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CheckForWheelSpin()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 272,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 171
                  },
                  {
                    "Name": "TractionControl",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.TractionControl()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 305,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 172
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 131
                    }
                  },
                  {
                    "Variable": {
                      "Name": "quat",
                      "Type": "Quaternion",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 133
                    }
                  },
                  {
                    "Variable": {
                      "Name": "position",
                      "Type": "Vector3",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 134
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hbTorque",
                      "Type": "var",
                      "Assignment": "handbrake*m_MaxHandbrakeTorque",
                      "Kind": "Definition",
                      "DefinitionLine": 160
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelMeshes[i].transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "position",
                      "Kind": "Assignment",
                      "AssignmentLine": 136,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelMeshes[i].transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "quat",
                      "Kind": "Assignment",
                      "AssignmentLine": 137,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "steering",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(steering, -1, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 141,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "AccelInput",
                      "Type": "float",
                      "Assignment": "accel = Mathf.Clamp(accel, 0, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 142,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accel",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(accel, 0, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 142,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "BrakeInput",
                      "Type": "float",
                      "Assignment": "footbrake = -1*Mathf.Clamp(footbrake, -1, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 143,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "footbrake",
                      "Type": "float",
                      "Assignment": "-1*Mathf.Clamp(footbrake, -1, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 143,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "handbrake",
                      "Type": "float",
                      "Assignment": "Mathf.Clamp(handbrake, 0, 1)",
                      "Kind": "Assignment",
                      "AssignmentLine": 144,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SteerAngle",
                      "Type": "float",
                      "Assignment": "steering*m_MaximumSteerAngle",
                      "Kind": "Assignment",
                      "AssignmentLine": 148,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[0].steerAngle",
                      "Type": "float",
                      "Assignment": "m_SteerAngle",
                      "Kind": "Assignment",
                      "AssignmentLine": 149,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[1].steerAngle",
                      "Type": "float",
                      "Assignment": "m_SteerAngle",
                      "Kind": "Assignment",
                      "AssignmentLine": 150,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[2].brakeTorque",
                      "Type": "float",
                      "Assignment": "hbTorque",
                      "Kind": "Assignment",
                      "AssignmentLine": 161,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[3].brakeTorque",
                      "Type": "float",
                      "Assignment": "hbTorque",
                      "Kind": "Assignment",
                      "AssignmentLine": 162,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "position",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 136,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_WheelMeshes[i].transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "quat",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 137,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_WheelMeshes[i].transform.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(steering, -1, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 141,
                      "UseKind": "Invocation",
                      "AssignedTo": "steering",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accel = Mathf.Clamp(accel, 0, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 142,
                      "UseKind": "SimpleAssignment",
                      "AssignedTo": "AccelInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(accel, 0, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 142,
                      "UseKind": "Invocation",
                      "AssignedTo": "accel",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "footbrake = -1*Mathf.Clamp(footbrake, -1, 0)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 143,
                      "UseKind": "SimpleAssignment",
                      "AssignedTo": "BrakeInput",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-1*Mathf.Clamp(footbrake, -1, 0)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 143,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "footbrake",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "-1",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 143,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "footbrake",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "Mathf.Clamp(footbrake, -1, 0)",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 143,
                          "UseKind": "Invocation",
                          "AssignedTo": "footbrake",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Mathf.Clamp(handbrake, 0, 1)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 144,
                      "UseKind": "Invocation",
                      "AssignedTo": "handbrake",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "steering*m_MaximumSteerAngle",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 148,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_SteerAngle",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "steering",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 148,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "m_SteerAngle",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_MaximumSteerAngle",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 148,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_SteerAngle",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SteerAngle",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 149,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_WheelColliders[0].steerAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SteerAngle",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 150,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_WheelColliders[1].steerAngle",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hbTorque",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 161,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_WheelColliders[2].brakeTorque",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "hbTorque",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 162,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_WheelColliders[3].brakeTorque",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 130
              },
              {
                "Name": "CapSpeed",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CapSpeed()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "speed",
                      "Type": "float",
                      "Assignment": "m_Rigidbody.velocity.magnitude",
                      "Kind": "Definition",
                      "DefinitionLine": 177
                    }
                  },
                  {
                    "Variable": {
                      "Name": "speed",
                      "Type": "float",
                      "Assignment": "2.23693629f",
                      "Kind": "Assignment",
                      "AssignmentLine": 182,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "(m_Topspeed/2.23693629f) * m_Rigidbody.velocity.normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 184,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "speed",
                      "Type": "float",
                      "Assignment": "3.6f",
                      "Kind": "Assignment",
                      "AssignmentLine": 188,
                      "AssignmentKind": "MultiplyAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "(m_Topspeed/3.6f) * m_Rigidbody.velocity.normalized",
                      "Kind": "Assignment",
                      "AssignmentLine": 190,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 182,
                      "UseKind": "Literal",
                      "AssignedTo": "speed",
                      "Value": "2.23693629f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(m_Topspeed/2.23693629f) * m_Rigidbody.velocity.normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 184,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Rigidbody.velocity",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Topspeed/2.23693629f",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 184,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_Rigidbody.velocity",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_Topspeed",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 184,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_Rigidbody.velocity",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": null,
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 184,
                              "UseKind": "Literal",
                              "AssignedTo": "m_Rigidbody.velocity",
                              "Value": "2.23693629f",
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "m_Rigidbody.velocity.normalized",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 184,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Rigidbody.velocity",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 188,
                      "UseKind": "Literal",
                      "AssignedTo": "speed",
                      "Value": "3.6f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "(m_Topspeed/3.6f) * m_Rigidbody.velocity.normalized",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 190,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Rigidbody.velocity",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Topspeed/3.6f",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 190,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "m_Rigidbody.velocity",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_Topspeed",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 190,
                              "UseKind": "FieldReference",
                              "AssignedTo": "m_Rigidbody.velocity",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": null,
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 190,
                              "UseKind": "Literal",
                              "AssignedTo": "m_Rigidbody.velocity",
                              "Value": "3.6f",
                              "VariablesList": []
                            }
                          ]
                        },
                        {
                          "Name": "m_Rigidbody.velocity.normalized",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 190,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Rigidbody.velocity",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 176
              },
              {
                "Name": "ApplyDrive",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.ApplyDrive(float, float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "accel",
                    "Type": "float",
                    "Assignment": null
                  },
                  {
                    "Name": "footbrake",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Angle",
                    "FullName": "UnityEngine.Vector3.Angle(UnityEngine.Vector3, UnityEngine.Vector3)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.forward",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_Rigidbody.velocity",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 225
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "thrustTorque",
                      "Type": "float",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 199
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 204
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 222
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thrustTorque",
                      "Type": "float",
                      "Assignment": "accel * (m_CurrentTorque / 4f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 203,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[i].motorTorque",
                      "Type": "float",
                      "Assignment": "thrustTorque",
                      "Kind": "Assignment",
                      "AssignmentLine": 206,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thrustTorque",
                      "Type": "float",
                      "Assignment": "accel * (m_CurrentTorque / 2f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 211,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[0].motorTorque",
                      "Type": "float",
                      "Assignment": "m_WheelColliders[1].motorTorque = thrustTorque",
                      "Kind": "Assignment",
                      "AssignmentLine": 212,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[1].motorTorque",
                      "Type": "float",
                      "Assignment": "thrustTorque",
                      "Kind": "Assignment",
                      "AssignmentLine": 212,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thrustTorque",
                      "Type": "float",
                      "Assignment": "accel * (m_CurrentTorque / 2f)",
                      "Kind": "Assignment",
                      "AssignmentLine": 216,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[2].motorTorque",
                      "Type": "float",
                      "Assignment": "m_WheelColliders[3].motorTorque = thrustTorque",
                      "Kind": "Assignment",
                      "AssignmentLine": 217,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[3].motorTorque",
                      "Type": "float",
                      "Assignment": "thrustTorque",
                      "Kind": "Assignment",
                      "AssignmentLine": 217,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[i].brakeTorque",
                      "Type": "float",
                      "Assignment": "m_BrakeTorque*footbrake",
                      "Kind": "Assignment",
                      "AssignmentLine": 226,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[i].brakeTorque",
                      "Type": "float",
                      "Assignment": "0f",
                      "Kind": "Assignment",
                      "AssignmentLine": 230,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[i].motorTorque",
                      "Type": "float",
                      "Assignment": "-m_ReverseTorque*footbrake",
                      "Kind": "Assignment",
                      "AssignmentLine": 231,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accel * (m_CurrentTorque / 4f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 203,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "thrustTorque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "accel",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 203,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "thrustTorque",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_CurrentTorque / 4f",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 203,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "thrustTorque",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_CurrentTorque",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 203,
                              "UseKind": "FieldReference",
                              "AssignedTo": "thrustTorque",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": null,
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 203,
                              "UseKind": "Literal",
                              "AssignedTo": "thrustTorque",
                              "Value": "4f",
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thrustTorque",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 206,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_WheelColliders[i].motorTorque",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accel * (m_CurrentTorque / 2f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 211,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "thrustTorque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "accel",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 211,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "thrustTorque",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_CurrentTorque / 2f",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 211,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "thrustTorque",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_CurrentTorque",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 211,
                              "UseKind": "FieldReference",
                              "AssignedTo": "thrustTorque",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": null,
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 211,
                              "UseKind": "Literal",
                              "AssignedTo": "thrustTorque",
                              "Value": "2f",
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[1].motorTorque = thrustTorque",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 212,
                      "UseKind": "SimpleAssignment",
                      "AssignedTo": "m_WheelColliders[0].motorTorque",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thrustTorque",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 212,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_WheelColliders[1].motorTorque",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "accel * (m_CurrentTorque / 2f)",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 216,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "thrustTorque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "accel",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 216,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "thrustTorque",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_CurrentTorque / 2f",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 216,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "thrustTorque",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "m_CurrentTorque",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 216,
                              "UseKind": "FieldReference",
                              "AssignedTo": "thrustTorque",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": null,
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 216,
                              "UseKind": "Literal",
                              "AssignedTo": "thrustTorque",
                              "Value": "2f",
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelColliders[3].motorTorque = thrustTorque",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 217,
                      "UseKind": "SimpleAssignment",
                      "AssignedTo": "m_WheelColliders[2].motorTorque",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "thrustTorque",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 217,
                      "UseKind": "LocalReference",
                      "AssignedTo": "m_WheelColliders[3].motorTorque",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_BrakeTorque*footbrake",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 226,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_WheelColliders[i].brakeTorque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_BrakeTorque",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 226,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_WheelColliders[i].brakeTorque",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "footbrake",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 226,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "m_WheelColliders[i].brakeTorque",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 230,
                      "UseKind": "Literal",
                      "AssignedTo": "m_WheelColliders[i].brakeTorque",
                      "Value": "0f",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-m_ReverseTorque*footbrake",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 231,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_WheelColliders[i].motorTorque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "-m_ReverseTorque",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 231,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "m_WheelColliders[i].motorTorque",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "footbrake",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 231,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "m_WheelColliders[i].motorTorque",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 197
              },
              {
                "Name": "SteerHelper",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.SteerHelper()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetGroundHit",
                    "FullName": "UnityEngine.WheelCollider.GetGroundHit(out UnityEngine.WheelHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.VehiclesModule.dll",
                    "Arguments": [
                      {
                        "Argument": "wheelhit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 243
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_OldRotation - transform.eulerAngles.y",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 249
                  },
                  {
                    "Name": "AngleAxis",
                    "FullName": "UnityEngine.Quaternion.AngleAxis(float, UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "turnadjust",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "Vector3.up",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 252
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 239
                    }
                  },
                  {
                    "Variable": {
                      "Name": "wheelhit",
                      "Type": "WheelHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 241
                    }
                  },
                  {
                    "Variable": {
                      "Name": "turnadjust",
                      "Type": "var",
                      "Assignment": "(transform.eulerAngles.y - m_OldRotation) * m_SteerHelper",
                      "Kind": "Definition",
                      "DefinitionLine": 250
                    }
                  },
                  {
                    "Variable": {
                      "Name": "velRotation",
                      "Type": "Quaternion",
                      "Assignment": "Quaternion.AngleAxis(turnadjust, Vector3.up)",
                      "Kind": "Definition",
                      "DefinitionLine": 251
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Rigidbody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "velRotation * m_Rigidbody.velocity",
                      "Kind": "Assignment",
                      "AssignmentLine": 252,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OldRotation",
                      "Type": "float",
                      "Assignment": "transform.eulerAngles.y",
                      "Kind": "Assignment",
                      "AssignmentLine": 254,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "velRotation * m_Rigidbody.velocity",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 252,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_Rigidbody.velocity",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "velRotation",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 252,
                          "UseKind": "LocalReference",
                          "AssignedTo": "m_Rigidbody.velocity",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_Rigidbody.velocity",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 252,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_Rigidbody.velocity",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.eulerAngles.y",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 254,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_OldRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 238
              },
              {
                "Name": "AddDownForce",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AddDownForce()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "AddForce",
                    "FullName": "UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.PhysicsModule.dll",
                    "Arguments": [
                      {
                        "Argument": "-transform.up*m_Downforce*\r\n                                                         m_WheelColliders[0].attachedRigidbody.velocity.magnitude",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 262
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 260
              },
              {
                "Name": "CheckForWheelSpin",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.CheckForWheelSpin()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetGroundHit",
                    "FullName": "UnityEngine.WheelCollider.GetGroundHit(out UnityEngine.WheelHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.VehiclesModule.dll",
                    "Arguments": [
                      {
                        "Argument": "wheelHit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 278
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "wheelHit.forwardSlip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 281
                  },
                  {
                    "Name": "Abs",
                    "FullName": "UnityEngine.Mathf.Abs(float)",
                    "ReturnType": "Single",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "wheelHit.sidewaysSlip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 281
                  },
                  {
                    "Name": "EmitTyreSmoke",
                    "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.EmitTyreSmoke()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\WheelEffects.cs",
                    "DefinitionLine": 45,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 283
                  },
                  {
                    "Name": "AnySkidSoundPlaying",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AnySkidSoundPlaying()",
                    "ReturnType": "Boolean",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 356,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 287
                  },
                  {
                    "Name": "PlayAudio",
                    "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.PlayAudio()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\WheelEffects.cs",
                    "DefinitionLine": 56,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 289
                  },
                  {
                    "Name": "StopAudio",
                    "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.StopAudio()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\WheelEffects.cs",
                    "DefinitionLine": 63,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 297
                  },
                  {
                    "Name": "EndSkidTrail",
                    "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.EndSkidTrail()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\WheelEffects.cs",
                    "DefinitionLine": 83,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 300
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 274
                    }
                  },
                  {
                    "Variable": {
                      "Name": "wheelHit",
                      "Type": "WheelHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 276
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 272
              },
              {
                "Name": "TractionControl",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.TractionControl()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetGroundHit",
                    "FullName": "UnityEngine.WheelCollider.GetGroundHit(out UnityEngine.WheelHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.VehiclesModule.dll",
                    "Arguments": [
                      {
                        "Argument": "wheelHit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 314
                  },
                  {
                    "Name": "AdjustTorque",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AdjustTorque(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 339,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "wheelHit.forwardSlip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 316
                  },
                  {
                    "Name": "GetGroundHit",
                    "FullName": "UnityEngine.WheelCollider.GetGroundHit(out UnityEngine.WheelHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.VehiclesModule.dll",
                    "Arguments": [
                      {
                        "Argument": "wheelHit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 321
                  },
                  {
                    "Name": "AdjustTorque",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AdjustTorque(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 339,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "wheelHit.forwardSlip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 322
                  },
                  {
                    "Name": "GetGroundHit",
                    "FullName": "UnityEngine.WheelCollider.GetGroundHit(out UnityEngine.WheelHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.VehiclesModule.dll",
                    "Arguments": [
                      {
                        "Argument": "wheelHit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 324
                  },
                  {
                    "Name": "AdjustTorque",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AdjustTorque(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 339,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "wheelHit.forwardSlip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 325
                  },
                  {
                    "Name": "GetGroundHit",
                    "FullName": "UnityEngine.WheelCollider.GetGroundHit(out UnityEngine.WheelHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.VehiclesModule.dll",
                    "Arguments": [
                      {
                        "Argument": "wheelHit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 329
                  },
                  {
                    "Name": "AdjustTorque",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AdjustTorque(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 339,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "wheelHit.forwardSlip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 330
                  },
                  {
                    "Name": "GetGroundHit",
                    "FullName": "UnityEngine.WheelCollider.GetGroundHit(out UnityEngine.WheelHit)",
                    "ReturnType": "Boolean",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.VehiclesModule.dll",
                    "Arguments": [
                      {
                        "Argument": "wheelHit",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 332
                  },
                  {
                    "Name": "AdjustTorque",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AdjustTorque(float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 339,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "wheelHit.forwardSlip",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 333
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "wheelHit",
                      "Type": "WheelHit",
                      "Assignment": null,
                      "Kind": "Definition",
                      "DefinitionLine": 306
                    }
                  },
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 311
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 305
              },
              {
                "Name": "AdjustTorque",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AdjustTorque(float)",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "forwardSlip",
                    "Type": "float",
                    "Assignment": null
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_CurrentTorque",
                      "Type": "float",
                      "Assignment": "10 * m_TractionControl",
                      "Kind": "Assignment",
                      "AssignmentLine": 342,
                      "AssignmentKind": "SubtractAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentTorque",
                      "Type": "float",
                      "Assignment": "10 * m_TractionControl",
                      "Kind": "Assignment",
                      "AssignmentLine": 346,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_CurrentTorque",
                      "Type": "float",
                      "Assignment": "m_FullTorqueOverAllWheels",
                      "Kind": "Assignment",
                      "AssignmentLine": 349,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "10 * m_TractionControl",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 342,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_CurrentTorque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 342,
                          "UseKind": "Literal",
                          "AssignedTo": "m_CurrentTorque",
                          "Value": "10",
                          "VariablesList": []
                        },
                        {
                          "Name": "m_TractionControl",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 342,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_CurrentTorque",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "10 * m_TractionControl",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 346,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_CurrentTorque",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 346,
                          "UseKind": "Literal",
                          "AssignedTo": "m_CurrentTorque",
                          "Value": "10",
                          "VariablesList": []
                        },
                        {
                          "Name": "m_TractionControl",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 346,
                          "UseKind": "FieldReference",
                          "AssignedTo": "m_CurrentTorque",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_FullTorqueOverAllWheels",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 349,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_CurrentTorque",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 339
              },
              {
                "Name": "AnySkidSoundPlaying",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarController.AnySkidSoundPlaying()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "bool",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 357
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 356
              }
            ],
            "Fields": [
              {
                "Name": "m_CarDriveType",
                "Type": "CarDriveType",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "CarDriveType.FourWheelDrive",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 22
              },
              {
                "Name": "m_WheelColliders",
                "Type": "WheelCollider[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new WheelCollider[4]",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 23
              },
              {
                "Name": "m_WheelMeshes",
                "Type": "GameObject[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new GameObject[4]",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 24
              },
              {
                "Name": "m_WheelEffects",
                "Type": "WheelEffects[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "new WheelEffects[4]",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 25
              },
              {
                "Name": "m_CentreOfMassOffset",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 26
              },
              {
                "Name": "m_MaximumSteerAngle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 27
              },
              {
                "Name": "m_SteerHelper",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[Range(0, 1)]",
                  "[SerializeField]"
                ],
                "Line": 28
              },
              {
                "Name": "m_TractionControl",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[Range(0, 1)]",
                  "[SerializeField]"
                ],
                "Line": 29
              },
              {
                "Name": "m_FullTorqueOverAllWheels",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 30
              },
              {
                "Name": "m_ReverseTorque",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 31
              },
              {
                "Name": "m_MaxHandbrakeTorque",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 32
              },
              {
                "Name": "m_Downforce",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "100f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 33
              },
              {
                "Name": "m_SpeedType",
                "Type": "SpeedType",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 34
              },
              {
                "Name": "m_Topspeed",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "200",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 35
              },
              {
                "Name": "NoOfGears",
                "Type": "int",
                "Modifiers": [
                  "private",
                  "static"
                ],
                "Assignment": "5",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 36
              },
              {
                "Name": "m_RevRangeBoundary",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 37
              },
              {
                "Name": "m_SlipLimit",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 38
              },
              {
                "Name": "m_BrakeTorque",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 39
              },
              {
                "Name": "m_WheelMeshLocalRotations",
                "Type": "Quaternion[]",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 41
              },
              {
                "Name": "m_Prevpos",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 42
              },
              {
                "Name": "m_Pos",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 42
              },
              {
                "Name": "m_SteerAngle",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 43
              },
              {
                "Name": "m_GearNum",
                "Type": "int",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 44
              },
              {
                "Name": "m_GearFactor",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 45
              },
              {
                "Name": "m_OldRotation",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 46
              },
              {
                "Name": "m_CurrentTorque",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 47
              },
              {
                "Name": "m_Rigidbody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 48
              },
              {
                "Name": "k_ReversingThreshold",
                "Type": "float",
                "Modifiers": [
                  "private",
                  "const"
                ],
                "Assignment": "0.01f",
                "Attributes": [],
                "Line": 49
              }
            ],
            "Line": 20
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "CarSelfRighting",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarSelfRighting.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CarSelfRighting",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarSelfRighting.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.Rigidbody>()",
                    "ReturnType": "Rigidbody",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 18
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Rigidbody",
                      "Type": "UnityEngine.Rigidbody",
                      "Assignment": "GetComponent<Rigidbody>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 17,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<Rigidbody>()",
                      "Type": "UnityEngine.Rigidbody",
                      "Kind": "Use",
                      "UseLine": 17,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Rigidbody",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 16
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarSelfRighting.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "RightCar",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarSelfRighting.RightCar()",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarSelfRighting.cs",
                    "DefinitionLine": 38,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 32
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_LastOkTime",
                      "Type": "float",
                      "Assignment": "Time.time",
                      "Kind": "Assignment",
                      "AssignmentLine": 26,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Time.time",
                      "Type": "float",
                      "Kind": "Use",
                      "UseLine": 26,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_LastOkTime",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              },
              {
                "Name": "RightCar",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarSelfRighting.RightCar()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "LookRotation",
                    "FullName": "UnityEngine.Quaternion.LookRotation(UnityEngine.Vector3)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "transform.forward",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 42
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "Vector3.up",
                      "Kind": "Assignment",
                      "AssignmentLine": 40,
                      "AssignmentKind": "AddAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.rotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "Quaternion.LookRotation(transform.forward)",
                      "Kind": "Assignment",
                      "AssignmentLine": 41,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Vector3.up",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 40,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "transform.position",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Quaternion.LookRotation(transform.forward)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 41,
                      "UseKind": "Invocation",
                      "AssignedTo": "transform.rotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 38
              }
            ],
            "Fields": [
              {
                "Name": "m_WaitTime",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "3f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 9
              },
              {
                "Name": "m_VelocityThreshold",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": "1f",
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              },
              {
                "Name": "m_LastOkTime",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 12
              },
              {
                "Name": "m_Rigidbody",
                "Type": "Rigidbody",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "CarUserControl",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarUserControl.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "CarUserControl",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Awake",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarUserControl.Awake()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityStandardAssets.Vehicles.Car.CarController>()",
                    "ReturnType": "CarController",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 16
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_Car",
                      "Type": "UnityStandardAssets.Vehicles.Car.CarController",
                      "Assignment": "GetComponent<CarController>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 15,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<CarController>()",
                      "Type": "UnityStandardAssets.Vehicles.Car.CarController",
                      "Kind": "Use",
                      "UseLine": 15,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_Car",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              },
              {
                "Name": "FixedUpdate",
                "FullName": "UnityStandardAssets.Vehicles.Car.CarUserControl.FixedUpdate()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Horizontal\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 23
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Vertical\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 24
                  },
                  {
                    "Name": "GetAxis",
                    "FullName": "UnityStandardAssets.CrossPlatformInput.CrossPlatformInputManager.GetAxis(string)",
                    "ReturnType": "Single",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\CrossPlatformInput\\Scripts\\CrossPlatformInputManager.cs",
                    "DefinitionLine": 93,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "\"Jump\"",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 26
                  },
                  {
                    "Name": "Move",
                    "FullName": "UnityStandardAssets.Vehicles.Car.CarController.Move(float, float, float, float)",
                    "ReturnType": "Void",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\CarController.cs",
                    "DefinitionLine": 130,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "h",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "v",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "v",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "handbrake",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 27
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "h",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Horizontal\")",
                      "Kind": "Definition",
                      "DefinitionLine": 22
                    }
                  },
                  {
                    "Variable": {
                      "Name": "v",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Vertical\")",
                      "Kind": "Definition",
                      "DefinitionLine": 23
                    }
                  },
                  {
                    "Variable": {
                      "Name": "handbrake",
                      "Type": "float",
                      "Assignment": "CrossPlatformInputManager.GetAxis(\"Jump\")",
                      "Kind": "Definition",
                      "DefinitionLine": 25
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 20
              }
            ],
            "Fields": [
              {
                "Name": "m_Car",
                "Type": "CarController",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              }
            ],
            "Line": 7
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      },
      {
        "Name": "UnityStandardAssets.CrossPlatformInput",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "Mudguard",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\Mudguard.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Mudguard",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Car.Mudguard.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_OriginalRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "transform.localRotation",
                      "Kind": "Assignment",
                      "AssignmentLine": 17,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 17,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_OriginalRotation",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 16
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Car.Mudguard.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Euler",
                    "FullName": "UnityEngine.Quaternion.Euler(float, float, float)",
                    "ReturnType": "Quaternion",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "carController.CurrentSteerAngle",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "0",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 24
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "transform.localRotation",
                      "Type": "UnityEngine.Quaternion",
                      "Assignment": "m_OriginalRotation*Quaternion.Euler(0, carController.CurrentSteerAngle, 0)",
                      "Kind": "Assignment",
                      "AssignmentLine": 23,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_OriginalRotation*Quaternion.Euler(0, carController.CurrentSteerAngle, 0)",
                      "Type": "UnityEngine.Quaternion",
                      "Kind": "Use",
                      "UseLine": 23,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "transform.localRotation",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_OriginalRotation",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 23,
                          "UseKind": "FieldReference",
                          "AssignedTo": "transform.localRotation",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "Quaternion.Euler(0, carController.CurrentSteerAngle, 0)",
                          "Type": "UnityEngine.Quaternion",
                          "Kind": "Use",
                          "UseLine": 23,
                          "UseKind": "Invocation",
                          "AssignedTo": "transform.localRotation",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 22
              }
            ],
            "Fields": [
              {
                "Name": "carController",
                "Type": "CarController",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "m_OriginalRotation",
                "Type": "Quaternion",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              }
            ],
            "Line": 9
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "SkidTrail",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\SkidTrail.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "SkidTrail",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Car.SkidTrail.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Destroy",
                    "FullName": "UnityEngine.Object.Destroy(UnityEngine.Object, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "gameObject",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "m_PersistTime",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 21
                  }
                ],
                "Variables": [],
                "Statements": [],
                "WhileLoops": [],
                "Line": 13
              }
            ],
            "Fields": [
              {
                "Name": "m_PersistTime",
                "Type": "float",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [
                  "[SerializeField]"
                ],
                "Line": 10
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 6
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Collections",
        "Line": 2
      },
      {
        "Name": "UnityEngine",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": "Suspension",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\Suspension.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "Suspension",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Car.Suspension.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "m_TargetOriginalPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "wheel.transform.localPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 18,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Origin",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.localPosition",
                      "Kind": "Assignment",
                      "AssignmentLine": 19,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "wheel.transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 18,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_TargetOriginalPosition",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 19,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_Origin",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 17
              },
              {
                "Name": "Update",
                "FullName": "UnityStandardAssets.Vehicles.Car.Suspension.Update()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "transform.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "m_Origin + (wheel.transform.localPosition - m_TargetOriginalPosition)",
                      "Kind": "Assignment",
                      "AssignmentLine": 25,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_Origin + (wheel.transform.localPosition - m_TargetOriginalPosition)",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 25,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "transform.localPosition",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "m_Origin",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 25,
                          "UseKind": "FieldReference",
                          "AssignedTo": "transform.localPosition",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "wheel.transform.localPosition - m_TargetOriginalPosition",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 25,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "transform.localPosition",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "wheel.transform.localPosition",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 25,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "transform.localPosition",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_TargetOriginalPosition",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 25,
                              "UseKind": "FieldReference",
                              "AssignedTo": "transform.localPosition",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 24
              }
            ],
            "Fields": [
              {
                "Name": "wheel",
                "Type": "GameObject",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "m_TargetOriginalPosition",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 13
              },
              {
                "Name": "m_Origin",
                "Type": "Vector3",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 14
              }
            ],
            "Line": 8
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "WheelEffects",
    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\WheelEffects.cs",
    "Interfaces": [],
    "Namespaces": [
      {
        "Name": "UnityStandardAssets.Vehicles.Car",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "WheelEffects",
            "Modifiers": [
              "public"
            ],
            "Inheritance": "MonoBehaviour",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "skidding",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 12
              },
              {
                "Name": "PlayingAudio",
                "Type": "bool",
                "Modifiers": [
                  "public"
                ],
                "Line": 13
              }
            ],
            "Methods": [
              {
                "Name": "Start",
                "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.Start()",
                "Modifiers": [
                  "private"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "GetComponentInChildren",
                    "FullName": "UnityEngine.Component.GetComponentInChildren<UnityEngine.ParticleSystem>()",
                    "ReturnType": "ParticleSystem",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 23
                  },
                  {
                    "Name": "LogWarning",
                    "FullName": "UnityEngine.Debug.LogWarning(object, UnityEngine.Object)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "\" no particle system found on car to generate smoke particles\"",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "gameObject",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 27
                  },
                  {
                    "Name": "Stop",
                    "FullName": "UnityEngine.ParticleSystem.Stop()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.ParticleSystemModule.dll",
                    "Arguments": [],
                    "Line": 31
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.WheelCollider>()",
                    "ReturnType": "WheelCollider",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 34
                  },
                  {
                    "Name": "GetComponent",
                    "FullName": "UnityEngine.Component.GetComponent<UnityEngine.AudioSource>()",
                    "ReturnType": "AudioSource",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [],
                    "Line": 35
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "skidParticles",
                      "Type": "UnityEngine.ParticleSystem",
                      "Assignment": "transform.root.GetComponentInChildren<ParticleSystem>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 22,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_WheelCollider",
                      "Type": "UnityEngine.WheelCollider",
                      "Assignment": "GetComponent<WheelCollider>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 33,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_AudioSource",
                      "Type": "UnityEngine.AudioSource",
                      "Assignment": "GetComponent<AudioSource>()",
                      "Kind": "Assignment",
                      "AssignmentLine": 34,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "PlayingAudio",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 35,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "skidTrailsDetachedParent",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "new GameObject(\"Skid Trails - Detached\").transform",
                      "Kind": "Assignment",
                      "AssignmentLine": 39,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.root.GetComponentInChildren<ParticleSystem>()",
                      "Type": "UnityEngine.ParticleSystem",
                      "Kind": "Use",
                      "UseLine": 22,
                      "UseKind": "Invocation",
                      "AssignedTo": "skidParticles",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<WheelCollider>()",
                      "Type": "UnityEngine.WheelCollider",
                      "Kind": "Use",
                      "UseLine": 33,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_WheelCollider",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "GetComponent<AudioSource>()",
                      "Type": "UnityEngine.AudioSource",
                      "Kind": "Use",
                      "UseLine": 34,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_AudioSource",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 35,
                      "UseKind": "Literal",
                      "AssignedTo": "PlayingAudio",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "new GameObject(\"Skid Trails - Detached\").transform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 39,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "skidTrailsDetachedParent",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 21
              },
              {
                "Name": "EmitTyreSmoke",
                "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.EmitTyreSmoke()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Emit",
                    "FullName": "UnityEngine.ParticleSystem.Emit(int)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.ParticleSystemModule.dll",
                    "Arguments": [
                      {
                        "Argument": "1",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 48
                  },
                  {
                    "Name": "StartCoroutine",
                    "FullName": "UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)",
                    "ReturnType": "Coroutine",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "StartSkidTrail()",
                        "IsInvocation": true
                      }
                    ],
                    "Line": 51
                  },
                  {
                    "Name": "StartSkidTrail",
                    "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.StartSkidTrail()",
                    "ReturnType": "IEnumerator",
                    "FileName": "D:\\Microsoft VS Community\\unity\\workspace\\UnlimitedArena\\Assets\\Standard Assets\\Vehicles\\Car\\Scripts\\WheelEffects.cs",
                    "DefinitionLine": 70,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 51
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "skidParticles.transform.position",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "transform.position - transform.up*m_WheelCollider.radius",
                      "Kind": "Assignment",
                      "AssignmentLine": 46,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform.position - transform.up*m_WheelCollider.radius",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 46,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "skidParticles.transform.position",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "transform.position",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 46,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "skidParticles.transform.position",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "transform.up*m_WheelCollider.radius",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 46,
                          "UseKind": "BinaryOperator",
                          "AssignedTo": "skidParticles.transform.position",
                          "Value": null,
                          "VariablesList": [
                            {
                              "Name": "transform.up",
                              "Type": "UnityEngine.Vector3",
                              "Kind": "Use",
                              "UseLine": 46,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "skidParticles.transform.position",
                              "Value": null,
                              "VariablesList": []
                            },
                            {
                              "Name": "m_WheelCollider.radius",
                              "Type": "float",
                              "Kind": "Use",
                              "UseLine": 46,
                              "UseKind": "PropertyReference",
                              "AssignedTo": "skidParticles.transform.position",
                              "Value": null,
                              "VariablesList": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 45
              },
              {
                "Name": "PlayAudio",
                "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.PlayAudio()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Play",
                    "FullName": "UnityEngine.AudioSource.Play()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 58
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "PlayingAudio",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 58,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 58,
                      "UseKind": "Literal",
                      "AssignedTo": "PlayingAudio",
                      "Value": "true",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 56
              },
              {
                "Name": "StopAudio",
                "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.StopAudio()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Stop",
                    "FullName": "UnityEngine.AudioSource.Stop()",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.AudioModule.dll",
                    "Arguments": [],
                    "Line": 65
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "PlayingAudio",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 65,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 65,
                      "UseKind": "Literal",
                      "AssignedTo": "PlayingAudio",
                      "Value": "false",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 63
              },
              {
                "Name": "StartSkidTrail",
                "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.StartSkidTrail()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "IEnumerator",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Instantiate",
                    "FullName": "UnityEngine.Object.Instantiate<UnityEngine.Transform>(UnityEngine.Transform)",
                    "ReturnType": "Transform",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "SkidTrailPrefab",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 73
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "skidding",
                      "Type": "bool",
                      "Assignment": "true",
                      "Kind": "Assignment",
                      "AssignmentLine": 71,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SkidTrail",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "Instantiate(SkidTrailPrefab)",
                      "Kind": "Assignment",
                      "AssignmentLine": 72,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SkidTrail.parent",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "transform",
                      "Kind": "Assignment",
                      "AssignmentLine": 77,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SkidTrail.localPosition",
                      "Type": "UnityEngine.Vector3",
                      "Assignment": "-Vector3.up*m_WheelCollider.radius",
                      "Kind": "Assignment",
                      "AssignmentLine": 78,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 71,
                      "UseKind": "Literal",
                      "AssignedTo": "skidding",
                      "Value": "true",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "Instantiate(SkidTrailPrefab)",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 72,
                      "UseKind": "Invocation",
                      "AssignedTo": "m_SkidTrail",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "transform",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 77,
                      "UseKind": "PropertyReference",
                      "AssignedTo": "m_SkidTrail.parent",
                      "Value": null,
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "-Vector3.up*m_WheelCollider.radius",
                      "Type": "UnityEngine.Vector3",
                      "Kind": "Use",
                      "UseLine": 78,
                      "UseKind": "BinaryOperator",
                      "AssignedTo": "m_SkidTrail.localPosition",
                      "Value": null,
                      "VariablesList": [
                        {
                          "Name": "-Vector3.up",
                          "Type": "UnityEngine.Vector3",
                          "Kind": "Use",
                          "UseLine": 78,
                          "UseKind": "UnaryOperator",
                          "AssignedTo": "m_SkidTrail.localPosition",
                          "Value": null,
                          "VariablesList": []
                        },
                        {
                          "Name": "m_WheelCollider.radius",
                          "Type": "float",
                          "Kind": "Use",
                          "UseLine": 78,
                          "UseKind": "PropertyReference",
                          "AssignedTo": "m_SkidTrail.localPosition",
                          "Value": null,
                          "VariablesList": []
                        }
                      ]
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 70
              },
              {
                "Name": "EndSkidTrail",
                "FullName": "UnityStandardAssets.Vehicles.Car.WheelEffects.EndSkidTrail()",
                "Modifiers": [
                  "public"
                ],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Destroy",
                    "FullName": "UnityEngine.Object.Destroy(UnityEngine.Object, float)",
                    "ReturnType": "Void",
                    "FileName": null,
                    "DefinitionLine": 1,
                    "Kind": "MetadataFile",
                    "Module": "UnityEngine.CoreModule.dll",
                    "Arguments": [
                      {
                        "Argument": "m_SkidTrail.gameObject",
                        "IsInvocation": false
                      },
                      {
                        "Argument": "10",
                        "IsInvocation": false
                      }
                    ],
                    "Line": 91
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "skidding",
                      "Type": "bool",
                      "Assignment": "false",
                      "Kind": "Assignment",
                      "AssignmentLine": 88,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "m_SkidTrail.parent",
                      "Type": "UnityEngine.Transform",
                      "Assignment": "skidTrailsDetachedParent",
                      "Kind": "Assignment",
                      "AssignmentLine": 89,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": null,
                      "Type": "bool",
                      "Kind": "Use",
                      "UseLine": 88,
                      "UseKind": "Literal",
                      "AssignedTo": "skidding",
                      "Value": "false",
                      "VariablesList": []
                    }
                  },
                  {
                    "Variable": {
                      "Name": "skidTrailsDetachedParent",
                      "Type": "UnityEngine.Transform",
                      "Kind": "Use",
                      "UseLine": 89,
                      "UseKind": "FieldReference",
                      "AssignedTo": "m_SkidTrail.parent",
                      "Value": null,
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileLoops": [],
                "Line": 83
              }
            ],
            "Fields": [
              {
                "Name": "SkidTrailPrefab",
                "Type": "Transform",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "skidTrailsDetachedParent",
                "Type": "Transform",
                "Modifiers": [
                  "public",
                  "static"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              },
              {
                "Name": "skidParticles",
                "Type": "ParticleSystem",
                "Modifiers": [
                  "public"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 11
              },
              {
                "Name": "m_AudioSource",
                "Type": "AudioSource",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "m_SkidTrail",
                "Type": "Transform",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "m_WheelCollider",
                "Type": "WheelCollider",
                "Modifiers": [
                  "private"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              }
            ],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System.Collections",
        "Line": 1
      },
      {
        "Name": "UnityEngine",
        "Line": 2
      }
    ],
    "Line": 1
  }
]