[
  {
    "Name": "Program",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\Program.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "Program",
        "FullName": "Program",
        "FullInheritanceName": "object",
        "InnerClasses": [],
        "ClassConstraints": [],
        "Modifiers": [
          "public"
        ],
        "Inheritance": "object",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "HasBody": false,
            "HasExpressionBody": false,
            "Name": "Main",
            "IsEmpty": true,
            "FullName": "Program.Main(string[])",
            "Modifiers": [
              "public",
              "static"
            ],
            "Attributes": [],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "args",
                "Type": "string[]",
                "Assignment": null,
                "Attributes": []
              }
            ],
            "Invocations": [],
            "Variables": [],
            "Statements": [],
            "WhileBlocks": [],
            "ForEachBlocks": [],
            "ForBlocks": [],
            "IfBlocks": [],
            "SwitchBlocks": [],
            "Returns": [],
            "Line": 5
          }
        ],
        "Fields": [],
        "Constructors": [],
        "Attributes": [],
        "Line": 3
      }
    ],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      }
    ],
    "Line": 1
  },
  {
    "Name": "State",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\State.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [
      {
        "Attributes": [],
        "Name": "Test",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "State",
            "FullName": "Test.State",
            "FullInheritanceName": "Test.StateManager",
            "InnerClasses": [],
            "ClassConstraints": [],
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Test.StateManager",
            "Interfaces": [],
            "Properties": [],
            "Methods": [],
            "Fields": [
              {
                "Name": "b",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 7
              }
            ],
            "Constructors": [
              {
                "ClassRef": "Test.State",
                "ReturnType": "State",
                "HasBody": false,
                "HasExpressionBody": true,
                "Name": "State",
                "IsEmpty": false,
                "FullName": "State",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [
                  "Obsolete"
                ],
                "Parameters": [
                  {
                    "Name": "a",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  },
                  {
                    "Name": "b",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "Line": 8
              },
              {
                "ClassRef": "Test.State",
                "ReturnType": "State",
                "HasBody": true,
                "HasExpressionBody": false,
                "Name": "State",
                "IsEmpty": false,
                "FullName": "State",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "Parameters": [
                  {
                    "Name": "a",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  },
                  {
                    "Name": "b",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  },
                  {
                    "Name": "c",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "this.b",
                      "Type": "int",
                      "Assignment": "b",
                      "Kind": "Assignment",
                      "AssignmentLine": 11,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "b",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 11,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "this.b",
                      "Value": null,
                      "Operation": "SimpleAssignmentExpression",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "Line": 10
              }
            ],
            "Attributes": [],
            "Line": 5
          }
        ],
        "Usings": [],
        "Line": 3
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      }
    ],
    "Line": 1
  },
  {
    "Name": "StateInState",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [
      {
        "Attributes": [],
        "Name": "Test",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "StateInState",
            "FullName": "Test.StateInState<T>",
            "FullInheritanceName": "object",
            "InnerClasses": [
              {
                "Name": "InnerState",
                "FullName": "Test.StateInState<T>.InnerState",
                "FullInheritanceName": "object",
                "InnerClasses": [],
                "ClassConstraints": [],
                "Modifiers": [
                  "public"
                ],
                "Inheritance": "object",
                "Interfaces": [],
                "Properties": [],
                "Methods": [
                  {
                    "HasBody": false,
                    "HasExpressionBody": false,
                    "Name": "Method2",
                    "IsEmpty": true,
                    "FullName": "Test.StateInState<T>.InnerState.Method2()",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "ReturnType": "void",
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "Line": 23
                  },
                  {
                    "HasBody": true,
                    "HasExpressionBody": false,
                    "Name": "Method3",
                    "IsEmpty": false,
                    "FullName": "Test.StateInState<T>.InnerState.Method3()",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "ReturnType": "int",
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [
                      {
                        "ReturnStatement": "10",
                        "ReturnKind": "NumericLiteralExpression",
                        "Line": 24
                      }
                    ],
                    "Line": 24
                  },
                  {
                    "HasBody": false,
                    "HasExpressionBody": true,
                    "Name": "Ciaone2",
                    "IsEmpty": false,
                    "FullName": "Test.StateInState<T>.InnerState.Ciaone2()",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "ReturnType": "InnerState",
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "Line": 26
                  }
                ],
                "Fields": [
                  {
                    "Name": "d",
                    "Type": "int",
                    "Modifiers": [
                      "protected"
                    ],
                    "Assignment": null,
                    "Attributes": [],
                    "Line": 13
                  }
                ],
                "Constructors": [
                  {
                    "ClassRef": "Test.StateInState<T>.InnerState",
                    "ReturnType": "InnerState",
                    "HasBody": true,
                    "HasExpressionBody": false,
                    "Name": "InnerState",
                    "IsEmpty": false,
                    "FullName": "InnerState",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "Parameters": [],
                    "Invocations": [
                      {
                        "Name": "Method2",
                        "FullName": "Test.StateInState<T>.InnerState.Method2()",
                        "ReturnType": "Void",
                        "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                        "DefinitionLine": 23,
                        "Kind": "SourceFile",
                        "Module": null,
                        "Arguments": [],
                        "Line": 17
                      },
                      {
                        "Name": "Method3",
                        "FullName": "Test.StateInState<T>.InnerState.Method3()",
                        "ReturnType": "Int32",
                        "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                        "DefinitionLine": 24,
                        "Kind": "SourceFile",
                        "Module": null,
                        "Arguments": [],
                        "Line": 18
                      }
                    ],
                    "Variables": [
                      {
                        "Variable": {
                          "Name": "this.d",
                          "Type": "int",
                          "Assignment": "1",
                          "Kind": "Assignment",
                          "AssignmentLine": 15,
                          "AssignmentKind": "SimpleAssignmentExpression"
                        }
                      },
                      {
                        "Variable": {
                          "Name": "this.d",
                          "Type": "int",
                          "Assignment": "Method3()",
                          "Kind": "Assignment",
                          "AssignmentLine": 17,
                          "AssignmentKind": "SimpleAssignmentExpression"
                        }
                      },
                      {
                        "Variable": {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 15,
                          "UseKind": "Literal",
                          "AssignedTo": "this.d",
                          "Value": "1",
                          "Operation": "SimpleAssignmentExpression",
                          "VariablesList": []
                        }
                      },
                      {
                        "Variable": {
                          "Name": "Method3()",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 17,
                          "UseKind": "Invocation",
                          "AssignedTo": "this.d",
                          "Value": null,
                          "Operation": "SimpleAssignmentExpression",
                          "VariablesList": []
                        }
                      }
                    ],
                    "Statements": [],
                    "WhileBlocks": [
                      {
                        "Condition": {
                          "ConditionTokens": [
                            "true"
                          ],
                          "Type": "bool",
                          "ConditionStatement": "true",
                          "ConditionType": "TrueLiteralExpression",
                          "ConditionKind": "Literal"
                        },
                        "Depth": 1,
                        "EndLine": 20,
                        "StartLine": 20,
                        "Invocations": [
                          {
                            "Name": "Method2",
                            "FullName": "Test.StateInState<T>.InnerState.Method2()",
                            "ReturnType": "Void",
                            "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                            "DefinitionLine": 23,
                            "Kind": "SourceFile",
                            "Module": null,
                            "Arguments": [],
                            "Line": 20
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "Returns": []
                      }
                    ],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "Line": 14
                  },
                  {
                    "ClassRef": "Test.StateInState<T>.InnerState",
                    "ReturnType": "InnerState",
                    "HasBody": false,
                    "HasExpressionBody": true,
                    "Name": "InnerState",
                    "IsEmpty": false,
                    "FullName": "InnerState",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "Parameters": [
                      {
                        "Name": "d",
                        "Type": "int",
                        "Assignment": null,
                        "Attributes": []
                      }
                    ],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "Line": 25
                  }
                ],
                "Attributes": [],
                "Line": 11
              }
            ],
            "ClassConstraints": [],
            "Modifiers": [
              "public"
            ],
            "Inheritance": "object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "HasBody": false,
                "HasExpressionBody": false,
                "Name": "Method1",
                "IsEmpty": true,
                "FullName": "Test.StateInState<T>.Method1(string)",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "s",
                    "Type": "string",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "Line": 9
              }
            ],
            "Fields": [],
            "Constructors": [
              {
                "ClassRef": "Test.StateInState<T>",
                "ReturnType": "StateInState",
                "HasBody": false,
                "HasExpressionBody": false,
                "Name": "StateInState",
                "IsEmpty": true,
                "FullName": "StateInState",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "Line": 7
              }
            ],
            "Attributes": [],
            "Line": 5
          }
        ],
        "Usings": [],
        "Line": 3
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      }
    ],
    "Line": 1
  },
  {
    "Name": "StateManager",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [
      {
        "Attributes": [],
        "Name": "Test",
        "FileName": null,
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "StateManager",
            "FullName": "Test.StateManager",
            "FullInheritanceName": "object",
            "InnerClasses": [],
            "ClassConstraints": [],
            "Modifiers": [
              "public",
              "abstract"
            ],
            "Inheritance": "object",
            "Interfaces": [],
            "Properties": [
              {
                "Name": "A",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [
                  "JsonIgnore"
                ],
                "Line": 12
              },
              {
                "Name": "B",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "Line": 14
              },
              {
                "Name": "C",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "Line": 19
              }
            ],
            "Methods": [
              {
                "HasBody": true,
                "HasExpressionBody": false,
                "Name": "SwitchMeth",
                "IsEmpty": false,
                "FullName": "Test.StateManager.SwitchMeth()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "Meth22",
                    "FullName": "Test.StateManager.Meth22()",
                    "ReturnType": "Int32",
                    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                    "DefinitionLine": 34,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 24
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "aa",
                      "Type": "int",
                      "Assignment": "10",
                      "Kind": "Definition",
                      "DefinitionLine": 22
                    }
                  }
                ],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [
                  {
                    "Condition": {
                      "ConditionTokens": [
                        "Meth22()"
                      ],
                      "Type": "int",
                      "ConditionStatement": "Meth22()",
                      "ConditionType": "InvocationExpression",
                      "ConditionKind": "Method"
                    },
                    "CaseBranches": [
                      {
                        "labels": [
                          "case 0:",
                          "case 2:"
                        ],
                        "EndLine": 28,
                        "StartLine": 26,
                        "Invocations": [
                          {
                            "Name": "WriteLine",
                            "FullName": "System.Console.WriteLine(int)",
                            "ReturnType": "Void",
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": "MetadataFile",
                            "Module": "CommonLanguageRuntimeLibrary",
                            "Arguments": [
                              {
                                "Argument": "0",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 28
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "Returns": []
                      },
                      {
                        "labels": [
                          "case 1:"
                        ],
                        "EndLine": 29,
                        "StartLine": 29,
                        "Invocations": [],
                        "Variables": [],
                        "WhileBlocks": [
                          {
                            "Condition": {
                              "ConditionTokens": [
                                "B",
                                "10"
                              ],
                              "Type": "bool",
                              "ConditionStatement": "B > 10",
                              "ConditionType": "GreaterThanExpression",
                              "ConditionKind": "Method"
                            },
                            "Depth": 2,
                            "EndLine": 29,
                            "StartLine": 29,
                            "Invocations": [],
                            "Variables": [
                              {
                                "Variable": {
                                  "Name": "B",
                                  "Type": "int",
                                  "Assignment": "1",
                                  "Kind": "Assignment",
                                  "AssignmentLine": 28,
                                  "AssignmentKind": "SubtractAssignmentExpression"
                                }
                              },
                              {
                                "Variable": {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 28,
                                  "UseKind": "Literal",
                                  "AssignedTo": "B",
                                  "Value": "1",
                                  "Operation": "SubtractAssignmentExpression",
                                  "VariablesList": []
                                }
                              }
                            ],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "Returns": []
                          }
                        ],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "Returns": []
                      },
                      {
                        "labels": [
                          "default:"
                        ],
                        "EndLine": 30,
                        "StartLine": 30,
                        "Invocations": [
                          {
                            "Name": "WriteLine",
                            "FullName": "System.Console.WriteLine(int)",
                            "ReturnType": "Void",
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": "MetadataFile",
                            "Module": "CommonLanguageRuntimeLibrary",
                            "Arguments": [
                              {
                                "Argument": "10",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 30
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "Returns": []
                      }
                    ],
                    "Depth": 1,
                    "EndLine": 31,
                    "StartLine": 24,
                    "Invocations": [],
                    "Variables": [],
                    "WhileBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "ForEachBlocks": [],
                    "ElseBlocks": [],
                    "Returns": []
                  }
                ],
                "Returns": [],
                "Line": 21
              },
              {
                "HasBody": false,
                "HasExpressionBody": true,
                "Name": "Meth22",
                "IsEmpty": false,
                "FullName": "Test.StateManager.Meth22()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "int",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "Line": 34
              },
              {
                "HasBody": false,
                "HasExpressionBody": false,
                "Name": "Meth23",
                "IsEmpty": true,
                "FullName": "Test.StateManager.Meth23()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "Line": 35
              },
              {
                "HasBody": false,
                "HasExpressionBody": true,
                "Name": "MethExp",
                "IsEmpty": false,
                "FullName": "Test.StateManager.MethExp()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "int",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "Line": 37
              },
              {
                "HasBody": false,
                "HasExpressionBody": true,
                "Name": "Ciaone",
                "IsEmpty": false,
                "FullName": "Test.StateManager.Ciaone()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "string",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "Line": 38
              }
            ],
            "Fields": [
              {
                "Name": "a",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 8
              },
              {
                "Name": "b",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              },
              {
                "Name": "c",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 10
              }
            ],
            "Constructors": [
              {
                "ClassRef": "Test.StateManager",
                "ReturnType": "StateManager",
                "HasBody": true,
                "HasExpressionBody": false,
                "Name": "StateManager",
                "IsEmpty": false,
                "FullName": "StateManager",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "Parameters": [
                  {
                    "Name": "a",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "this.a",
                      "Type": "int",
                      "Assignment": "a",
                      "Kind": "Assignment",
                      "AssignmentLine": 42,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "a",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 42,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "this.a",
                      "Value": null,
                      "Operation": "SimpleAssignmentExpression",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "Line": 41
              }
            ],
            "Attributes": [],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Text.Json.Serialization",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": ".NETCoreApp,Version=v6.0.AssemblyAttributes",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\obj\\Debug\\net6.0\\.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 2
      },
      {
        "Name": "System.Reflection",
        "Line": 3
      }
    ],
    "Line": 2
  },
  {
    "Name": "TestSolution.AssemblyInfo",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\obj\\Debug\\net6.0\\TestSolution.AssemblyInfo.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 11
      },
      {
        "Name": "System.Reflection",
        "Line": 12
      }
    ],
    "Line": 11
  },
  {
    "Name": "TestSolution.GlobalUsings.g",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\obj\\Debug\\net6.0\\TestSolution.GlobalUsings.g.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [],
    "Usings": [
      {
        "Name": "global::System",
        "Line": 2
      },
      {
        "Name": "global::System.Collections.Generic",
        "Line": 3
      },
      {
        "Name": "global::System.IO",
        "Line": 4
      },
      {
        "Name": "global::System.Linq",
        "Line": 5
      },
      {
        "Name": "global::System.Net.Http",
        "Line": 6
      },
      {
        "Name": "global::System.Threading",
        "Line": 7
      },
      {
        "Name": "global::System.Threading.Tasks",
        "Line": 8
      }
    ],
    "Line": 2
  }
]