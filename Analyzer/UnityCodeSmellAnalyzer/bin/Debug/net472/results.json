[
  {
    "Name": "Program",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\Program.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [
      {
        "Name": "Program",
        "FullName": "Program",
        "FullInheritanceName": "object",
        "InnerClasses": [],
        "ClassConstraints": [],
        "Modifiers": [
          "public"
        ],
        "Inheritance": "object",
        "Interfaces": [],
        "Properties": [],
        "Methods": [
          {
            "HasBody": false,
            "HasExpressionBody": false,
            "Name": "Main",
            "IsEmpty": true,
            "FullName": "Program.Main(string[])",
            "Modifiers": [
              "public",
              "static"
            ],
            "Attributes": [],
            "ReturnType": "void",
            "Parameters": [
              {
                "Name": "args",
                "Type": "string[]",
                "Assignment": null,
                "Attributes": []
              }
            ],
            "Invocations": [],
            "Variables": [],
            "Statements": [],
            "WhileBlocks": [],
            "ForEachBlocks": [],
            "ForBlocks": [],
            "IfBlocks": [],
            "SwitchBlocks": [],
            "Returns": [],
            "TryBlocks": [],
            "ExpressionBody": null,
            "Line": 5
          }
        ],
        "Fields": [],
        "Constructors": [],
        "Attributes": [],
        "Line": 3
      }
    ],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      }
    ],
    "Line": 1
  },
  {
    "Name": "State",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\State.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [
      {
        "Attributes": [],
        "Name": "Test",
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "State",
            "FullName": "Test.State",
            "FullInheritanceName": "Test.StateManager",
            "InnerClasses": [],
            "ClassConstraints": [],
            "Modifiers": [
              "public"
            ],
            "Inheritance": "Test.StateManager",
            "Interfaces": [],
            "Properties": [],
            "Methods": [],
            "Fields": [
              {
                "Name": "b",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 7
              }
            ],
            "Constructors": [
              {
                "ClassRef": "Test.State",
                "ReturnType": "State",
                "HasBody": false,
                "HasExpressionBody": true,
                "Name": "State",
                "IsEmpty": false,
                "FullName": "State",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [
                  "Obsolete"
                ],
                "Parameters": [
                  {
                    "Name": "a",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  },
                  {
                    "Name": "b",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": {
                  "Tokens": [
                    "this.b",
                    "b"
                  ],
                  "Properties": [],
                  "Fields": [
                    "Test.State.b"
                  ],
                  "Invocations": [],
                  "Type": "int",
                  "Statement": "this.b = b",
                  "ExpressionType": "SimpleAssignmentExpression",
                  "Kind": "Literal"
                },
                "Line": 8
              },
              {
                "ClassRef": "Test.State",
                "ReturnType": "State",
                "HasBody": true,
                "HasExpressionBody": false,
                "Name": "State",
                "IsEmpty": false,
                "FullName": "State",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "Parameters": [
                  {
                    "Name": "a",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  },
                  {
                    "Name": "b",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  },
                  {
                    "Name": "c",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "this.b",
                      "Type": "int",
                      "Assignment": "b",
                      "Kind": "Assignment",
                      "AssignmentLine": 11,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "b",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 11,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "this.b",
                      "Value": null,
                      "Operation": "SimpleAssignmentExpression",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": null,
                "Line": 10
              }
            ],
            "Attributes": [],
            "Line": 5
          }
        ],
        "Usings": [],
        "Line": 3
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      }
    ],
    "Line": 1
  },
  {
    "Name": "StateInState",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [
      {
        "Attributes": [],
        "Name": "Test",
        "Interfaces": [],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "StateInState",
            "FullName": "Test.StateInState<T>",
            "FullInheritanceName": "object",
            "InnerClasses": [
              {
                "Name": "InnerState",
                "FullName": "Test.StateInState<T>.InnerState",
                "FullInheritanceName": "object",
                "InnerClasses": [],
                "ClassConstraints": [],
                "Modifiers": [
                  "public"
                ],
                "Inheritance": "object",
                "Interfaces": [],
                "Properties": [
                  {
                    "Name": "D",
                    "Type": "int",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "IsAutoProperty": false,
                    "Initializer": false,
                    "InitializerValue": null,
                    "Accessor": [
                      {
                        "AccessorType": "get",
                        "HasBody": true,
                        "HasExpressionBody": false,
                        "Name": null,
                        "IsEmpty": false,
                        "FullName": null,
                        "Modifiers": [],
                        "Attributes": [],
                        "ReturnType": null,
                        "Parameters": [],
                        "Invocations": [],
                        "Variables": [],
                        "Statements": [],
                        "WhileBlocks": [],
                        "ForEachBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "Returns": [
                          {
                            "ReturnStatement": {
                              "Tokens": [],
                              "Properties": [],
                              "Fields": [
                                "Test.StateInState<T>.InnerState.d"
                              ],
                              "Invocations": [],
                              "Type": "int",
                              "Statement": "d",
                              "ExpressionType": "IdentifierName",
                              "Kind": "Field"
                            },
                            "ReturnType": "int",
                            "Line": 24
                          }
                        ],
                        "TryBlocks": [],
                        "ExpressionBody": null,
                        "Line": 24
                      },
                      {
                        "AccessorType": "set",
                        "HasBody": true,
                        "HasExpressionBody": false,
                        "Name": null,
                        "IsEmpty": false,
                        "FullName": null,
                        "Modifiers": [
                          "protected"
                        ],
                        "Attributes": [],
                        "ReturnType": null,
                        "Parameters": [],
                        "Invocations": [],
                        "Variables": [
                          {
                            "Variable": {
                              "Name": "d",
                              "Type": "int",
                              "Assignment": "value",
                              "Kind": "Assignment",
                              "AssignmentLine": 23,
                              "AssignmentKind": "SimpleAssignmentExpression"
                            }
                          },
                          {
                            "Variable": {
                              "Name": "value",
                              "Type": "int",
                              "Kind": "Use",
                              "UseLine": 23,
                              "UseKind": "ParameterReference",
                              "AssignedTo": "d",
                              "Value": null,
                              "Operation": "SimpleAssignmentExpression",
                              "VariablesList": []
                            }
                          }
                        ],
                        "Statements": [],
                        "WhileBlocks": [],
                        "ForEachBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "Returns": [],
                        "TryBlocks": [],
                        "ExpressionBody": null,
                        "Line": 24
                      }
                    ],
                    "HasExpressionBody": false,
                    "ExpressionBody": null,
                    "Line": 24
                  }
                ],
                "Methods": [
                  {
                    "HasBody": true,
                    "HasExpressionBody": false,
                    "Name": "M",
                    "IsEmpty": false,
                    "FullName": "Test.StateInState<T>.InnerState.M()",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "ReturnType": "int",
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [
                      {
                        "ReturnStatement": {
                          "Tokens": [],
                          "Properties": [],
                          "Fields": [],
                          "Invocations": [],
                          "Type": "int",
                          "Statement": "12",
                          "ExpressionType": "NumericLiteralExpression",
                          "Kind": "Literal"
                        },
                        "ReturnType": "int",
                        "Line": 35
                      }
                    ],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 35
                  },
                  {
                    "HasBody": false,
                    "HasExpressionBody": false,
                    "Name": "Method2",
                    "IsEmpty": true,
                    "FullName": "Test.StateInState<T>.InnerState.Method2()",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "ReturnType": "void",
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 36
                  },
                  {
                    "HasBody": true,
                    "HasExpressionBody": false,
                    "Name": "Method3",
                    "IsEmpty": false,
                    "FullName": "Test.StateInState<T>.InnerState.Method3()",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "ReturnType": "int",
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [
                      {
                        "ReturnStatement": {
                          "Tokens": [],
                          "Properties": [
                            "Test.StateInState<T>.InnerState.D"
                          ],
                          "Fields": [],
                          "Invocations": [],
                          "Type": "int",
                          "Statement": "D",
                          "ExpressionType": "IdentifierName",
                          "Kind": "Property"
                        },
                        "ReturnType": "int",
                        "Line": 37
                      }
                    ],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 37
                  },
                  {
                    "HasBody": false,
                    "HasExpressionBody": true,
                    "Name": "Ciaone2",
                    "IsEmpty": false,
                    "FullName": "Test.StateInState<T>.InnerState.Ciaone2()",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "ReturnType": "InnerState",
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "TryBlocks": [],
                    "ExpressionBody": {
                      "Tokens": [
                        "new",
                        "InnerState"
                      ],
                      "Properties": [],
                      "Fields": [],
                      "Invocations": [],
                      "Type": "Test.StateInState<T>.InnerState",
                      "Statement": "new InnerState()",
                      "ExpressionType": "ObjectCreationExpression",
                      "Kind": "Method"
                    },
                    "Line": 39
                  }
                ],
                "Fields": [
                  {
                    "Name": "d",
                    "Type": "int",
                    "Modifiers": [
                      "protected"
                    ],
                    "Assignment": null,
                    "Attributes": [],
                    "Line": 23
                  }
                ],
                "Constructors": [
                  {
                    "ClassRef": "Test.StateInState<T>.InnerState",
                    "ReturnType": "InnerState",
                    "HasBody": true,
                    "HasExpressionBody": false,
                    "Name": "InnerState",
                    "IsEmpty": false,
                    "FullName": "InnerState",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "Parameters": [],
                    "Invocations": [
                      {
                        "Name": "Method2",
                        "FullName": "Test.StateInState<T>.InnerState.Method2()",
                        "ReturnType": "Void",
                        "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                        "DefinitionLine": 36,
                        "Kind": "SourceFile",
                        "Module": null,
                        "Arguments": [],
                        "Line": 28
                      },
                      {
                        "Name": "Method3",
                        "FullName": "Test.StateInState<T>.InnerState.Method3()",
                        "ReturnType": "Int32",
                        "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                        "DefinitionLine": 37,
                        "Kind": "SourceFile",
                        "Module": null,
                        "Arguments": [],
                        "Line": 29
                      }
                    ],
                    "Variables": [
                      {
                        "Variable": {
                          "Name": "this.d",
                          "Type": "int",
                          "Assignment": "1",
                          "Kind": "Assignment",
                          "AssignmentLine": 26,
                          "AssignmentKind": "SimpleAssignmentExpression"
                        }
                      },
                      {
                        "Variable": {
                          "Name": "this.d",
                          "Type": "int",
                          "Assignment": "Method3()",
                          "Kind": "Assignment",
                          "AssignmentLine": 28,
                          "AssignmentKind": "SimpleAssignmentExpression"
                        }
                      },
                      {
                        "Variable": {
                          "Name": null,
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 26,
                          "UseKind": "Literal",
                          "AssignedTo": "this.d",
                          "Value": "1",
                          "Operation": "SimpleAssignmentExpression",
                          "VariablesList": []
                        }
                      },
                      {
                        "Variable": {
                          "Name": "Method3()",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 28,
                          "UseKind": "Invocation",
                          "AssignedTo": "this.d",
                          "Value": null,
                          "Operation": "SimpleAssignmentExpression",
                          "VariablesList": []
                        }
                      }
                    ],
                    "Statements": [],
                    "WhileBlocks": [
                      {
                        "Condition": {
                          "Tokens": [
                            "Method3",
                            "0",
                            "D",
                            "0"
                          ],
                          "Properties": [
                            "Test.StateInState<T>.InnerState.D"
                          ],
                          "Fields": [],
                          "Invocations": [
                            {
                              "Name": "Method3",
                              "FullName": "Test.StateInState<T>.InnerState.Method3()",
                              "ReturnType": "Int32",
                              "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                              "DefinitionLine": 37,
                              "Kind": "SourceFile",
                              "Module": null,
                              "Arguments": [],
                              "Line": 31
                            }
                          ],
                          "Type": "bool",
                          "Statement": "Method3() < 0 && D > 0",
                          "ExpressionType": "LogicalAndExpression",
                          "Kind": "Literal"
                        },
                        "Depth": 1,
                        "EndLine": 31,
                        "StartLine": 31,
                        "Invocations": [
                          {
                            "Name": "Method3",
                            "FullName": "Test.StateInState<T>.InnerState.Method3()",
                            "ReturnType": "Int32",
                            "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                            "DefinitionLine": 37,
                            "Kind": "SourceFile",
                            "Module": null,
                            "Arguments": [],
                            "Line": 31
                          },
                          {
                            "Name": "Method2",
                            "FullName": "Test.StateInState<T>.InnerState.Method2()",
                            "ReturnType": "Void",
                            "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                            "DefinitionLine": 36,
                            "Kind": "SourceFile",
                            "Module": null,
                            "Arguments": [],
                            "Line": 31
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      }
                    ],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 25
                  },
                  {
                    "ClassRef": "Test.StateInState<T>.InnerState",
                    "ReturnType": "InnerState",
                    "HasBody": false,
                    "HasExpressionBody": true,
                    "Name": "InnerState",
                    "IsEmpty": false,
                    "FullName": "InnerState",
                    "Modifiers": [
                      "public"
                    ],
                    "Attributes": [],
                    "Parameters": [
                      {
                        "Name": "d",
                        "Type": "int",
                        "Assignment": null,
                        "Attributes": []
                      }
                    ],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "TryBlocks": [],
                    "ExpressionBody": {
                      "Tokens": [
                        "this.d",
                        "Method3"
                      ],
                      "Properties": [],
                      "Fields": [
                        "Test.StateInState<T>.InnerState.d"
                      ],
                      "Invocations": [
                        {
                          "Name": "Method3",
                          "FullName": "Test.StateInState<T>.InnerState.Method3()",
                          "ReturnType": "Int32",
                          "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                          "DefinitionLine": 37,
                          "Kind": "SourceFile",
                          "Module": null,
                          "Arguments": [],
                          "Line": 38
                        }
                      ],
                      "Type": "int",
                      "Statement": "this.d = Method3()",
                      "ExpressionType": "SimpleAssignmentExpression",
                      "Kind": "Literal"
                    },
                    "Line": 38
                  }
                ],
                "Attributes": [],
                "Line": 21
              }
            ],
            "ClassConstraints": [],
            "Modifiers": [
              "public"
            ],
            "Inheritance": "object",
            "Interfaces": [],
            "Properties": [],
            "Methods": [
              {
                "HasBody": true,
                "HasExpressionBody": false,
                "Name": "Method1",
                "IsEmpty": false,
                "FullName": "Test.StateInState<T>.Method1(string)",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "s",
                    "Type": "string",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [
                  {
                    "Name": "Method3",
                    "FullName": "Test.StateInState<T>.InnerState.Method3()",
                    "ReturnType": "Int32",
                    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                    "DefinitionLine": 37,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 18
                  },
                  {
                    "Name": "Ciaone2",
                    "FullName": "Test.StateInState<T>.InnerState.Ciaone2()",
                    "ReturnType": "InnerState",
                    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateInState.cs",
                    "DefinitionLine": 39,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [],
                    "Line": 18
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "i",
                      "Type": "InnerState",
                      "Assignment": "new InnerState()",
                      "Kind": "Definition",
                      "DefinitionLine": 16
                    }
                  }
                ],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": null,
                "Line": 15
              }
            ],
            "Fields": [
              {
                "Name": "aaaaa",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 9
              }
            ],
            "Constructors": [
              {
                "ClassRef": "Test.StateInState<T>",
                "ReturnType": "StateInState",
                "HasBody": false,
                "HasExpressionBody": true,
                "Name": "StateInState",
                "IsEmpty": false,
                "FullName": "StateInState",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "Parameters": [
                  {
                    "Name": "b",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": {
                  "Tokens": [
                    "aaaaa",
                    "1"
                  ],
                  "Properties": [],
                  "Fields": [
                    "Test.StateInState<T>.aaaaa"
                  ],
                  "Invocations": [],
                  "Type": "int",
                  "Statement": "aaaaa = 1",
                  "ExpressionType": "SimpleAssignmentExpression",
                  "Kind": "Literal"
                },
                "Line": 11
              },
              {
                "ClassRef": "Test.StateInState<T>",
                "ReturnType": "StateInState",
                "HasBody": false,
                "HasExpressionBody": false,
                "Name": "StateInState",
                "IsEmpty": true,
                "FullName": "StateInState",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": null,
                "Line": 13
              }
            ],
            "Attributes": [],
            "Line": 6
          }
        ],
        "Usings": [],
        "Line": 4
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Text.Json.Serialization",
        "Line": 2
      }
    ],
    "Line": 1
  },
  {
    "Name": "StateManager",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [
      {
        "Attributes": [],
        "Name": "Test",
        "Interfaces": [
          {
            "Name": "ITest",
            "Modifiers": [
              "public"
            ],
            "Methods": [],
            "Properties": [
              {
                "Name": "P",
                "Type": "int",
                "Modifiers": [],
                "Attributes": [],
                "IsAutoProperty": true,
                "Initializer": false,
                "InitializerValue": null,
                "Accessor": [
                  {
                    "AccessorType": "get",
                    "HasBody": false,
                    "HasExpressionBody": false,
                    "Name": null,
                    "IsEmpty": true,
                    "FullName": null,
                    "Modifiers": [],
                    "Attributes": [],
                    "ReturnType": null,
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 10
                  }
                ],
                "HasExpressionBody": false,
                "ExpressionBody": null,
                "Line": 10
              }
            ],
            "Attributes": [],
            "Line": 8
          }
        ],
        "Namespaces": [],
        "Classes": [
          {
            "Name": "StateManager",
            "FullName": "Test.StateManager",
            "FullInheritanceName": "object",
            "InnerClasses": [],
            "ClassConstraints": [],
            "Modifiers": [
              "public",
              "abstract"
            ],
            "Inheritance": "object",
            "Interfaces": [
              "ITest"
            ],
            "Properties": [
              {
                "Name": "D",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "IsAutoProperty": false,
                "Initializer": false,
                "InitializerValue": null,
                "Accessor": [],
                "HasExpressionBody": true,
                "ExpressionBody": {
                  "Tokens": [
                    "d"
                  ],
                  "Properties": [],
                  "Fields": [
                    "Test.StateManager.d"
                  ],
                  "Invocations": [],
                  "Type": "int",
                  "Statement": "d",
                  "ExpressionType": "IdentifierName",
                  "Kind": "Field"
                },
                "Line": 20
              },
              {
                "Name": "A",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [
                  "JsonIgnore"
                ],
                "IsAutoProperty": false,
                "Initializer": false,
                "InitializerValue": null,
                "Accessor": [
                  {
                    "AccessorType": "get",
                    "HasBody": true,
                    "HasExpressionBody": false,
                    "Name": null,
                    "IsEmpty": false,
                    "FullName": null,
                    "Modifiers": [],
                    "Attributes": [],
                    "ReturnType": null,
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [
                      {
                        "ReturnStatement": {
                          "Tokens": [],
                          "Properties": [],
                          "Fields": [
                            "Test.StateManager.a"
                          ],
                          "Invocations": [],
                          "Type": "int",
                          "Statement": "a",
                          "ExpressionType": "IdentifierName",
                          "Kind": "Field"
                        },
                        "ReturnType": "int",
                        "Line": 23
                      }
                    ],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 23
                  },
                  {
                    "AccessorType": "set",
                    "HasBody": true,
                    "HasExpressionBody": false,
                    "Name": null,
                    "IsEmpty": false,
                    "FullName": null,
                    "Modifiers": [],
                    "Attributes": [],
                    "ReturnType": null,
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [
                      {
                        "Variable": {
                          "Name": "a",
                          "Type": "int",
                          "Assignment": "value",
                          "Kind": "Assignment",
                          "AssignmentLine": 22,
                          "AssignmentKind": "SimpleAssignmentExpression"
                        }
                      },
                      {
                        "Variable": {
                          "Name": "value",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 22,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "a",
                          "Value": null,
                          "Operation": "SimpleAssignmentExpression",
                          "VariablesList": []
                        }
                      }
                    ],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 23
                  }
                ],
                "HasExpressionBody": false,
                "ExpressionBody": null,
                "Line": 22
              },
              {
                "Name": "B",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "IsAutoProperty": false,
                "Initializer": false,
                "InitializerValue": null,
                "Accessor": [
                  {
                    "AccessorType": "get",
                    "HasBody": true,
                    "HasExpressionBody": false,
                    "Name": null,
                    "IsEmpty": false,
                    "FullName": null,
                    "Modifiers": [],
                    "Attributes": [],
                    "ReturnType": null,
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [
                      {
                        "ReturnStatement": {
                          "Tokens": [],
                          "Properties": [],
                          "Fields": [
                            "Test.StateManager.b"
                          ],
                          "Invocations": [],
                          "Type": "int",
                          "Statement": "b",
                          "ExpressionType": "IdentifierName",
                          "Kind": "Field"
                        },
                        "ReturnType": "int",
                        "Line": 26
                      }
                    ],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 26
                  },
                  {
                    "AccessorType": "set",
                    "HasBody": true,
                    "HasExpressionBody": false,
                    "Name": null,
                    "IsEmpty": false,
                    "FullName": null,
                    "Modifiers": [],
                    "Attributes": [],
                    "ReturnType": null,
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [
                      {
                        "Variable": {
                          "Name": "b",
                          "Type": "int",
                          "Assignment": "value",
                          "Kind": "Assignment",
                          "AssignmentLine": 26,
                          "AssignmentKind": "SimpleAssignmentExpression"
                        }
                      },
                      {
                        "Variable": {
                          "Name": "value",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 26,
                          "UseKind": "ParameterReference",
                          "AssignedTo": "b",
                          "Value": null,
                          "Operation": "SimpleAssignmentExpression",
                          "VariablesList": []
                        }
                      }
                    ],
                    "Statements": [],
                    "WhileBlocks": [
                      {
                        "Condition": {
                          "Tokens": [
                            "Meth22",
                            "0",
                            "Meth22",
                            "0"
                          ],
                          "Properties": [],
                          "Fields": [],
                          "Invocations": [
                            {
                              "Name": "Meth22",
                              "FullName": "Test.StateManager.Meth22()",
                              "ReturnType": "Int32",
                              "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                              "DefinitionLine": 79,
                              "Kind": "SourceFile",
                              "Module": null,
                              "Arguments": [],
                              "Line": 27
                            },
                            {
                              "Name": "Meth22",
                              "FullName": "Test.StateManager.Meth22()",
                              "ReturnType": "Int32",
                              "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                              "DefinitionLine": 79,
                              "Kind": "SourceFile",
                              "Module": null,
                              "Arguments": [],
                              "Line": 27
                            }
                          ],
                          "Type": "bool",
                          "Statement": "Meth22() < 0 && Meth22() > 0",
                          "ExpressionType": "LogicalAndExpression",
                          "Kind": "Literal"
                        },
                        "Depth": 1,
                        "EndLine": 27,
                        "StartLine": 27,
                        "Invocations": [
                          {
                            "Name": "Meth22",
                            "FullName": "Test.StateManager.Meth22()",
                            "ReturnType": "Int32",
                            "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                            "DefinitionLine": 79,
                            "Kind": "SourceFile",
                            "Module": null,
                            "Arguments": [],
                            "Line": 27
                          },
                          {
                            "Name": "Meth22",
                            "FullName": "Test.StateManager.Meth22()",
                            "ReturnType": "Int32",
                            "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                            "DefinitionLine": 79,
                            "Kind": "SourceFile",
                            "Module": null,
                            "Arguments": [],
                            "Line": 27
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      }
                    ],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 27
                  }
                ],
                "HasExpressionBody": false,
                "ExpressionBody": null,
                "Line": 24
              },
              {
                "Name": "C",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "IsAutoProperty": true,
                "Initializer": true,
                "InitializerValue": {
                  "Tokens": [
                    "0"
                  ],
                  "Properties": [],
                  "Fields": [],
                  "Invocations": [],
                  "Type": "int",
                  "Statement": "0",
                  "ExpressionType": "NumericLiteralExpression",
                  "Kind": "Literal"
                },
                "Accessor": [
                  {
                    "AccessorType": "get",
                    "HasBody": false,
                    "HasExpressionBody": false,
                    "Name": null,
                    "IsEmpty": true,
                    "FullName": null,
                    "Modifiers": [],
                    "Attributes": [],
                    "ReturnType": null,
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 29
                  },
                  {
                    "AccessorType": "set",
                    "HasBody": false,
                    "HasExpressionBody": false,
                    "Name": null,
                    "IsEmpty": true,
                    "FullName": null,
                    "Modifiers": [],
                    "Attributes": [],
                    "ReturnType": null,
                    "Parameters": [],
                    "Invocations": [],
                    "Variables": [],
                    "Statements": [],
                    "WhileBlocks": [],
                    "ForEachBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "Returns": [],
                    "TryBlocks": [],
                    "ExpressionBody": null,
                    "Line": 29
                  }
                ],
                "HasExpressionBody": false,
                "ExpressionBody": null,
                "Line": 29
              },
              {
                "Name": "P",
                "Type": "int",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "IsAutoProperty": false,
                "Initializer": false,
                "InitializerValue": null,
                "Accessor": [],
                "HasExpressionBody": true,
                "ExpressionBody": {
                  "Tokens": [
                    "a",
                    "+",
                    "d"
                  ],
                  "Properties": [],
                  "Fields": [
                    "Test.StateManager.a",
                    "Test.StateManager.d"
                  ],
                  "Invocations": [],
                  "Type": "int",
                  "Statement": "a + d",
                  "ExpressionType": "AddExpression",
                  "Kind": "Method"
                },
                "Line": 31
              }
            ],
            "Methods": [
              {
                "HasBody": true,
                "HasExpressionBody": false,
                "Name": "MethodArg",
                "IsEmpty": false,
                "FullName": "Test.StateManager.MethodArg(int, bool, Test.State)",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "void",
                "Parameters": [
                  {
                    "Name": "a",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  },
                  {
                    "Name": "b",
                    "Type": "bool",
                    "Assignment": null,
                    "Attributes": []
                  },
                  {
                    "Name": "s",
                    "Type": "State",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [
                  {
                    "Condition": {
                      "Tokens": [
                        "a",
                        "c",
                        "0"
                      ],
                      "Properties": [],
                      "Fields": [
                        "Test.StateManager.c"
                      ],
                      "Invocations": [],
                      "Type": "bool",
                      "Statement": "(a = c) == 0",
                      "ExpressionType": "EqualsExpression",
                      "Kind": "Method"
                    },
                    "Depth": 1,
                    "EndLine": 35,
                    "StartLine": 35,
                    "Invocations": [
                      {
                        "Name": "WriteLine",
                        "FullName": "System.Console.WriteLine(int)",
                        "ReturnType": "Void",
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": "MetadataFile",
                        "Module": "CommonLanguageRuntimeLibrary",
                        "Arguments": [
                          {
                            "Argument": "a",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 35
                      }
                    ],
                    "Variables": [
                      {
                        "Variable": {
                          "Name": "a",
                          "Type": "int",
                          "Assignment": "c",
                          "Kind": "Assignment",
                          "AssignmentLine": 34,
                          "AssignmentKind": "SimpleAssignmentExpression"
                        }
                      },
                      {
                        "Variable": {
                          "Name": "c",
                          "Type": "int",
                          "Kind": "Use",
                          "UseLine": 34,
                          "UseKind": "FieldReference",
                          "AssignedTo": "a",
                          "Value": null,
                          "Operation": "SimpleAssignmentExpression",
                          "VariablesList": []
                        }
                      }
                    ],
                    "WhileBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "ForEachBlocks": [],
                    "ElseBlocks": [],
                    "TryBlocks": [],
                    "Returns": []
                  }
                ],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": null,
                "Line": 33
              },
              {
                "HasBody": true,
                "HasExpressionBody": false,
                "Name": "SwitchMeth",
                "IsEmpty": false,
                "FullName": "Test.StateManager.SwitchMeth()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [
                  {
                    "Name": "MethodArg",
                    "FullName": "Test.StateManager.MethodArg(int, bool, Test.State)",
                    "ReturnType": "Void",
                    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                    "DefinitionLine": 33,
                    "Kind": "SourceFile",
                    "Module": null,
                    "Arguments": [
                      {
                        "Argument": "1",
                        "IsInvocation": false,
                        "IsLiteral": false
                      },
                      {
                        "Argument": "false",
                        "IsInvocation": false,
                        "IsLiteral": false
                      },
                      {
                        "Argument": "new State(1, 2)",
                        "IsInvocation": true,
                        "IsLiteral": false
                      }
                    ],
                    "Line": 40
                  }
                ],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "bbb",
                      "Type": "int",
                      "Assignment": "0",
                      "Kind": "Definition",
                      "DefinitionLine": 40
                    }
                  },
                  {
                    "Variable": {
                      "Name": "aa",
                      "Type": "int",
                      "Assignment": "A",
                      "Kind": "Definition",
                      "DefinitionLine": 43
                    }
                  }
                ],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [
                  {
                    "Condition": {
                      "Tokens": [
                        "A",
                        "0",
                        "bbb",
                        "0",
                        "c",
                        "1"
                      ],
                      "Properties": [
                        "Test.StateManager.A"
                      ],
                      "Fields": [
                        "Test.StateManager.c"
                      ],
                      "Invocations": [],
                      "Type": "bool",
                      "Statement": "A > 0 && bbb < 0 || c > 1",
                      "ExpressionType": "LogicalOrExpression",
                      "Kind": "Literal"
                    },
                    "Else": null,
                    "DanglingElse": true,
                    "Depth": 1,
                    "EndLine": 42,
                    "StartLine": 42,
                    "Invocations": [
                      {
                        "Name": "WriteLine",
                        "FullName": "System.Console.WriteLine(string)",
                        "ReturnType": "Void",
                        "FileName": null,
                        "DefinitionLine": 1,
                        "Kind": "MetadataFile",
                        "Module": "CommonLanguageRuntimeLibrary",
                        "Arguments": [
                          {
                            "Argument": "\"A\"",
                            "IsInvocation": false,
                            "IsLiteral": false
                          }
                        ],
                        "Line": 42
                      }
                    ],
                    "Variables": [],
                    "WhileBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "ForEachBlocks": [],
                    "ElseBlocks": [],
                    "TryBlocks": [],
                    "Returns": []
                  }
                ],
                "SwitchBlocks": [
                  {
                    "Condition": {
                      "Tokens": [
                        "A"
                      ],
                      "Properties": [
                        "Test.StateManager.A"
                      ],
                      "Fields": [],
                      "Invocations": [],
                      "Type": "int",
                      "Statement": "A",
                      "ExpressionType": "IdentifierName",
                      "Kind": "Property"
                    },
                    "CaseBranches": [
                      {
                        "labels": [
                          "case 0:",
                          "case 2:"
                        ],
                        "EndLine": 49,
                        "StartLine": 47,
                        "Invocations": [
                          {
                            "Name": "WriteLine",
                            "FullName": "System.Console.WriteLine(int)",
                            "ReturnType": "Void",
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": "MetadataFile",
                            "Module": "CommonLanguageRuntimeLibrary",
                            "Arguments": [
                              {
                                "Argument": "0",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 49
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      },
                      {
                        "labels": [
                          "case 1:"
                        ],
                        "EndLine": 50,
                        "StartLine": 50,
                        "Invocations": [],
                        "Variables": [],
                        "WhileBlocks": [
                          {
                            "Condition": {
                              "Tokens": [
                                "B",
                                "10"
                              ],
                              "Properties": [
                                "Test.StateManager.B"
                              ],
                              "Fields": [],
                              "Invocations": [],
                              "Type": "bool",
                              "Statement": "B > 10",
                              "ExpressionType": "GreaterThanExpression",
                              "Kind": "Method"
                            },
                            "Depth": 2,
                            "EndLine": 50,
                            "StartLine": 50,
                            "Invocations": [],
                            "Variables": [
                              {
                                "Variable": {
                                  "Name": "B",
                                  "Type": "int",
                                  "Assignment": "1",
                                  "Kind": "Assignment",
                                  "AssignmentLine": 49,
                                  "AssignmentKind": "SubtractAssignmentExpression"
                                }
                              },
                              {
                                "Variable": {
                                  "Name": null,
                                  "Type": "int",
                                  "Kind": "Use",
                                  "UseLine": 49,
                                  "UseKind": "Literal",
                                  "AssignedTo": "B",
                                  "Value": "1",
                                  "Operation": "SubtractAssignmentExpression",
                                  "VariablesList": []
                                }
                              }
                            ],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          }
                        ],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      },
                      {
                        "labels": [
                          "default:"
                        ],
                        "EndLine": 51,
                        "StartLine": 51,
                        "Invocations": [
                          {
                            "Name": "WriteLine",
                            "FullName": "System.Console.WriteLine(int)",
                            "ReturnType": "Void",
                            "FileName": null,
                            "DefinitionLine": 1,
                            "Kind": "MetadataFile",
                            "Module": "CommonLanguageRuntimeLibrary",
                            "Arguments": [
                              {
                                "Argument": "10",
                                "IsInvocation": false,
                                "IsLiteral": false
                              }
                            ],
                            "Line": 51
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [],
                        "Returns": []
                      }
                    ],
                    "Depth": 1,
                    "EndLine": 52,
                    "StartLine": 45,
                    "Invocations": [],
                    "Variables": [],
                    "WhileBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "ForEachBlocks": [],
                    "ElseBlocks": [],
                    "TryBlocks": [],
                    "Returns": []
                  }
                ],
                "Returns": [],
                "TryBlocks": [
                  {
                    "CatchBlocks": [
                      {
                        "Declaration": "(Exception)",
                        "Filter": {
                          "Tokens": [
                            "A",
                            "1"
                          ],
                          "Properties": [
                            "Test.StateManager.A"
                          ],
                          "Fields": [],
                          "Invocations": [],
                          "Type": "bool",
                          "Statement": "A == 1",
                          "ExpressionType": "EqualsExpression",
                          "Kind": "Method"
                        },
                        "EndLine": 66,
                        "StartLine": 58,
                        "Invocations": [
                          {
                            "Name": "Meth22",
                            "FullName": "Test.StateManager.Meth22()",
                            "ReturnType": "Int32",
                            "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                            "DefinitionLine": 79,
                            "Kind": "SourceFile",
                            "Module": null,
                            "Arguments": [],
                            "Line": 60
                          }
                        ],
                        "Variables": [],
                        "WhileBlocks": [],
                        "ForBlocks": [],
                        "IfBlocks": [],
                        "SwitchBlocks": [],
                        "ForEachBlocks": [],
                        "ElseBlocks": [],
                        "TryBlocks": [
                          {
                            "CatchBlocks": [
                              {
                                "Declaration": "(Exception)",
                                "Filter": null,
                                "EndLine": 65,
                                "StartLine": 65,
                                "Invocations": [
                                  {
                                    "Name": "Meth23",
                                    "FullName": "Test.StateManager.Meth23()",
                                    "ReturnType": "Void",
                                    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                                    "DefinitionLine": 80,
                                    "Kind": "SourceFile",
                                    "Module": null,
                                    "Arguments": [],
                                    "Line": 65
                                  }
                                ],
                                "Variables": [],
                                "WhileBlocks": [],
                                "ForBlocks": [],
                                "IfBlocks": [],
                                "SwitchBlocks": [],
                                "ForEachBlocks": [],
                                "ElseBlocks": [],
                                "TryBlocks": [],
                                "Returns": []
                              }
                            ],
                            "FinallyBlock": null,
                            "EndLine": 65,
                            "StartLine": 61,
                            "Invocations": [
                              {
                                "Name": "MethExp",
                                "FullName": "Test.StateManager.MethExp()",
                                "ReturnType": "Int32",
                                "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                                "DefinitionLine": 82,
                                "Kind": "SourceFile",
                                "Module": null,
                                "Arguments": [],
                                "Line": 63
                              }
                            ],
                            "Variables": [],
                            "WhileBlocks": [],
                            "ForBlocks": [],
                            "IfBlocks": [],
                            "SwitchBlocks": [],
                            "ForEachBlocks": [],
                            "ElseBlocks": [],
                            "TryBlocks": [],
                            "Returns": []
                          }
                        ],
                        "Returns": []
                      }
                    ],
                    "FinallyBlock": null,
                    "EndLine": 66,
                    "StartLine": 54,
                    "Invocations": [
                      {
                        "Name": "Meth23",
                        "FullName": "Test.StateManager.Meth23()",
                        "ReturnType": "Void",
                        "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                        "DefinitionLine": 80,
                        "Kind": "SourceFile",
                        "Module": null,
                        "Arguments": [],
                        "Line": 56
                      }
                    ],
                    "Variables": [],
                    "WhileBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "ForEachBlocks": [],
                    "ElseBlocks": [],
                    "TryBlocks": [],
                    "Returns": []
                  },
                  {
                    "CatchBlocks": [],
                    "FinallyBlock": {
                      "EndLine": 75,
                      "StartLine": 72,
                      "Invocations": [
                        {
                          "Name": "Meth22",
                          "FullName": "Test.StateManager.Meth22()",
                          "ReturnType": "Int32",
                          "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                          "DefinitionLine": 79,
                          "Kind": "SourceFile",
                          "Module": null,
                          "Arguments": [],
                          "Line": 74
                        }
                      ],
                      "Variables": [],
                      "WhileBlocks": [],
                      "ForBlocks": [],
                      "IfBlocks": [],
                      "SwitchBlocks": [],
                      "ForEachBlocks": [],
                      "ElseBlocks": [],
                      "TryBlocks": [],
                      "Returns": []
                    },
                    "EndLine": 75,
                    "StartLine": 68,
                    "Invocations": [
                      {
                        "Name": "Meth23",
                        "FullName": "Test.StateManager.Meth23()",
                        "ReturnType": "Void",
                        "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                        "DefinitionLine": 80,
                        "Kind": "SourceFile",
                        "Module": null,
                        "Arguments": [],
                        "Line": 70
                      }
                    ],
                    "Variables": [],
                    "WhileBlocks": [],
                    "ForBlocks": [],
                    "IfBlocks": [],
                    "SwitchBlocks": [],
                    "ForEachBlocks": [],
                    "ElseBlocks": [],
                    "TryBlocks": [],
                    "Returns": []
                  }
                ],
                "ExpressionBody": null,
                "Line": 37
              },
              {
                "HasBody": false,
                "HasExpressionBody": true,
                "Name": "Meth22",
                "IsEmpty": false,
                "FullName": "Test.StateManager.Meth22()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "int",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": {
                  "Tokens": [
                    "10"
                  ],
                  "Properties": [],
                  "Fields": [],
                  "Invocations": [],
                  "Type": "int",
                  "Statement": "10",
                  "ExpressionType": "NumericLiteralExpression",
                  "Kind": "Literal"
                },
                "Line": 79
              },
              {
                "HasBody": false,
                "HasExpressionBody": false,
                "Name": "Meth23",
                "IsEmpty": true,
                "FullName": "Test.StateManager.Meth23()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "void",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": null,
                "Line": 80
              },
              {
                "HasBody": false,
                "HasExpressionBody": true,
                "Name": "MethExp",
                "IsEmpty": false,
                "FullName": "Test.StateManager.MethExp()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "int",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": {
                  "Tokens": [
                    "a",
                    "+",
                    "Meth22"
                  ],
                  "Properties": [],
                  "Fields": [
                    "Test.StateManager.a"
                  ],
                  "Invocations": [
                    {
                      "Name": "Meth22",
                      "FullName": "Test.StateManager.Meth22()",
                      "ReturnType": "Int32",
                      "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\StateManager.cs",
                      "DefinitionLine": 79,
                      "Kind": "SourceFile",
                      "Module": null,
                      "Arguments": [],
                      "Line": 82
                    }
                  ],
                  "Type": "int",
                  "Statement": "a + Meth22()",
                  "ExpressionType": "AddExpression",
                  "Kind": "Method"
                },
                "Line": 82
              },
              {
                "HasBody": false,
                "HasExpressionBody": true,
                "Name": "Ciaone",
                "IsEmpty": false,
                "FullName": "Test.StateManager.Ciaone()",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "ReturnType": "string",
                "Parameters": [],
                "Invocations": [],
                "Variables": [],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": {
                  "Tokens": [
                    "\"Ciaone\"",
                    "+",
                    "\"\""
                  ],
                  "Properties": [],
                  "Fields": [],
                  "Invocations": [],
                  "Type": "string",
                  "Statement": "\"Ciaone\" + \"\"",
                  "ExpressionType": "AddExpression",
                  "Kind": "Method"
                },
                "Line": 83
              }
            ],
            "Fields": [
              {
                "Name": "a",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 15
              },
              {
                "Name": "b",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 16
              },
              {
                "Name": "c",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 17
              },
              {
                "Name": "d",
                "Type": "int",
                "Modifiers": [
                  "protected"
                ],
                "Assignment": null,
                "Attributes": [],
                "Line": 18
              }
            ],
            "Constructors": [
              {
                "ClassRef": "Test.StateManager",
                "ReturnType": "StateManager",
                "HasBody": true,
                "HasExpressionBody": false,
                "Name": "StateManager",
                "IsEmpty": false,
                "FullName": "StateManager",
                "Modifiers": [
                  "public"
                ],
                "Attributes": [],
                "Parameters": [
                  {
                    "Name": "a",
                    "Type": "int",
                    "Assignment": null,
                    "Attributes": []
                  }
                ],
                "Invocations": [],
                "Variables": [
                  {
                    "Variable": {
                      "Name": "this.a",
                      "Type": "int",
                      "Assignment": "a",
                      "Kind": "Assignment",
                      "AssignmentLine": 87,
                      "AssignmentKind": "SimpleAssignmentExpression"
                    }
                  },
                  {
                    "Variable": {
                      "Name": "a",
                      "Type": "int",
                      "Kind": "Use",
                      "UseLine": 87,
                      "UseKind": "ParameterReference",
                      "AssignedTo": "this.a",
                      "Value": null,
                      "Operation": "SimpleAssignmentExpression",
                      "VariablesList": []
                    }
                  }
                ],
                "Statements": [],
                "WhileBlocks": [],
                "ForEachBlocks": [],
                "ForBlocks": [],
                "IfBlocks": [],
                "SwitchBlocks": [],
                "Returns": [],
                "TryBlocks": [],
                "ExpressionBody": null,
                "Line": 86
              }
            ],
            "Attributes": [],
            "Line": 13
          }
        ],
        "Usings": [],
        "Line": 5
      }
    ],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 1
      },
      {
        "Name": "System.Runtime.ExceptionServices",
        "Line": 2
      },
      {
        "Name": "System.Text.Json.Serialization",
        "Line": 3
      }
    ],
    "Line": 1
  },
  {
    "Name": ".NETCoreApp,Version=v6.0.AssemblyAttributes",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\obj\\Debug\\net6.0\\.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 2
      },
      {
        "Name": "System.Reflection",
        "Line": 3
      }
    ],
    "Line": 2
  },
  {
    "Name": "TestSolution.AssemblyInfo",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\obj\\Debug\\net6.0\\TestSolution.AssemblyInfo.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [],
    "Usings": [
      {
        "Name": "System",
        "Line": 11
      },
      {
        "Name": "System.Reflection",
        "Line": 12
      }
    ],
    "Line": 11
  },
  {
    "Name": "TestSolution.GlobalUsings.g",
    "FileName": "D:\\progetti\\UnityCodeSmellAnalyzer\\example\\UnityProjectExample\\Assets\\ExampleScript\\TestSolution\\obj\\Debug\\net6.0\\TestSolution.GlobalUsings.g.cs",
    "Language": "C#",
    "Interfaces": [],
    "Namespaces": [],
    "Classes": [],
    "Usings": [
      {
        "Name": "global::System",
        "Line": 2
      },
      {
        "Name": "global::System.Collections.Generic",
        "Line": 3
      },
      {
        "Name": "global::System.IO",
        "Line": 4
      },
      {
        "Name": "global::System.Linq",
        "Line": 5
      },
      {
        "Name": "global::System.Net.Http",
        "Line": 6
      },
      {
        "Name": "global::System.Threading",
        "Line": 7
      },
      {
        "Name": "global::System.Threading.Tasks",
        "Line": 8
      }
    ],
    "Line": 2
  }
]